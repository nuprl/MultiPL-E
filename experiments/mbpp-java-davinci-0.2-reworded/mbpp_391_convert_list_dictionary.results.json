{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdz6xxeim.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> temp = new HashMap<String,Long>();\n            temp.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),temp);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qh7skf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiidbpxji.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            h2.put(l2.get(i),l3.get(i));\n            h1.put(l1.get(i),h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurfp23l1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(hm.containsKey(l1.get(i))) {\n                hm2 = hm.get(l1.get(i));\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n            else {\n                hm2 = new HashMap<String,Long>();\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl1d7yvdu.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwkvqbzg.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprh_z7f9_.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++){\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_51ztux.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++){\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkld5e8xy.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            h2.put(l2.get(i), l3.get(i));\n            h1.put(l1.get(i), h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd__c0wds.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32o115_z.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm2 = new HashMap<String,Long>();\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6e7p50rv.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodesvga1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_hmnw03.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp.get(l1.get(i)).put(l2.get(i),l3.get(i));\n            } else {\n                HashMap<String,Long> temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9nzrdgm.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyy9qwr6k.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            String key = l1.get(i);\n            HashMap<String,Long> hm2 = new HashMap<String,Long>();\n            if (hm.containsKey(key)) {\n                hm2 = hm.get(key);\n            }\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(key, hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp886qmc61.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprh_z7f9_.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy1wx0kj.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsffzk40g.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32o115_z.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186182,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1itpx8i7.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            h2.put(l2.get(i),l3.get(i));\n            h1.put(l1.get(i),h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurfp23l1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpupwrpsle.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(hm.containsKey(l1.get(i))) {\n                hm2 = hm.get(l1.get(i));\n                hm2.put(l2.get(i), l3.get(i));\n                hm.put(l1.get(i), hm2);\n            } else {\n                hm2 = new HashMap<String,Long>();\n                hm2.put(l2.get(i), l3.get(i));\n                hm.put(l1.get(i), hm2);\n            }\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186184,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbg_ufe7a.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186184,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bedr5ps.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++)\n        {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3fxf2ye.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186186,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52vn2vap.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32o115_z.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0; i<l1.size(); i++){\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            if(map.containsKey(l1.get(i))){\n                innerMap = map.get(l1.get(i));\n            }\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpphr8c_wd.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186186,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_pir15x.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                HashMap<String,Long> temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            } else {\n                HashMap<String,Long> temp2 = new HashMap<>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7gh0jpxh.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0; i<l1.size(); i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_bz6r5o.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy1wx0kj.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk92q2uo.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186189,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw881a8ng.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            h2.put(l2.get(i), l3.get(i));\n            h1.put(l1.get(i), h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd__c0wds.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(dict.containsKey(l1.get(i))) {\n                dict.get(l1.get(i)).put(l2.get(i), l3.get(i));\n            } else {\n                HashMap<String,Long> temp = new HashMap<String,Long>();\n                temp.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), temp);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186189,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6k9kiq_.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            if(map.containsKey(l1.get(i))){\n                HashMap<String,Long> innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }else{\n                HashMap<String,Long> innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186190,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcxwj3qfn.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n            }\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186191,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz498kk0d.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186191,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3swx27i.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186191,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoa2hxjsw.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186192,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs1tq1li.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (map.containsKey(l1.get(i))) {\n                HashMap<String,Long> innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n            } else {\n                HashMap<String,Long> innerMap = new HashMap<>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186192,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0i431r0.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n            }\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186194,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppigr1r41.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n            else {\n                temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186194,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph09m9lg2.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            h2.put(l2.get(i), l3.get(i));\n            h1.put(l1.get(i), h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186194,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdw5rcjs2.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> temp2 = new HashMap<String,Long>();\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186194,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ark86c0.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186195,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrrwcdha.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp029b6b1c.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21peyn1d.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            if(map.containsKey(l1.get(i))){\n                HashMap<String,Long> innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else{\n                HashMap<String,Long> innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplj9dp0__.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy1wx0kj.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp32o115_z.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm1 = new HashMap<String,Long>();\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhf4xm33.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppwkvqbzg.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> hm1 = new HashMap<String,Long>();\n            hm1.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw79ynm8i.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186199,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp572mbuur.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186200,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5uxfhdv.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> list = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        list.add(map);\n        return list;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186200,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphpnv0us1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            h2.put(l2.get(i),l3.get(i));\n            h1.put(l1.get(i),h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurfp23l1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> m1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> m2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            m2.put(l2.get(i), l3.get(i));\n            m1.put(l1.get(i), m2);\n        }\n        result.add(m1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186200,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4145svxc.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (map.containsKey(l1.get(i))) {\n                HashMap<String,Long> innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                HashMap<String,Long> innerMap = new HashMap<>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186200,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpleo304pu.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186201,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_8k34ph.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(hm.containsKey(l1.get(i))) {\n                hm2 = hm.get(l1.get(i));\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            } else {\n                hm2 = new HashMap<String,Long>();\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186202,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3v0cftqd.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(h1.containsKey(l1.get(i))) {\n                h2 = h1.get(l1.get(i));\n                h2.put(l2.get(i), l3.get(i));\n                h1.put(l1.get(i), h2);\n            } else {\n                h2 = new HashMap<String,Long>();\n                h2.put(l2.get(i), l3.get(i));\n                h1.put(l1.get(i), h2);\n            }\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186202,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyf1wsf66.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw_3oc_v.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk92q2uo.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> temp2 = new HashMap<String,Long>();\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186203,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm23z0xkr.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprh_z7f9_.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n            }\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186203,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmy5kld4.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy1wx0kj.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186205,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe5pvj61k.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm1 = new HashMap<String,Long>();\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhf4xm33.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> m1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> m2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            m2.put(l2.get(i),l3.get(i));\n            m1.put(l1.get(i),m2);\n        }\n        result.add(m1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186205,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeq9uba7.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfopqw129.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186205,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53dh67tv.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186180,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoy1wx0kj.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186205,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpolsny1aa.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186206,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps3fgvmsp.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n        }\n        hm.put(l1.get(0),hm2);\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186207,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvpor7wnd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186207,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5wfblu2e.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186208,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0xm50h_6.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodesvga1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186195,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrrwcdha.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186208,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22v2p66s.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpupwrpsle.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186209,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxv8cvik3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186179,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyy9qwr6k.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        int i = 0;\n        while(i < l1.size()) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            i++;\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186210,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzfeuixd.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186210,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnzuyn78_.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0; i<l1.size(); i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_bz6r5o.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186184,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8bedr5ps.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> hm2 = new HashMap<String,Long>();\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186211,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjqira0dw.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186201,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_8k34ph.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21peyn1d.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk92q2uo.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n        }\n        map.put(l1.get(0),map2);\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186211,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdbvw1h4.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n        }\n        map.put(l1.get(0),innerMap);\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186212,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4hprm_50.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186205,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpolsny1aa.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186212,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu06lmew.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186212,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeu06lmew.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186186,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52vn2vap.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186213,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8so4jud7.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186213,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6fz4q2i.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186214,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl9l0zm6a.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2va75vqb.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186214,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7n1c5exa.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186213,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6fz4q2i.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186188,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptk92q2uo.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm1 = new HashMap<>();\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186215,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxlnb7t_i.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm1 = new HashMap<String,Long>();\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbhf4xm33.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186215,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5tbsk7k.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186171,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgm829ww.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            if (map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n            }\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186216,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1ayds_t.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            } else {\n                temp2 = new HashMap<>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186217,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0a28lpr1.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            h2.put(l2.get(i),l3.get(i));\n            h1.put(l1.get(i),h2);\n        }\n        result.add(h1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurfp23l1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186176,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiitt_4bl.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186197,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21peyn1d.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n        }\n        hm.put(l1.get(0), hm2);\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186217,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv81l58bv.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186183,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx57vhphe.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186177,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpodesvga1.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186181,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zu0bw3m.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186217,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuc5p3n0n.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6m8aink.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map1.put(l1.get(i), map2);\n        }\n        result.add(map1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186218,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21ol89ut.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> hm2 = new HashMap<>();\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186218,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9g2w0j6.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186185,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgubew2pd.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186174,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp059t3h0l.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            hm1.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm1);\n            result.add(hm);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186220,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzfx6ifbg.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiidbpxji.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186169,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiidbpxji.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1667186201,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_8k34ph.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
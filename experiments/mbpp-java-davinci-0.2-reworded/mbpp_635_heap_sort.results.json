{
  "name": "mbpp_635_heap_sort",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n            int i = heap.size() - 1;\n            while (i > 0) {\n                int parent = (i - 1) / 2;\n                if (heap.get(i) > heap.get(parent)) {\n                    Long temp = heap.get(i);\n                    heap.set(i, heap.get(parent));\n                    heap.set(parent, temp);\n                    i = parent;\n                } else {\n                    break;\n                }\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int i = 0;\n            while (i < heap.size()) {\n                int left = 2 * i + 1;\n                int right = 2 * i + 2;\n                if (left >= heap.size()) {\n                    break;\n                }\n                int max = left;\n                if (right < heap.size() && heap.get(right) > heap.get(left)) {\n                    max = right;\n                }\n                if (heap.get(i) < heap.get(max)) {\n                    Long temp = heap.get(i);\n                    heap.set(i, heap.get(max));\n                    heap.set(max, temp);\n                    i = max;\n                } else {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_13m504.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for(Long l : iterable)\n            pq.add(l);\n        ArrayList<Long> ans = new ArrayList<>();\n        while(!pq.isEmpty())\n            ans.add(pq.poll());\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long element : iterable) {\n            heap.add(element);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>(iterable);\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : iterable) {\n            result.add(i);\n        }\n        for (int i = result.size() / 2 - 1; i >= 0; i--) {\n            heapify(result, result.size(), i);\n        }\n        for (int i = result.size() - 1; i >= 0; i--) {\n            Long temp = result.get(0);\n            result.set(0, result.get(i));\n            result.set(i, temp);\n            heapify(result, i, 0);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "/tmp/tmpolb4iwzc.java:16: error: cannot find symbol\n            heapify(result, result.size(), i);\n            ^\n  symbol:   method heapify(ArrayList<Long>,int,int)\n  location: class Problem\n/tmp/tmpolb4iwzc.java:22: error: cannot find symbol\n            heapify(result, i, 0);\n            ^\n  symbol:   method heapify(ArrayList<Long>,int,int)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n            int index = heap.size() - 1;\n            while (index > 0) {\n                int parent = (index - 1) / 2;\n                if (heap.get(index) < heap.get(parent)) {\n                    Long temp = heap.get(index);\n                    heap.set(index, heap.get(parent));\n                    heap.set(parent, temp);\n                }\n                index = parent;\n            }\n        }\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            sorted.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int index = 0;\n            while (index < heap.size()) {\n                int leftChild = 2 * index + 1;\n                int rightChild = 2 * index + 2;\n                int minIndex = index;\n                if (leftChild < heap.size() && heap.get(leftChild) < heap.get(minIndex)) {\n                    minIndex = leftChild;\n                }\n                if (rightChild < heap.size() && heap.get(rightChild) < heap.get(minIndex)) {\n                    minIndex = rightChild;\n                }\n                if (minIndex != index) {\n                    Long temp = heap.get(index);\n                    heap.set(index, heap.get(minIndex));\n                    heap.set(minIndex, temp);\n                    index = minIndex;\n                } else {\n                    break;\n                }\n            }\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188528,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        Heap<Long> heap = new Heap<Long>(iterable);\n        while (heap.size() > 0) {\n            result.add(heap.pop());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188528,
      "stdout": "",
      "stderr": "/tmp/tmp8fhqxikv.java:15: error: cannot find symbol\n        Heap<Long> heap = new Heap<Long>(iterable);\n        ^\n  symbol:   class Heap\n  location: class Problem\n/tmp/tmp8fhqxikv.java:15: error: cannot find symbol\n        Heap<Long> heap = new Heap<Long>(iterable);\n                              ^\n  symbol:   class Heap\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n            int index = heap.size() - 1;\n            while (index > 0) {\n                int parentIndex = (index - 1) / 2;\n                if (heap.get(index) > heap.get(parentIndex)) {\n                    Long temp = heap.get(index);\n                    heap.set(index, heap.get(parentIndex));\n                    heap.set(parentIndex, temp);\n                    index = parentIndex;\n                } else {\n                    break;\n                }\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int index = 0;\n            while (index < heap.size()) {\n                int leftChildIndex = 2 * index + 1;\n                int rightChildIndex = 2 * index + 2;\n                if (leftChildIndex >= heap.size()) {\n                    break;\n                }\n                int maxIndex = index;\n                if (heap.get(index) < heap.get(leftChildIndex)) {\n                    maxIndex = leftChildIndex;\n                }\n                if (rightChildIndex < heap.size() && heap.get(maxIndex) < heap.get(rightChildIndex)) {\n                    maxIndex = rightChildIndex;\n                }\n                if (maxIndex == index) {\n                    break;\n                }\n                Long temp = heap.get(index);\n                heap.set(index, heap.get(maxIndex));\n                heap.set(maxIndex, temp);\n                index = maxIndex;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4f8rjzie.java:58)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>(iterable.size(), new Comparator<Long>() {\n            @Override\n            public int compare(Long a, Long b) {\n                return a.compareTo(b);\n            }\n        });\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188527,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188532,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            res.add(pq.poll());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188532,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188532,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188533,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            sorted.add(heap.poll());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188533,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188532,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188533,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long x : iterable) {\n            pq.add(x);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188534,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188534,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188534,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return new ArrayList<Long>();\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188535,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t8961cg.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188535,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>(iterable);\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188535,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long num : iterable) {\n            heap.add(num);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188536,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> sorted = new ArrayList<>();\n        while (heap.size() > 0) {\n            sorted.add(heap.poll());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188536,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> heap = new ArrayList<Long>();\n        for (Long x : iterable) {\n            heap.add(x);\n            int i = heap.size() - 1;\n            while (i > 0) {\n                int p = (i - 1) / 2;\n                if (heap.get(p) < heap.get(i)) {\n                    Long tmp = heap.get(p);\n                    heap.set(p, heap.get(i));\n                    heap.set(i, tmp);\n                    i = p;\n                } else {\n                    break;\n                }\n            }\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.get(0));\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.remove(heap.size() - 1);\n            int i = 0;\n            while (i < heap.size()) {\n                int l = 2 * i + 1;\n                int r = 2 * i + 2;\n                int largest = i;\n                if (l < heap.size() && heap.get(l) > heap.get(largest)) {\n                    largest = l;\n                }\n                if (r < heap.size() && heap.get(r) > heap.get(largest)) {\n                    largest = r;\n                }\n                if (largest != i) {\n                    Long tmp = heap.get(largest);\n                    heap.set(largest, heap.get(i));\n                    heap.set(i, tmp);\n                    i = largest;\n                } else {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188537,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpskhbwlu8.java:56)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            ret.add(heap.poll());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188536,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            pq.add(item);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188537,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> list = new ArrayList<>();\n        for (Long i : iterable) {\n            list.add(i);\n        }\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : list) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Your code here\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdctaqnm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188539,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long num : iterable) {\n            heap.add(num);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188534,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188533,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> pq = new PriorityQueue<Long>(iterable);\n        ArrayList<Long> result = new ArrayList<Long>();\n        while(!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188531,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> ans = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188541,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188541,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for(Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while(!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            ret.add(heap.poll());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188536,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> heap = new ArrayList<>();\n        for (Long element : iterable) {\n            heap.add(element);\n            int index = heap.size() - 1;\n            while (index > 0) {\n                int parentIndex = (index - 1) / 2;\n                if (heap.get(index) > heap.get(parentIndex)) {\n                    Long temp = heap.get(parentIndex);\n                    heap.set(parentIndex, heap.get(index));\n                    heap.set(index, temp);\n                }\n                index = parentIndex;\n            }\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            Long temp = heap.get(0);\n            heap.set(0, heap.get(heap.size() - 1));\n            heap.set(heap.size() - 1, temp);\n            result.add(heap.remove(heap.size() - 1));\n            int index = 0;\n            while (index < heap.size()) {\n                int leftChildIndex = 2 * index + 1;\n                int rightChildIndex = 2 * index + 2;\n                if (leftChildIndex >= heap.size()) {\n                    break;\n                }\n                int maxIndex = index;\n                if (heap.get(index) < heap.get(leftChildIndex)) {\n                    maxIndex = leftChildIndex;\n                }\n                if (rightChildIndex < heap.size() && heap.get(maxIndex) < heap.get(rightChildIndex)) {\n                    maxIndex = rightChildIndex;\n                }\n                if (maxIndex == index) {\n                    break;\n                }\n                Long temp2 = heap.get(index);\n                heap.set(index, heap.get(maxIndex));\n                heap.set(maxIndex, temp2);\n                index = maxIndex;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugahecoi.java:57)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188533,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188534,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for(Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while(!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            ret.add(heap.poll());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188536,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>(iterable);\n        while(!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            res.add(pq.poll());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188543,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long element : iterable) {\n            heap.add(element);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188544,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>(iterable);\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188544,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> ret = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            ret.add(heap.poll());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188544,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> pq = new PriorityQueue<>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188530,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188545,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1hdtep9o.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188538,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_o9i8k4u.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            sorted.add(heap.poll());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        ArrayList<Long> result = new ArrayList<>();\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long item : iterable) {\n            heap.add(item);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188529,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188540,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        PriorityQueue<Long> q = new PriorityQueue<Long>();\n        for(Long i : iterable) {\n            q.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        while(!q.isEmpty()) {\n            res.add(q.poll());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188545,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188542,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for(Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while(pq.size() > 0) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188525,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188523,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NullPointerException\n\tat Problem.main(tmp_xxsmjmq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> res = new ArrayList<Long>();\n        while (!pq.isEmpty()) {\n            res.add(pq.poll());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        // Write your code here.\n        return iterable;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188524,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1jg85unb.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<Long>(iterable);\n        ArrayList<Long> result = new ArrayList<Long>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188535,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> pq = new PriorityQueue<Long>();\n        for (Long i : iterable) {\n            pq.add(i);\n        }\n        ArrayList<Long> ans = new ArrayList<Long>();\n        while (!pq.isEmpty()) {\n            ans.add(pq.poll());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188546,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort the given array list.\n    public static ArrayList<Long> heapSort(ArrayList<Long> iterable) {\n        PriorityQueue<Long> heap = new PriorityQueue<>();\n        for (Long i : iterable) {\n            heap.add(i);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (heap.size() > 0) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l, (long)9l, (long)2l, (long)4l, (long)6l, (long)8l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)25l, (long)35l, (long)22l, (long)85l, (long)14l, (long)65l, (long)75l, (long)25l, (long)58l)))).equals((new ArrayList<Long>(Arrays.asList((long)14l, (long)22l, (long)25l, (long)25l, (long)35l, (long)58l, (long)65l, (long)75l, (long)85l)))));\n    assert(heapSort((new ArrayList<Long>(Arrays.asList((long)7l, (long)1l, (long)9l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)5l, (long)7l, (long)9l)))));\n    }\n\n}\n",
      "timestamp": 1667188541,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
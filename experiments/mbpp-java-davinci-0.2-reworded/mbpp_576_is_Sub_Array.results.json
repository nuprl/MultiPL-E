{
  "name": "mbpp_576_is_Sub_Array",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (m > n) return false;\n        for (int i = 0; i < n - m + 1; i++) {\n            if (A.get(i).equals(B.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < m; j++) {\n                    if (!A.get(i + j).equals(B.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (!A.get(j).equals(B.get(i + j))) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (m > n)\n            return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A.get(i + j) != B.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean isSub = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        int i = 0;\n        int j = 0;\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int n = A.size();\n        int m = B.size();\n        if (n < m)\n            return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A.get(i + j) != B.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int n = A.size();\n        int m = B.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            boolean isSame = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSame = false;\n                    break;\n                }\n            }\n            if (isSame) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size())\n            return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size())\n            return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size())\n            return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        int i = 0, j = 0;\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while(i < A.size() && j < B.size()) {\n            if(A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187709,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int n = A.size();\n        int m = B.size();\n        if (m > n) return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) break;\n            }\n            if (j == m) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            int j = 0;\n            for (; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    break;\n                }\n            }\n            if (j == A.size()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while(i < A.size() && j < B.size()) {\n            if(A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if(j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187710,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if(A.size() > B.size()) return false;\n        for(int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for(int j = 0; j < A.size(); j++) {\n                if(!A.get(j).equals(B.get(i + j))) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if(isSubArray) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (n < m) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == m) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        boolean isSubArray = false;\n        if (A.size() <= B.size()) {\n            int i = 0;\n            int j = 0;\n            while (i < A.size()) {\n                if (A.get(i) == B.get(j)) {\n                    i++;\n                    j++;\n                } else {\n                    j++;\n                }\n                if (i == A.size()) {\n                    isSubArray = true;\n                }\n            }\n        }\n        return isSubArray;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (!A.get(j).equals(B.get(i + j))) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        for (int i = 0; i < n; i++) {\n            int j = 0;\n            int k = i;\n            while (j < m && k < n && A.get(k) == B.get(j)) {\n                j++;\n                k++;\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187715,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        for (int i = 0; i < A.size(); i++) {\n            if (A.get(i) != B.get(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean flag = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSub = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187706,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return (j == m);\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187704,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187711,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        return i == A.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size())\n            return false;\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size())\n            return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187708,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187722,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        int i = 0;\n        int j = 0;\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187722,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        // Write your code here\n        if(A.size() > B.size()) return false;\n        for(int i=0; i<B.size()-A.size()+1; i++) {\n            boolean flag = true;\n            for(int j=0; j<A.size(); j++) {\n                if(A.get(j) != B.get(i+j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187722,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (n < m) return false;\n        for (int i = 0; i <= n - m; i++) {\n            boolean found = true;\n            for (int j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187703,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187707,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int n = A.size();\n        int m = B.size();\n        if (m > n)\n            return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A.get(i + j) != B.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while(i < A.size() && j < B.size()) {\n            if(A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if(j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether an array array list is subarray list of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();\n    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667187699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
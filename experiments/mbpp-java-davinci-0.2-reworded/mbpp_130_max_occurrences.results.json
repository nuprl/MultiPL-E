{
  "name": "mbpp_130_max_occurrences",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpt1xtj1cd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpqab_dz9l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp2rv3qr8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpjnbrlbof.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpbixbuo4b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmplrzfa9vm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp2rv3qr8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmp4bz6ofbx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> counts = new HashMap<>();\n        for (Long num : nums) {\n            if (counts.containsKey(num)) {\n                counts.put(num, counts.get(num) + 1);\n            } else {\n                counts.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long count : counts.values()) {\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmp3kvgadit.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (!map.containsKey(num)) {\n                map.put(num, 1L);\n            } else {\n                map.put(num, map.get(num) + 1);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmp3vozki1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpqqe6au2m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpa4huifk_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Map<Long, Integer> map = new HashMap<>();\n        // for (long num : nums) {\n        //     if (map.containsKey(num)) {\n        //         map.put(num, map.get(num) + 1);\n        //     } else {\n        //         map.put(num, 1);\n        //     }\n        // }\n        // int max = 0;\n        // for (long num : map.keySet()) {\n        //     max = Math.max(max, map.get(num));\n        // }\n        // return max;\n        return nums.stream().collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).values().stream().max(Comparator.naturalOrder()).get();\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpiecogeyz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpiecogeyz.java:24: error: cannot find symbol\n        return nums.stream().collect(Collectors.groupingBy(Function.identity(), Collectors.counting())).values().stream().max(Comparator.naturalOrder()).get();\n                                                           ^\n  symbol:   variable Function\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        return Collections.max(map.values());\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpdt5z1r2r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Integer> map = new HashMap<>();\n        for(Long num : nums) {\n            if(map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1);\n            }\n        }\n        int max = 0;\n        for(Map.Entry<Long, Integer> entry : map.entrySet()) {\n            if(entry.getValue() > max) {\n                max = entry.getValue();\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpja_dlplt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpfq7hn_y0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmppeo6xrjw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpm8arz8nl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> counts = new HashMap<>();\n        for (long num : nums) {\n            if (counts.containsKey(num)) {\n                counts.put(num, counts.get(num) + 1);\n            } else {\n                counts.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : counts.keySet()) {\n            max = Math.max(max, counts.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpkzrsk8in.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpa6b1qicj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> freq = new HashMap<>();\n        for (long num : nums) {\n            if (freq.containsKey(num)) {\n                freq.put(num, freq.get(num) + 1);\n            } else {\n                freq.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : freq.keySet()) {\n            if (freq.get(key) > max) {\n                max = freq.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpkzxcva0v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpt1xtj1cd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp2rv3qr8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmps46sofed.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long i : nums) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        long max = 0;\n        for (long i : map.keySet()) {\n            max = Math.max(max, map.get(i));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmprdsrboig.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpfq7hn_y0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> freq = new HashMap<>();\n        for (Long num : nums) {\n            if (freq.containsKey(num)) {\n                freq.put(num, freq.get(num) + 1);\n            } else {\n                freq.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : freq.keySet()) {\n            if (freq.get(key) > max) {\n                max = freq.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpadutjtq3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpk_caliw0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpl6fg_r5m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            if (entry.getValue() > max) {\n                max = entry.getValue();\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmps3w946pt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpfq7hn_y0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpquxsa579.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpqab_dz9l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpquxsa579.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            long count = map.getOrDefault(num, 0L);\n            map.put(num, count + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            long count = map.get(key);\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpjecacnld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            if (entry.getValue() > max) {\n                max = entry.getValue();\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpxhv5ag8p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmplrzfa9vm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        return Collections.max(map.values());\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp2peiz452.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpjawpc562.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmps46sofed.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpqqe6au2m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp2rv3qr8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            if (entry.getValue() > max) {\n                max = entry.getValue();\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpxhv5ag8p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpa4huifk_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpxtmo4cw3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpl6fg_r5m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpt1xtj1cd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpqab_dz9l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpquxsa579.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<Long, Long>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpk_caliw0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> counts = new HashMap<>();\n        for (long num : nums) {\n            if (counts.containsKey(num)) {\n                counts.put(num, counts.get(num) + 1);\n            } else {\n                counts.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : counts.keySet()) {\n            max = Math.max(max, counts.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpkzrsk8in.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> occurrences = new HashMap<Long, Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = nums.get(i);\n            if (occurrences.containsKey(num)) {\n                occurrences.put(num, occurrences.get(num) + 1);\n            } else {\n                occurrences.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : occurrences.keySet()) {\n            if (occurrences.get(key) > max) {\n                max = occurrences.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp1ymicarx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpi9noen4z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpl6fg_r5m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (!map.containsKey(num)) {\n                map.put(num, 1L);\n            } else {\n                map.put(num, map.get(num) + 1);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmp3vozki1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            Long count = map.get(num);\n            if (count == null) {\n                map.put(num, 1L);\n            } else {\n                map.put(num, count + 1);\n            }\n        }\n        long max = 0;\n        for (Long count : map.values()) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpk3_k118h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpr067jq79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpqqe6au2m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpquxsa579.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        long max = 0;\n        for (long num : nums) {\n            long count = nums.stream().filter(n -> n == num).count();\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpw8q5lcag.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long max = 0;\n        long maxCount = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            if (entry.getValue() > maxCount) {\n                maxCount = entry.getValue();\n                max = entry.getKey();\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmporzo7r_y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (Map.Entry<Long, Long> entry : map.entrySet()) {\n            max = Math.max(max, entry.getValue());\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp14yrvgg3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmplrzfa9vm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (!map.containsKey(num)) {\n                map.put(num, 1L);\n            } else {\n                map.put(num, map.get(num) + 1);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpxs4v4sto.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmps46sofed.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpqvh17_mb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpxtmo4cw3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        long max = 0;\n        for (long num : nums) {\n            long count = Collections.frequency(nums, num);\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmplmi2pc2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpfq7hn_y0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long n : nums) {\n            if (map.containsKey(n)) {\n                map.put(n, map.get(n) + 1);\n            } else {\n                map.put(n, 1L);\n            }\n        }\n        long max = 0;\n        for (long n : map.keySet()) {\n            if (map.get(n) > max) {\n                max = map.get(n);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpw45bjq5g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpquxsa579.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmp4bz6ofbx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpa93f3vz1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpgz5gfd1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp8ij63n9k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here.\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp9khqozm5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp2rv3qr8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            max = Math.max(max, map.get(key));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpa4huifk_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            map.put(num, map.getOrDefault(num, 0L) + 1);\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpm8arz8nl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> occurrences = new HashMap<>();\n        for (long num : nums) {\n            if (occurrences.containsKey(num)) {\n                occurrences.put(num, occurrences.get(num) + 1);\n            } else {\n                occurrences.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : nums) {\n            if (occurrences.get(num) > max) {\n                max = occurrences.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmptjcr4jio.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        Map<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpy51ybnwz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmp1gqy51qe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpip1_w8b0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> freq = new HashMap<>();\n        for (Long num : nums) {\n            freq.put(num, freq.getOrDefault(num, 0L) + 1);\n        }\n        return Collections.max(freq.values());\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122531,
      "stdout": "",
      "stderr": "/tmp/tmpyn4bpk6g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for(long num : nums) {\n            if(map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for(long num : map.keySet()) {\n            if(map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "/tmp/tmphrcnr465.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpxoivihdm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (Long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmp91jc6td3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        // Write your code here\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        for (Long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n            max = Math.max(max, map.get(num));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122532,
      "stdout": "",
      "stderr": "/tmp/tmpaa4qdvri.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665509921,
      "stdout": "",
      "stderr": "/tmp/tmpftglywhl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given array list.\n    public static long maxOccurrences(ArrayList<Long> nums) {\n        HashMap<Long, Long> map = new HashMap<>();\n        for (long num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        long max = 0;\n        for (long num : map.keySet()) {\n            if (map.get(num) > max) {\n                max = map.get(num);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)2l, (long)6l, (long)5l, (long)1l, (long)6l, (long)1l, (long)2l, (long)3l, (long)2l, (long)4l, (long)6l, (long)9l, (long)1l, (long)2l)))) == (2l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)2l, (long)3l, (long)8l, (long)4l, (long)7l, (long)9l, (long)8l, (long)7l, (long)9l, (long)15l, (long)14l, (long)10l, (long)12l, (long)13l, (long)16l, (long)18l)))) == (8l));\n    assert(maxOccurrences((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)20l, (long)30l, (long)40l, (long)90l, (long)80l, (long)50l, (long)30l, (long)20l, (long)50l, (long)10l)))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122530,
      "stdout": "",
      "stderr": "/tmp/tmpgypdq_vu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
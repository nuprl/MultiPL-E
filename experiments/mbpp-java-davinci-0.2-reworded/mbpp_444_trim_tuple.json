{
  "name": "mbpp_444_trim_tuple",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to trim each pair by k in the given pair array list.\n    public static String trimTuple(ArrayList<Long> test_list, long K) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(trimTuple((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long, Long, Long>)Pair.with(5l, 3l, 2l, 1l, 4l), (Pair<Long, Long, Long, Long, Long>)Pair.with(3l, 4l, 9l, 2l, 1l), (Pair<Long, Long, Long, Long, Long>)Pair.with(9l, 1l, 2l, 3l, 5l), (Pair<Long, Long, Long, Long, Long>)Pair.with(4l, 8l, 2l, 1l, 7l)))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long, Long, Long>)Pair.with(5l, 3l, 2l, 1l, 4l), (Pair<Long, Long, Long, Long, Long>)Pair.with(3l, 4l, 9l, 2l, 1l), (Pair<Long, Long, Long, Long, Long>)Pair.with(9l, 1l, 2l, 3l, 5l), (Pair<Long, Long, Long, Long, Long>)Pair.with(4l, 8l, 2l, 1l, 7l)))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long, Long>)Pair.with(7l, 8l, 4l, 9l), (Pair<Long, Long, Long, Long>)Pair.with(11l, 8l, 12l, 4l), (Pair<Long, Long, Long, Long>)Pair.with(4l, 1l, 7l, 8l), (Pair<Long, Long, Long, Long>)Pair.with(3l, 6l, 9l, 7l)))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Pair<Long, Long>> test_pair = new ArrayList<>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            test_pair.add(Pair.with(test_list.get(i), test_list.get(i + 1)));\n        }\n        ArrayList<Pair<Long, Long>> result = new ArrayList<>();\n        for (int i = 0; i < test_pair.size(); i++) {\n            long a = test_pair.get(i).getValue0();\n            long b = test_pair.get(i).getValue1();\n            if (a < K) {\n                a = 0;\n            } else {\n                a -= K;\n            }\n            if (b < K) {\n                b = 0;\n            } else {\n                b -= K;\n            }\n            result.add(Pair.with(a, b));\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < result.size(); i++) {\n            sb.append(result.get(i).getValue0() + \" \" + result.get(i).getValue1() + \" \");\n        }\n        return sb.toString();",
    "        ArrayList<Pair<Long,Long>> pair_list = new ArrayList<Pair<Long,Long>>();\n        for(int i=0; i<test_list.size(); i+=2) {\n            pair_list.add(new Pair<Long,Long>(test_list.get(i), test_list.get(i+1)));\n        }\n        ArrayList<Pair<Long,Long>> trimmed_list = new ArrayList<Pair<Long,Long>>();\n        for(int i=0; i<pair_list.size(); i++) {\n            Pair<Long,Long> pair = pair_list.get(i);\n            if(pair.getValue0() < K) {\n                trimmed_list.add(new Pair<Long,Long>(0L, pair.getValue1()));\n            }\n            else if(pair.getValue1() > 100 - K) {\n                trimmed_list.add(new Pair<Long,Long>(pair.getValue0(), 100L));\n            }\n            else {\n                trimmed_list.add(new Pair<Long,Long>(pair.getValue0() + K, pair.getValue1() - K));\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for(int i=0; i<trimmed_list.size(); i++) {\n            Pair<Long,Long> pair = trimmed_list.get(i);\n            sb.append(pair.getValue0());\n            sb.append(\" \");\n            sb.append(pair.getValue1());\n            sb.append(\" \");\n        }\n        return sb.toString();",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) > K) {\n                result.add(test_list.get(i) - K);\n            } else {\n                result.add(0L);\n            }\n        }\n        return result.toString();",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<>();\n        for (Long l : test_list) {\n            if (l > K) {\n                result.add(l - K);\n            } else {\n                result.add(l);\n            }\n        }\n        return result.toString();",
    "        ArrayList<Pair<Long, Long>> pair_list = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            pair_list.add(new Pair<Long, Long>(test_list.get(i), test_list.get(i + 1)));\n        }\n        ArrayList<Pair<Long, Long>> trimmed_list = new ArrayList<Pair<Long, Long>>();\n        for (Pair<Long, Long> pair : pair_list) {\n            long first = pair.getValue0();\n            long second = pair.getValue1();\n            if (first < K) {\n                first = 0;\n            } else {\n                first -= K;\n            }\n            if (second > 1000000000 - K) {\n                second = 1000000000;\n            } else {\n                second += K;\n            }\n            trimmed_list.add(new Pair<Long, Long>(first, second));\n        }\n        StringBuilder sb = new StringBuilder();\n        for (Pair<Long, Long> pair : trimmed_list) {\n            sb.append(pair.getValue0());\n            sb.append(\" \");\n            sb.append(pair.getValue1());\n            sb.append(\" \");\n        }\n        return sb.toString().trim();",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        for(int i=0;i<test_list.size();i+=2){\n            long x = test_list.get(i);\n            long y = test_list.get(i+1);\n            if(x<K){\n                x=0;\n            }\n            else{\n                x-=K;\n            }\n            if(y<K){\n                y=0;\n            }\n            else{\n                y-=K;\n            }\n            result.add(x);\n            result.add(y);\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> trimmed_list = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) < K) {\n                trimmed_list.add(test_list.get(i));\n            }\n        }\n        return trimmed_list.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) > K) {\n                result.add(test_list.get(i) - K);\n            } else {\n                result.add(test_list.get(i));\n            }\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) < K) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(test_list.get(i) > K) {\n                result.add(test_list.get(i) - K);\n            } else {\n                result.add(0L);\n            }\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(test_list.get(i) > K) {\n                result.add(test_list.get(i) - K);\n            } else {\n                result.add(0L);\n            }\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            long a = test_list.get(i);\n            long b = test_list.get(i + 1);\n            if (a < K) {\n                a = 0;\n            } else {\n                a -= K;\n            }\n            if (b < K) {\n                b = 0;\n            } else {\n                b -= K;\n            }\n            sb.append(a);\n            sb.append(\" \");\n            sb.append(b);\n            sb.append(\" \");\n        }\n        return sb.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            long x = test_list.get(i);\n            long y = test_list.get(i + 1);\n            if (x < K) {\n                x = 0;\n            } else {\n                x -= K;\n            }\n            if (y < K) {\n                y = 0;\n            } else {\n                y -= K;\n            }\n            sb.append(x + \" \" + y + \" \");\n        }\n        return sb.toString();",
    "        ArrayList<Pair<Long, Long>> test_pair_list = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            test_pair_list.add(new Pair<Long, Long>(test_list.get(i), test_list.get(i + 1)));\n        }\n        ArrayList<Pair<Long, Long>> result_pair_list = new ArrayList<Pair<Long, Long>>();\n        for (Pair<Long, Long> pair : test_pair_list) {\n            long first = pair.getValue0();\n            long second = pair.getValue1();\n            if (first < K) {\n                first = 0;\n            } else {\n                first -= K;\n            }\n            if (second > 1000000000 - K) {\n                second = 1000000000;\n            } else {\n                second += K;\n            }\n            result_pair_list.add(new Pair<Long, Long>(first, second));\n        }\n        StringBuilder sb = new StringBuilder();\n        for (Pair<Long, Long> pair : result_pair_list) {\n            sb.append(pair.getValue0() + \" \" + pair.getValue1() + \" \");\n        }\n        return sb.toString().trim();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) < K) {\n                result.add(test_list.get(i));\n            } else {\n                result.add(K);\n            }\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(test_list.get(i) > K) {\n                result.add(test_list.get(i) - K);\n            } else {\n                result.add(test_list.get(i));\n            }\n        }\n        return result.toString();",
    "        ArrayList<Pair<Long, Long>> pair_list = new ArrayList<>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            pair_list.add(new Pair<>(test_list.get(i), test_list.get(i + 1)));\n        }\n        ArrayList<Pair<Long, Long>> result = new ArrayList<>();\n        for (Pair<Long, Long> pair : pair_list) {\n            long first = pair.getValue0();\n            long second = pair.getValue1();\n            if (first < K) {\n                first = 0;\n            } else {\n                first -= K;\n            }\n            if (second < K) {\n                second = 0;\n            } else {\n                second -= K;\n            }\n            result.add(new Pair<>(first, second));\n        }\n        return result.toString();",
    "        ArrayList<Pair<Long, Long>> result = new ArrayList<Pair<Long, Long>>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            long first = test_list.get(i);\n            long second = test_list.get(i + 1);\n            if (first < second) {\n                first = Math.max(first, second - K);\n            } else {\n                second = Math.max(second, first - K);\n            }\n            result.add(new Pair<Long, Long>(first, second));\n        }\n        return result.toString();",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            long x = test_list.get(i);\n            long y = test_list.get(i + 1);\n            long x_new = x - K;\n            long y_new = y - K;\n            if (x_new < 0) {\n                x_new = 0;\n            }\n            if (y_new < 0) {\n                y_new = 0;\n            }\n            result.add(x_new);\n            result.add(y_new);\n        }\n        return result.toString();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < test_list.size(); i += 2) {\n            long a = test_list.get(i);\n            long b = test_list.get(i + 1);\n            if (a < K) {\n                a = 0;\n            } else {\n                a -= K;\n            }\n            if (b < K) {\n                b = 0;\n            } else {\n                b -= K;\n            }\n            sb.append(a + \" \" + b + \" \");\n        }\n        return sb.toString();"
  ]
}
{
  "name": "mbpp_296_get_Inv_Count",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to count inversions in an array array list.\n    public static long getInvCount(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_296_get_Inv_Count.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(getInvCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)20l, (long)6l, (long)4l, (long)5l)))) == (5l));\n    assert(getInvCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (1l));\n    assert(getInvCount((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)5l, (long)6l, (long)1l)))) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    inv_count++;\n                }\n            }\n        }\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        int inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    inv_count++;\n                }\n            }\n        }\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    inv_count++;\n                }\n            }\n        }\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    inv_count++;\n                }\n            }\n        }\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    inv_count++;\n                }\n            }\n        }\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        return mergeSort(arr, 0, arr.size() - 1);",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        int n = arr.size();\n        long inv_count = 0;\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++)\n            for (int j = i + 1; j < n; j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n        return inv_count;",
    "        long inv_count = 0;\n        for (int i = 0; i < arr.size() - 1; i++)\n            for (int j = i + 1; j < arr.size(); j++)\n                if (arr.get(i) > arr.get(j))\n                    inv_count++;\n\n        return inv_count;"
  ]
}
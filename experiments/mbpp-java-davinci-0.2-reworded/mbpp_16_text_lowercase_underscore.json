{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\n    public static boolean textLowercaseUnderscore(String text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(textLowercaseUnderscore((\"aab_cbbbc\")) == (true));\n    assert(textLowercaseUnderscore((\"aab_Abbbc\")) == (false));\n    assert(textLowercaseUnderscore((\"Aaab_abbbc\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z]+_[a-z]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z]+(_[a-z]+)*\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z]+(_[a-z]+)*\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z]+(_[a-z]+)*\");",
    "        return text.matches(\"[a-z_]+\");",
    "        return text.matches(\"[a-z_]+\");"
  ]
}
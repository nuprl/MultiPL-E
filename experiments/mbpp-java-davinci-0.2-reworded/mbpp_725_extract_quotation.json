{
  "name": "mbpp_725_extract_quotation",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to extract values between quotation marks \" \" of the given string.\n    public static Object extractQuotation(String text1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_725_extract_quotation.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(extractQuotation((\"Cortex \"A53\" Based \"multi\" tasking \"Processor\"\")).equals((new Object(Arrays.asList((String)\"A53\", (String)\"multi\", (String)\"Processor\")))));\n    assert(extractQuotation((\"Cast your \"favorite\" entertainment \"apps\"\")).equals((new Object(Arrays.asList((String)\"favorite\", (String)\"apps\")))));\n    assert(extractQuotation((\"Watch content \"4k Ultra HD\" resolution with \"HDR 10\" Support\")).equals((new Object(Arrays.asList((String)\"4k Ultra HD\", (String)\"HDR 10\")))));\n    assert(extractQuotation((\"Watch content '4k Ultra HD' resolution with 'HDR 10' Support\")).equals((new Object(Arrays.asList()))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        String[] text = text1.split(\"\\\"\");\n        ArrayList<String> result = new ArrayList<String>();\n        for (int i = 1; i < text.length; i += 2) {\n            result.add(text[i]);\n        }\n        return result;",
    "        return null;",
    "        String[] text2 = text1.split(\"\\\"\");\n        ArrayList<String> text3 = new ArrayList<String>();\n        for (int i = 1; i < text2.length; i += 2) {\n            text3.add(text2[i]);\n        }\n        return text3;",
    "        // Write your code here\n        return null;",
    "        return null;",
    "        return null;",
    "        String text = text1.replaceAll(\"\\\"\", \" \");\n        String[] words = text.split(\" \");\n        List<String> list = new ArrayList<String>();\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].length() > 0) {\n                list.add(words[i]);\n            }\n        }\n        return list;",
    "        String text = text1.replaceAll(\"\\\"\", \"\");\n        String[] words = text.split(\" \");\n        List<String> list = new ArrayList<String>();\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].contains(\"\\\"\")) {\n                list.add(words[i]);\n            }\n        }\n        return list;",
    "        return null;",
    "        String[] text2 = text1.split(\"\\\"\");\n        List<String> text3 = new ArrayList<String>();\n        for (int i = 1; i < text2.length; i += 2) {\n            text3.add(text2[i]);\n        }\n        return text3;",
    "        return Pattern.compile(\"\\\"(.*?)\\\"\").matcher(text1).group(1);",
    "        // Write your code here\n        return null;",
    "        String text = text1;\n        String[] text2 = text.split(\"\\\"\");\n        List<String> text3 = new ArrayList<String>();\n        for (int i = 1; i < text2.length; i += 2) {\n            text3.add(text2[i]);\n        }\n        return text3;",
    "        String text = text1.replaceAll(\"\\\"\", \"\");\n        String[] textArray = text.split(\" \");\n        String[] textArray2 = new String[textArray.length];\n        for (int i = 0; i < textArray.length; i++) {\n            if (textArray[i].contains(\"\\\"\")) {\n                textArray2[i] = textArray[i].replaceAll(\"\\\"\", \"\");\n            } else {\n                textArray2[i] = textArray[i];\n            }\n        }\n        return textArray2;",
    "        String[] text2 = text1.split(\"\\\"\");\n        ArrayList<String> text3 = new ArrayList<String>();\n        for (int i = 1; i < text2.length; i += 2) {\n            text3.add(text2[i]);\n        }\n        return text3;",
    "        return null;",
    "        String text = text1;\n        String[] words = text.split(\" \");\n        String[] result = new String[words.length];\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].startsWith(\"\\\"\") && words[i].endsWith(\"\\\"\")) {\n                result[i] = words[i].substring(1, words[i].length() - 1);\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Pattern p = Pattern.compile(\"\\\"([^\\\"]*)\\\"\");\n        Matcher m = p.matcher(text1);\n        List<String> list = new ArrayList<String>();\n        while (m.find()) {\n            list.add(m.group(1));\n        }\n        return list;",
    "        String[] text = text1.split(\"\\\"\");\n        List<String> list = new ArrayList<String>();\n        for (int i = 1; i < text.length; i += 2) {\n            list.add(text[i]);\n        }\n        return list;",
    "        String[] text = text1.split(\" \");\n        String[] result = new String[text.length];\n        int count = 0;\n        for (int i = 0; i < text.length; i++) {\n            if (text[i].charAt(0) == '\"') {\n                result[count] = text[i].substring(1, text[i].length() - 1);\n                count++;\n            }\n        }\n        return Arrays.copyOfRange(result, 0, count);"
  ]
}
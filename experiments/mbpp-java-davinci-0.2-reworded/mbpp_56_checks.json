{
  "name": "mbpp_56_checks",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));",
    "        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long m = reverse(n);\n        return n == 2 * m - 1;",
    "        return n == (n / 10) * 19 - (n % 10);",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10 + n % 10 * 10);",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == (r - 1) * 2;",
    "        String s = String.valueOf(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r + r - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num = num / 10;\n        }\n        return (n == rev * 2 - 1);",
    "        // Write your code here\n        return false;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return n == rev - 1 || n == rev + 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = reverse(n);\n        return (n == 2 * r - 1);",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return (n == 2 * Long.parseLong(r) - 1);",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev + 1 || n == rev - 1);",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev * 2 - 1);",
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == (n / 10) * 19;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = reverse(n);\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == (n / 10) * 19 - 9;",
    "        long m = n;\n        long r = 0;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == Long.parseLong(r) * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return (n == 2 * r - 1);",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;",
    "        // Write your code here\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        return n == reverse(n + 1);",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return n == rev*2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10) * 19 - (n % 10);",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        // Write your code here\n        long r = 0;\n        long temp = n;\n        while(temp > 0) {\n            r = r * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == r * 2 - 1);",
    "        return n == (n / 10) * 19 - 9;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long nn = n;\n        while (nn > 0) {\n            r = r * 10 + nn % 10;\n            nn /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == (2 * Long.parseLong(r) - 1);",
    "        long r = reverse(n);\n        return n == 2 * r - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        String s = Long.toString(n);\n        String t = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(t) - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long m = reverse(n);\n        return n == 2 * m - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long x = n;\n        while (x > 0) {\n            r = r * 10 + x % 10;\n            x /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Write your code here\n        return false;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return rev == n / 2 + 1;",
    "        long r = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == 2 * r - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == 2*r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return Long.parseLong(s) == 2 * Long.parseLong(r) - 1;",
    "        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return (n == (rev - 1) / 2);",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        return n == reverse(n + 1) / 2;",
    "        long rev = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10) * 19 - 9;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num != 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return (n + 1 == 2 * rev);",
    "        return n == (n / 10) * 19 - 9;",
    "        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == (Long.parseLong(r) * 2) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == reverse(n + 1) / 2;",
    "        // Write your code here\n        String str = Long.toString(n);\n        StringBuilder sb = new StringBuilder(str);\n        sb.reverse();\n        long rev = Long.parseLong(sb.toString());\n        return n == 2*rev-1;",
    "        return n == (n / 10) * 19;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;",
    "        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return n == rev*2 - 1;",
    "        return n == (n % 10) * 10 + (n / 10 % 10) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Write your code here\n        return false;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10) * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long temp = n;\n        while (temp != 0) {\n            r = r * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return n == 2 * r - 1;",
    "        long m = reverse(n);\n        return n == 2 * m - 1;",
    "        long reverse = 0;\n        long temp = n;\n        while (temp != 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10 + n % 10 * (long) Math.pow(10, (int) Math.log10(n)));",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == (n / 10) * 19 - 9;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        String s = Long.toString(n);\n        String t = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(t) - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        return n == (n / 10) * 2 - 1;",
    "        return n == (n / 10) * 19;",
    "        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return (n == 2*r - 1);",
    "        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return n == 2*r - 1;",
    "        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        if(n == 2*r - 1)\n            return true;\n        return false;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return (n == rev * 2 - 1);",
    "        long rev = 0;\n        long num = n;\n        while (num != 0) {\n            rev = rev * 10 + num % 10;\n            num = num / 10;\n        }\n        return (n + 1 == 2 * rev);",
    "        long reverse = 0;\n        long temp = n;\n        while (temp != 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return (n == reverse + 1) || (n == reverse - 1);",
    "        long r = 0;\n        long x = n;\n        while (x > 0) {\n            r = r * 10 + x % 10;\n            x /= 10;\n        }\n        return n == 2 * r - 1;",
    "        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;",
    "        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        long r = reverse(n);\n        return n == 2 * r - 1;",
    "        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;",
    "        return n == 2 * Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString()) - 1;",
    "        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;"
  ]
}
{
  "name": "mbpp_777_find_sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_777_find_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            if (arr.indexOf(temp) == arr.lastIndexOf(temp)) {\n                sum += temp;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jzxq3p9.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp7dr9x1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(i -> i).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (!arr.contains(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ngtgza3.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(i -> i).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(i -> i).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (Long i : arr) {\n            if (Collections.frequency(arr, i) == 1) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphxqjt_ci.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(0, i).contains(arr.get(i)) && !arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbw_tk7a5.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            boolean flag = true;\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdi_qw5el.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (!arr.contains(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ngtgza3.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            boolean isRepeated = false;\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    isRepeated = true;\n                    break;\n                }\n            }\n            if (!isRepeated) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189609,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3c_51la.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp7dr9x1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp7dr9x1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            boolean flag = false;\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (!flag) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189609,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcugmy_ot.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189609,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbs_t24p.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189610,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189610,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189609,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbs_t24p.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long cur = arr.get(i);\n            if (arr.indexOf(cur) == arr.lastIndexOf(cur)) {\n                sum += cur;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189610,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwt4ik8hr.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        HashMap<Long, Integer> map = new HashMap<>();\n        for (long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1);\n            }\n        }\n        for (long i : arr) {\n            if (map.get(i) == 1) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189610,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0r2f3rh7.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long count = 0;\n            for (int j = 0; j < arr.size(); j++) {\n                if (arr.get(i) == arr.get(j)) {\n                    count++;\n                }\n            }\n            if (count == 1) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189611,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4tlxre81.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if(!arr.subList(i + 1, arr.size()).contains(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189611,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (long i : arr) {\n            sum += i;\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189612,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuqk52y5w.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            boolean flag = false;\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j && arr.get(i) == arr.get(j)) {\n                    flag = true;\n                    break;\n                }\n            }\n            if(!flag) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189612,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppxn01lbe.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189612,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjaz7do4j.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if(!arr.contains(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbsmtc7s.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (long i : arr) {\n            if (arr.indexOf(i) == arr.lastIndexOf(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpresuxlhb.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(i -> i).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8detsj8.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189608,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8detsj8.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))){\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp7dr9x1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                sum += arr.get(i);\n            } else {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    sum += arr.get(i);\n                }\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189614,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn9npuej8.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(!arr.contains(arr.get(i))){\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189615,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe23ubw7i.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (arr.indexOf(num) == arr.lastIndexOf(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj4219bc8.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189610,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            boolean flag = false;\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (!flag) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189615,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeuzfe0ro.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))){\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            boolean isRepeated = false;\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) == arr.get(j)) {\n                    isRepeated = true;\n                    break;\n                }\n            }\n            if (!isRepeated) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189609,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3c_51la.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyojs22vo.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (a, b) -> a + b);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189605,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                sum += arr.get(i);\n            } else {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    sum += arr.get(i);\n                }\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189615,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9mfcpya8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().reduce(0L, (x, y) -> x + y);\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Long, Integer> map = new HashMap<>();\n        for (Long i : arr) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1);\n            }\n        }\n        long sum = 0;\n        for (Long i : arr) {\n            if (map.get(i) == 1) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189616,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw4ri66py.java:31)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (!arr.subList(i + 1, arr.size()).contains(num)) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            boolean flag = false;\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j) {\n                    if(arr.get(i) == arr.get(j)) {\n                        flag = true;\n                        break;\n                    }\n                }\n            }\n            if(!flag) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189617,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzit_uc82.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppp7dr9x1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189604,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here.\n        return arr.stream().distinct().mapToLong(x -> x).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189616,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189617,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.indexOf(arr.get(i)) == arr.lastIndexOf(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189603,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdf7jdds2.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(!arr.subList(i+1, arr.size()).contains(arr.get(i))){\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189614,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (long i : arr) {\n            if (!arr.contains(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189618,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7mtid0st.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(!arr.contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189618,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpke3141gp.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189606,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (!arr.subList(i + 1, arr.size()).contains(arr.get(i))) {\n                sum += arr.get(i);\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189607,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        long sum = 0;\n        for (long i : arr) {\n            if (arr.indexOf(i) == arr.lastIndexOf(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189613,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpresuxlhb.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of non-repeated elements in a given array list.\n    public static long findSum(ArrayList<Long> arr) {\n        return arr.stream().distinct().mapToLong(Long::longValue).sum();\n    }\n    public static void main(String[] args) {\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l, (long)1l, (long)4l, (long)5l, (long)6l)))) == (21l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)1l, (long)10l, (long)9l, (long)4l, (long)2l, (long)10l, (long)10l, (long)45l, (long)4l)))) == (71l));\n    assert(findSum((new ArrayList<Long>(Arrays.asList((long)12l, (long)10l, (long)9l, (long)45l, (long)2l, (long)10l, (long)10l, (long)45l, (long)10l)))) == (78l));\n    }\n\n}\n",
      "timestamp": 1667189602,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list and an integer n, and re-arranges the first n elements of the given array array list so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\n    public static ArrayList<Long> reArrangeArray(ArrayList<Long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(reArrangeArray((new ArrayList<Long>(Arrays.asList((long)-1l, (long)2l, (long)-3l, (long)4l, (long)5l, (long)6l, (long)-7l, (long)8l, (long)9l))), (9l)).equals((new ArrayList<Long>(Arrays.asList((long)-1l, (long)-3l, (long)-7l, (long)4l, (long)5l, (long)6l, (long)2l, (long)8l, (long)9l)))));\n    assert(reArrangeArray((new ArrayList<Long>(Arrays.asList((long)12l, (long)-14l, (long)-26l, (long)13l, (long)15l))), (5l)).equals((new ArrayList<Long>(Arrays.asList((long)-14l, (long)-26l, (long)12l, (long)13l, (long)15l)))));\n    assert(reArrangeArray((new ArrayList<Long>(Arrays.asList((long)10l, (long)24l, (long)36l, (long)-42l, (long)-39l, (long)-78l, (long)85l))), (7l)).equals((new ArrayList<Long>(Arrays.asList((long)-42l, (long)-39l, (long)-78l, (long)10l, (long)24l, (long)36l, (long)85l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> neg = new ArrayList<>();\n        ArrayList<Long> pos = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                neg.add(arr.get(i));\n            } else {\n                pos.add(arr.get(i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        // Write your code here\n        ArrayList<Long> neg = new ArrayList<Long>();\n        ArrayList<Long> pos = new ArrayList<Long>();\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) < 0) {\n                neg.add(arr.get((int) i));\n            } else {\n                pos.add(arr.get((int) i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> neg = new ArrayList<>();\n        ArrayList<Long> pos = new ArrayList<>();\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) < 0) {\n                neg.add(arr.get((int)i));\n            } else {\n                pos.add(arr.get((int)i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> neg = new ArrayList<>();\n        ArrayList<Long> pos = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                neg.add(arr.get(i));\n            } else {\n                pos.add(arr.get(i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> negative = new ArrayList<Long>();\n        ArrayList<Long> positive = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                negative.add(arr.get(i));\n            } else {\n                positive.add(arr.get(i));\n            }\n        }\n        negative.addAll(positive);\n        return negative;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> negative = new ArrayList<Long>();\n        ArrayList<Long> positive = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                negative.add(arr.get(i));\n            } else {\n                positive.add(arr.get(i));\n            }\n        }\n        negative.addAll(positive);\n        return negative;",
    "        ArrayList<Long> neg = new ArrayList<>();\n        ArrayList<Long> pos = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                neg.add(arr.get(i));\n            } else {\n                pos.add(arr.get(i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                ans.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                ans.add(arr.get(i));\n            }\n        }\n        return ans;",
    "        ArrayList<Long> neg = new ArrayList<>();\n        ArrayList<Long> pos = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                neg.add(arr.get(i));\n            } else {\n                pos.add(arr.get(i));\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) < 0) {\n                result.add(arr.get((int) i));\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) >= 0) {\n                result.add(arr.get((int) i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> neg = new ArrayList<Long>();\n        ArrayList<Long> pos = new ArrayList<Long>();\n        for (Long i : arr) {\n            if (i < 0) {\n                neg.add(i);\n            } else {\n                pos.add(i);\n            }\n        }\n        neg.addAll(pos);\n        return neg;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) >= 0) {\n                result.add(arr.get(i));\n            }\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_430_parabola_directrix",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the directrix of a parabola.\n    public static long parabolaDirectrix(long a, long b, long c) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_430_parabola_directrix.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(parabolaDirectrix((5l), (3l), (2l)) == (-198l));\n    assert(parabolaDirectrix((9l), (8l), (4l)) == (-2336l));\n    assert(parabolaDirectrix((2l), (4l), (6l)) == (-130l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -c / b;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        // Write your code here.\n        return 0;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Write your code here.\n        return 0;",
    "        return -c / b;",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.\n        return 0;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return (long)Math.floor((double)b / (2.0 * a));",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.\n        return 0;",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here\n        return 0;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -(b*b)/(4*a) + c;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.\n        return 0;",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here\n        return 0;",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        // Your code here.",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        long x = (b * b) - (4 * a * c);\n        long y = 2 * a;\n        return x / y;",
    "        return -b/(2*a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b/(2*a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);",
    "        return -b / (2 * a);"
  ]
}
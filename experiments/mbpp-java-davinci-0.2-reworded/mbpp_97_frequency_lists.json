{
  "name": "mbpp_97_frequency_lists",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find frequency of each element in a flattened array list of array lists, returned in a hash map.\n    public static HashMap<Long,Long> frequencyLists(ArrayList<ArrayList<Long>> list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_97_frequency_lists.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(frequencyLists((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)5l)))))).equals((new HashMap<Long,Long>(Map.of(1l, 1l, 2l, 3l, 3l, 1l, 4l, 1l, 5l, 2l, 6l, 1l, 7l, 1l, 8l, 1l, 9l, 1l)))));\n    assert(frequencyLists((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)6l, (long)7l, (long)8l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)9l, (long)10l, (long)11l, (long)12l)))))).equals((new HashMap<Long,Long>(Map.of(1l, 1l, 2l, 1l, 3l, 1l, 4l, 1l, 5l, 1l, 6l, 1l, 7l, 1l, 8l, 1l, 9l, 1l, 10l, 1l, 11l, 1l, 12l, 1l)))));\n    assert(frequencyLists((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)20l, (long)30l, (long)40l, (long)17l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)18l, (long)16l, (long)14l, (long)13l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))))).equals((new HashMap<Long,Long>(Map.of(20l, 2l, 30l, 2l, 40l, 2l, 17l, 1l, 18l, 1l, 16l, 1l, 14l, 1l, 13l, 1l, 10l, 1l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        HashMap<Long,Long> map = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> map = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long element : list) {\n                if (map.containsKey(element)) {\n                    map.put(element, map.get(element) + 1);\n                } else {\n                    map.put(element, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> freq = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (freq.containsKey(num)) {\n                    freq.put(num, freq.get(num) + 1);\n                } else {\n                    freq.put(num, 1L);\n                }\n            }\n        }\n        return freq;",
    "        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long element : list) {\n                if (result.containsKey(element)) {\n                    result.put(element, result.get(element) + 1);\n                } else {\n                    result.put(element, 1L);\n                }\n            }\n        }\n        return result;",
    "        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (ArrayList<Long> list2 : list1) {\n            for (Long item : list2) {\n                if (result.containsKey(item)) {\n                    result.put(item, result.get(item) + 1);\n                } else {\n                    result.put(item, 1L);\n                }\n            }\n        }\n        return result;",
    "        HashMap<Long,Long> freq = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (freq.containsKey(num)) {\n                    freq.put(num, freq.get(num) + 1);\n                } else {\n                    freq.put(num, 1L);\n                }\n            }\n        }\n        return freq;",
    "        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (ArrayList<Long> list2 : list1) {\n            for (Long element : list2) {\n                if (result.containsKey(element)) {\n                    result.put(element, result.get(element) + 1);\n                } else {\n                    result.put(element, 1L);\n                }\n            }\n        }\n        return result;",
    "        HashMap<Long,Long> freq = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (freq.containsKey(num)) {\n                    freq.put(num, freq.get(num) + 1);\n                } else {\n                    freq.put(num, 1L);\n                }\n            }\n        }\n        return freq;",
    "        HashMap<Long,Long> map = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long l : list) {\n                if (map.containsKey(l)) {\n                    map.put(l, map.get(l) + 1);\n                } else {\n                    map.put(l, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> freq = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (freq.containsKey(num)) {\n                    freq.put(num, freq.get(num) + 1);\n                } else {\n                    freq.put(num, 1L);\n                }\n            }\n        }\n        return freq;",
    "        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long i : list) {\n                if (map.containsKey(i)) {\n                    map.put(i, map.get(i) + 1);\n                } else {\n                    map.put(i, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long element : list) {\n                if (result.containsKey(element)) {\n                    result.put(element, result.get(element) + 1);\n                } else {\n                    result.put(element, 1L);\n                }\n            }\n        }\n        return result;",
    "        HashMap<Long,Long> map = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long l : list) {\n                if (map.containsKey(l)) {\n                    map.put(l, map.get(l) + 1);\n                } else {\n                    map.put(l, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (ArrayList<Long> list2 : list1) {\n            for (Long num : list2) {\n                if (map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long element : list) {\n                if (result.containsKey(element)) {\n                    result.put(element, result.get(element) + 1);\n                } else {\n                    result.put(element, 1L);\n                }\n            }\n        }\n        return result;",
    "        HashMap<Long,Long> map = new HashMap<>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        // Write your code here\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long num : list) {\n                if (map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> map = new HashMap<>();\n        for(ArrayList<Long> list : list1) {\n            for(Long num : list) {\n                if(map.containsKey(num)) {\n                    map.put(num, map.get(num) + 1);\n                } else {\n                    map.put(num, 1L);\n                }\n            }\n        }\n        return map;",
    "        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (ArrayList<Long> list : list1) {\n            for (Long l : list) {\n                if (map.containsKey(l)) {\n                    map.put(l, map.get(l) + 1);\n                } else {\n                    map.put(l, 1L);\n                }\n            }\n        }\n        return map;"
  ]
}
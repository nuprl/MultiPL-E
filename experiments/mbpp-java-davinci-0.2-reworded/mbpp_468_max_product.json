{
  "name": "mbpp_468_max_product",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            prod *= arr.get(i);\n            if (prod > max) {\n                max = prod;\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;",
    "        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long min = arr.get(0);\n        long result = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long temp = max;\n            max = Math.max(Math.max(max * arr.get(i), min * arr.get(i)), arr.get(i));\n            min = Math.min(Math.min(temp * arr.get(i), min * arr.get(i)), arr.get(i));\n            if (max > result) {\n                result = max;\n            }\n        }\n        return result;",
    "        long maxProduct = 1;\n        long max = arr.get(0);\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;",
    "        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;",
    "        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long maxProduct = 1;\n        long max = arr.get(0);\n        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long tempMax = max;\n            max = Math.max(Math.max(max * curr, min * curr), curr);\n            min = Math.min(Math.min(tempMax * curr, min * curr), curr);\n            maxProduct = Math.max(max, maxProduct);\n        }\n        return maxProduct;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;",
    "        long maxProduct = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > maxProduct) {\n                    maxProduct = product;\n                }\n            }\n        }\n        return maxProduct;",
    "        long max = 1;\n        long curr = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            curr *= arr.get(i);\n            if (curr > max) max = curr;\n            if (curr == 0) curr = 1;\n        }\n        curr = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            curr *= arr.get(i);\n            if (curr > max) max = curr;\n            if (curr == 0) curr = 1;\n        }\n        return max;",
    "        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = product * arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;",
    "        long maxProduct = 0;\n        long max = 0;\n        for (long i : arr) {\n            if (i > max) {\n                max = i;\n                maxProduct = Math.max(maxProduct, max);\n            } else {\n                maxProduct = Math.max(maxProduct, i * max);\n            }\n        }\n        return maxProduct;",
    "        // Write your code here\n        long max = arr.get(0);\n        long curr = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            curr = Math.max(curr * arr.get(i), arr.get(i));\n            max = Math.max(max, curr);\n        }\n        return max;"
  ]
}
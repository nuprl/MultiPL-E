{
  "name": "mbpp_415_max_Product",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find a pair with highest product from a given array array list of integers.\n    public static long maxProduct(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)7l, (long)0l, (long)8l, (long)4l)))) == (long)Pair.with(7l, 8l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)0l, (long)-1l, (long)-2l, (long)-4l, (long)5l, (long)0l, (long)-6l)))) == (long)Pair.with(-4l, -6l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (long)Pair.with(2l, 3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long prod = arr.get(i) * arr.get(j);\n                if (prod > max) {\n                    max = prod;\n                }\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                max = Math.max(max, arr.get(i) * arr.get(j));\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                secondMax = max;\n                max = arr.get(i);\n            } else if (arr.get(i) > secondMax) {\n                secondMax = arr.get(i);\n            }\n        }\n        return max * secondMax;",
    "        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                max = Math.max(max, arr.get(i) * arr.get(j));\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        if (secondMax > max) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.size(); i++) {\n            long current = arr.get(i);\n            if (current > max) {\n                secondMax = max;\n                max = current;\n            } else if (current > secondMax) {\n                secondMax = current;\n            }\n        }\n        return max * secondMax;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > maxProduct) {\n                    maxProduct = product;\n                }\n            }\n        }\n        return maxProduct;",
    "        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                max = Math.max(max, arr.get(i) * arr.get(j));\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        if (max < secondMax) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                secondMax = max;\n                max = arr.get(i);\n            } else if (arr.get(i) > secondMax) {\n                secondMax = arr.get(i);\n            }\n        }\n        return max * secondMax;",
    "        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        if (max < secondMax) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                secondMax = max;\n                max = arr.get(i);\n            } else if (arr.get(i) > secondMax) {\n                secondMax = arr.get(i);\n            }\n        }\n        return max * secondMax;",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;",
    "        long maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > maxProduct) {\n                    maxProduct = product;\n                }\n            }\n        }\n        return maxProduct;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        if (secondMax > max) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                secondMax = max;\n                max = arr.get(i);\n            } else if (arr.get(i) > secondMax) {\n                secondMax = arr.get(i);\n            }\n        }\n        return max * secondMax;",
    "        long max = arr.get(0);\n        long secondMax = arr.get(1);\n        if (secondMax > max) {\n            long temp = max;\n            max = secondMax;\n            secondMax = temp;\n        }\n        for (int i = 2; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                secondMax = max;\n                max = arr.get(i);\n            } else if (arr.get(i) > secondMax) {\n                secondMax = arr.get(i);\n            }\n        }\n        return max * secondMax;"
  ]
}
{
  "name": "mbpp_102_snake_to_camel",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(Character.toUpperCase(words[i].charAt(0)));\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc3u5jem.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph14ye9ah.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < words.length; i++) {\n            if(i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwincs9pi.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(Character.toUpperCase(words[i].charAt(0)));\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc3u5jem.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1x_qau8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] parts = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.length; i++) {\n            if (i == 0) {\n                sb.append(parts[i]);\n            } else {\n                sb.append(parts[i].substring(0, 1).toUpperCase() + parts[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinxzwqor.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpokq90xpx.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph14ye9ah.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1x_qau8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                c = Character.toUpperCase(word.charAt(i));\n            }\n            sb.append(c);\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkn801edw.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpokq90xpx.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] parts = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < parts.length; i++) {\n            if (i == 0) {\n                sb.append(parts[i]);\n            } else {\n                sb.append(parts[i].substring(0, 1).toUpperCase() + parts[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinxzwqor.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph14ye9ah.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                result.append(words[i]);\n            } else {\n                result.append(words[i].substring(0, 1).toUpperCase());\n                result.append(words[i].substring(1));\n            }\n        }\n        return result.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4b6v6sl9.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            sb.append(Character.toUpperCase(words[i].charAt(0)));\n            sb.append(words[i].substring(1));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184247,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(Character.toUpperCase(words[i].charAt(0)));\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc3u5jem.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < words.length; i++) {\n            if(i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwincs9pi.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < words.length; i++) {\n            if(i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwincs9pi.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n                continue;\n            }\n            sb.append(words[i].substring(0, 1).toUpperCase());\n            sb.append(words[i].substring(1));\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpe8snus.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(Character.toUpperCase(words[i].charAt(0)));\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc3u5jem.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                c = word.charAt(i);\n                sb.append(Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcns_9hd4.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                result.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                result.append(word.charAt(i));\n            }\n        }\n        return result.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpos3ite42.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1x_qau8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1x_qau8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                c = word.charAt(i);\n                sb.append(Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcns_9hd4.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(Character.toUpperCase(words[i].charAt(0)));\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpczod_6ee.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            String w = words[i];\n            if (i == 0) {\n                sb.append(w);\n            } else {\n                sb.append(Character.toUpperCase(w.charAt(0)));\n                sb.append(w.substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqisp0ncy.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                i++;\n                sb.append(Character.toUpperCase(word.charAt(i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8pn03hb.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ymdz1e7.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpfo4pql.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder result = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (String w : words) {\n            result.append(Character.toUpperCase(w.charAt(0)));\n            result.append(w.substring(1).toLowerCase());\n        }\n        return result.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184249,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184246,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1x_qau8.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp23whyha_.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_spbfdn_.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
      "timestamp": 1667184244,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotql_48r.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
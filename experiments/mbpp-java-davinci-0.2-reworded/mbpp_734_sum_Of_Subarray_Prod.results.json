{
  "name": "mbpp_734_sum_Of_Subarray_Prod",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_734_sum_Of_Subarray_Prod.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for(int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for(int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n                prod = 1;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for(int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for(int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for(int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod = prod * arr.get(k);\n                }\n                sum = sum + prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188969,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find sum of products of all possible subarray lists of a given array list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarray array lists/\n    public static long sumOfSubarrayProd(ArrayList<Long> arr) {\n        long sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i; j < arr.size(); j++) {\n                long prod = 1;\n                for (int k = i; k <= j; k++) {\n                    prod *= arr.get(k);\n                }\n                sum += prod;\n            }\n        }\n        return sum;\n    }\n    public static void main(String[] args) {\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (20l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (5l));\n    assert(sumOfSubarrayProd((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)))) == (84l));\n    }\n\n}\n",
      "timestamp": 1667188968,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
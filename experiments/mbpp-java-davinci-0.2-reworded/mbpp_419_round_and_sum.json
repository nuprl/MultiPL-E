{
  "name": "mbpp_419_round_and_sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to round every number of a given array list of numbers and print the total sum multiplied by the length of the array list.\n    public static long roundAndSum(Object list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_419_round_and_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(roundAndSum((new Object(Arrays.asList((float)22.4f, (float)4.0f, (float)-16.22f, (float)-9.1f, (float)11.0f, (float)-12.22f, (float)14.2f, (float)-5.2f, (float)17.5f)))) == (243l));\n    assert(roundAndSum((new Object(Arrays.asList((long)5l, (long)2l, (long)9l, (long)24.3f, (long)29l)))) == (345l));\n    assert(roundAndSum((new Object(Arrays.asList((float)25.0f, (float)56.7f, (float)89.2f)))) == (513l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        return 0;",
    "        List<Double> list = (List<Double>) list1;\n        return list.stream().map(x -> Math.round(x)).mapToLong(x -> x).sum() * list.size();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Double> list = (List<Double>)list1;\n        double sum = 0;\n        for(double num : list){\n            sum += Math.round(num);\n        }\n        return (long)(sum * list.size());",
    "        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sum += Math.round(list.get(i));\n        }\n        return (long) (sum * list.size());",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (double d : list) {\n            sum += Math.round(d);\n        }\n        return (long) (sum * list.size());",
    "        List<Double> list = (List<Double>) list1;\n        long sum = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sum += Math.round(list.get(i));\n        }\n        return sum * list.size();",
    "        // Write your code here\n        return 0;",
    "        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (double d : list) {\n            sum += Math.round(d);\n        }\n        return (long) (sum * list.size());",
    "        // Write your code here\n        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (Double d : list) {\n            sum += Math.round(d);\n        }\n        return (long) (sum * list.size());",
    "        List<Double> list = (List<Double>) list1;\n        long sum = 0;\n        for (double num : list) {\n            sum += Math.round(num);\n        }\n        return sum * list.size();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long sum = 0;\n        if (list1 instanceof ArrayList) {\n            ArrayList<Double> list = (ArrayList<Double>) list1;\n            for (int i = 0; i < list.size(); i++) {\n                sum += Math.round(list.get(i));\n            }\n            return sum * list.size();\n        }\n        return 0;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (Double d : list) {\n            sum += Math.round(d);\n        }\n        return (long) (sum * list.size());",
    "        List<Double> list = (List<Double>) list1;\n        return Math.round(list.stream().reduce(0.0, (a, b) -> a + b)) * list.size();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long sum = 0;\n        if (list1 instanceof List) {\n            List<Double> list = (List<Double>) list1;\n            for (Double d : list) {\n                sum += Math.round(d);\n            }\n            return sum * list.size();\n        }\n        return 0;",
    "        List<Double> list = (List<Double>) list1;\n        return list.stream().map(x -> Math.round(x)).mapToLong(x -> x).sum() * list.size();",
    "        List<Integer> list = (List<Integer>) list1;\n        int sum = 0;\n        for (int i = 0; i < list.size(); i++) {\n            sum += Math.round(list.get(i));\n        }\n        return sum * list.size();",
    "        List<Double> list = (List<Double>) list1;\n        long sum = 0;\n        for (Double d : list) {\n            sum += Math.round(d);\n        }\n        return sum * list.size();",
    "        // Write your code here\n        List<Double> list = (List<Double>)list1;\n        double sum = 0;\n        for(double d : list) {\n            sum += Math.round(d);\n        }\n        return (long)(sum * list.size());",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Double> list = (List<Double>) list1;\n        double sum = 0;\n        for (double d : list) {\n            sum += Math.round(d);\n        }\n        return (long) (sum * list.size());",
    "        List<Double> list = (List<Double>)list1;\n        long sum = 0;\n        for (Double d : list) {\n            sum += Math.round(d);\n        }\n        return sum * list.size();"
  ]
}
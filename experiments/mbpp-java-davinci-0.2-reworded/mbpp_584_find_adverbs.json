{
  "name": "mbpp_584_find_adverbs",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the first adverb ending with ly and its positions in a given string.\n    public static String findAdverbs(String text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findAdverbs((\"Clearly, he has no excuse for such behavior.\")).equals((\"0-7: Clearly\")));\n    assert(findAdverbs((\"Please handle the situation carefuly\")).equals((\"28-36: carefuly\")));\n    assert(findAdverbs((\"Complete the task quickly\")).equals((\"18-25: quickly\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        String[] words = text.split(\" \");\n        for(int i = 0; i < words.length; i++) {\n            if(words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        String result = \"\";\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        String result = \"\";\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        String result = \"\";\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for(int i = 0; i < words.length; i++) {\n            if(words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                sb.append(words[i] + \" \" + i + \" \");\n            }\n        }\n        return sb.toString();",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        String[] words = text.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].endsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";"
  ]
}
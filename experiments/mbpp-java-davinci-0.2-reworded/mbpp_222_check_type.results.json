{
  "name": "mbpp_222_check_type",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0].equals(types[1]);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpo6wkpt9b.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpo6wkpt9b.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpo6wkpt9b.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class[] types = new Class[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmp4ei2ztqz.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ei2ztqz.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp4ei2ztqz.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple instanceof Pair;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmptzsvf20n.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmptzsvf20n.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmptzsvf20n.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        // return true if all the elements in pair have same data type\n        // return false otherwise\n        if(test_tuple instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n            if(pair.getValue0().getClass().equals(pair.getValue1().getClass())) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else if(test_tuple instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) test_tuple;\n            if(triplet.getValue0().getClass().equals(triplet.getValue1().getClass()) && triplet.getValue1().getClass().equals(triplet.getValue2().getClass())) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else if(test_tuple instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) test_tuple;\n            if(quartet.getValue0().getClass().equals(quartet.getValue1().getClass()) && quartet.getValue1().getClass().equals(quartet.getValue2().getClass()) && quartet.getValue2().getClass().equals(quartet.getValue3().getClass())) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else if(test_tuple instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) test_tuple;\n            if(quintet.getValue0().getClass().equals(quintet.getValue1().getClass()) && quintet.getValue1().getClass().equals(quintet.getValue2().getClass()) && quintet.getValue2().getClass().equals(quintet.getValue3\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmp6_a7lnuf.java:43: error: ')' expected\n            if(quintet.getValue0().getClass().equals(quintet.getValue1().getClass()) && quintet.getValue1().getClass().equals(quintet.getValue2().getClass()) && quintet.getValue2().getClass().equals(quintet.getValue3\n                                                                                                                                                                                                                        ^\n/tmp/tmp6_a7lnuf.java:44: error: illegal start of statement\n    }\n    ^\n/tmp/tmp6_a7lnuf.java:45: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(test_tuple instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) test_tuple;\n            return pair.getValue0().getClass().equals(pair.getValue1().getClass());\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmp7p84eejs.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp7p84eejs.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp7p84eejs.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        for (Field f : fields) {\n            if (f.getName().equals(\"val0\")) {\n                try {\n                    f.setAccessible(true);\n                    Object val0 = f.get(test_tuple);\n                    for (Field f2 : fields) {\n                        if (f2.getName().equals(\"val1\")) {\n                            f2.setAccessible(true);\n                            Object val1 = f2.get(test_tuple);\n                            if (val0.getClass() != val1.getClass()) {\n                                return false;\n                            }\n                        }\n                    }\n                } catch (IllegalAccessException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpa7rhoi0n.java:38: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa7rhoi0n.java:39: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa7rhoi0n.java:40: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpsc1xigho.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getTypeName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmp8xyf000w.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n        return pair.getValue0().getClass().equals(pair.getValue1().getClass());\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpoodmmwbs.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpoodmmwbs.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        Class<?> clazz = test_tuple.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n        Class<?> first_type = null;\n        for (Field field : fields) {\n            field.setAccessible(true);\n            try {\n                if (first_type == null) {\n                    first_type = field.get(test_tuple).getClass();\n                } else {\n                    if (first_type != field.get(test_tuple).getClass()) {\n                        result = false;\n                        break;\n                    }\n                }\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185110,
      "stdout": "",
      "stderr": "/tmp/tmppgfio147.java:36: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmppgfio147.java:37: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Object[] test_tuple_array = ((Pair)test_tuple).toArray();\n        return test_tuple_array[0].getClass() == test_tuple_array[1].getClass();\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185110,
      "stdout": "",
      "stderr": "/tmp/tmp3wgw_dg3.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp3wgw_dg3.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp3wgw_dg3.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] classes = new Class<?>[2];\n        classes[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        classes[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return classes[0] == classes[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185110,
      "stdout": "",
      "stderr": "/tmp/tmp0cnsgh95.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp0cnsgh95.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // get the class of the object\n        Class<?> test_class = test_tuple.getClass();\n        // get the name of the class\n        String test_class_name = test_class.getName();\n        // get the fields of the class\n        Field[] test_fields = test_class.getDeclaredFields();\n        // get the type of the first field\n        Class<?> test_field_type = test_fields[0].getType();\n        // get the name of the first field\n        String test_field_name = test_field_type.getName();\n        // loop through the fields\n        for (Field field : test_fields) {\n            // get the type of the field\n            Class<?> field_type = field.getType();\n            // get the name of the field\n            String field_name = field_type.getName();\n            // check if the name of the field is equal to the name of the first field\n            if (!field_name.equals(test_field_name)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpfox2r5hq.java:35: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfox2r5hq.java:36: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfox2r5hq.java:37: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        Class<?>[] classes = test_tuple.getClass().getInterfaces();\n        for (Class<?> cls : classes) {\n            if (cls.getName().equals(\"org.javatuples.Pair\")) {\n                try {\n                    Method method = cls.getDeclaredMethod(\"getValue0\");\n                    Object value0 = method.invoke(test_tuple);\n                    Method method1 = cls.getDeclaredMethod(\"getValue1\");\n                    Object value1 = method1.invoke(test_tuple);\n                    if (value0.getClass() != value1.getClass()) {\n                        result = false;\n                    }\n                } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpj8madeug.java:34: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8madeug.java:35: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj8madeug.java:36: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Object[] test_tuple_array = (Object[]) test_tuple;\n        Class<?> class_type = test_tuple_array[0].getClass();\n        for (Object test_tuple_array_element : test_tuple_array) {\n            if (test_tuple_array_element.getClass() != class_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpzzup2yim.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzzup2yim.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] classes = new Class<?>[] {\n            Pair.class,\n            Triplet.class,\n            Quartet.class,\n            Quintet.class,\n            Sextet.class,\n            Septet.class,\n            Octet.class,\n            Ennead.class,\n            Decade.class\n        };\n        for (Class<?> cls : classes) {\n            if (cls.isInstance(test_tuple)) {\n                try {\n                    Method m = cls.getMethod(\"getValue0\");\n                    Object o = m.invoke(test_tuple);\n                    Class<?> c = o.getClass();\n                    for (int i = 1; i < 10; i++) {\n                        m = cls.getMethod(\"getValue\" + i);\n                        o = m.invoke(test_tuple);\n                        if (o != null && !c.isInstance(o)) {\n                            return false;\n                        }\n                    }\n                    return true;\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpcia9goqj.java:44: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpcia9goqj.java:45: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpcia9goqj.java:46: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean result = true;\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        for (Field field : fields) {\n            try {\n                field.setAccessible(true);\n                Object value = field.get(test_tuple);\n                if (value != null) {\n                    if (value.getClass() != fields[0].get(test_tuple).getClass()) {\n                        result = false;\n                        break;\n                    }\n                }\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185113,
      "stdout": "",
      "stderr": "/tmp/tmpxlkomduw.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxlkomduw.java:32: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxlkomduw.java:33: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean result = true;\n        for (Object obj : (Object[])test_tuple) {\n            if (!obj.getClass().equals(test_tuple.getClass())) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185113,
      "stdout": "",
      "stderr": "/tmp/tmpmcopia1h.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpmcopia1h.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpmcopia1h.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = {Integer.class, Double.class, String.class};\n        boolean result = true;\n        for (Class<?> type : types) {\n            if (type.isInstance(test_tuple)) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185113,
      "stdout": "",
      "stderr": "/tmp/tmpqasp0w7n.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqasp0w7n.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> c = test_tuple.getClass();\n        if (c.isArray()) {\n            return c.getComponentType() == test_tuple.getClass();\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185114,
      "stdout": "",
      "stderr": "/tmp/tmpp6wuvvi6.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpp6wuvvi6.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(test_tuple instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n            return pair.getValue0().getClass().equals(pair.getValue1().getClass());\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185114,
      "stdout": "",
      "stderr": "/tmp/tmpzuaqug4j.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzuaqug4j.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> clazz = test_tuple.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n        try {\n            for (Field field : fields) {\n                field.setAccessible(true);\n                Object value = field.get(test_tuple);\n                if (value.getClass() != fields[0].get(test_tuple).getClass()) {\n                    return false;\n                }\n            }\n        } catch (IllegalAccessException e) {\n            e.printStackTrace();\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185114,
      "stdout": "",
      "stderr": "/tmp/tmprk298zgf.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmprk298zgf.java:28: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        if (test_tuple instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) test_tuple;\n            if (pair.getValue0() != null && pair.getValue1() != null) {\n                result = pair.getValue0().getClass().equals(pair.getValue1().getClass());\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185115,
      "stdout": "",
      "stderr": "/tmp/tmp2315kcv0.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2315kcv0.java:25: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2315kcv0.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        Class<?> clazz = test_tuple.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            field.setAccessible(true);\n            try {\n                Object value = field.get(test_tuple);\n                if (value != null) {\n                    Class<?> type = value.getClass();\n                    if (type != fields[0].get(test_tuple).getClass()) {\n                        result = false;\n                        break;\n                    }\n                }\n            } catch (IllegalArgumentException e) {\n                e.printStackTrace();\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185115,
      "stdout": "",
      "stderr": "/tmp/tmp3u9bz2xb.java:37: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp3u9bz2xb.java:38: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp3u9bz2xb.java:39: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = {\n            Integer.class,\n            String.class,\n            Double.class,\n            Boolean.class,\n            Character.class\n        };\n        for (Class<?> type : types) {\n            if (type.isInstance(test_tuple)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185115,
      "stdout": "",
      "stderr": "/tmp/tmpt7cfv320.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpt7cfv320.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpt7cfv320.java:28: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean result = true;\n        Class<?> class_type = test_tuple.getClass();\n        if (class_type.isArray()) {\n            Object[] test_array = (Object[]) test_tuple;\n            Class<?> first_type = test_array[0].getClass();\n            for (int i = 1; i < test_array.length; i++) {\n                if (first_type != test_array[i].getClass()) {\n                    result = false;\n                    break;\n                }\n            }\n        } else {\n            result = false;\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185115,
      "stdout": "",
      "stderr": "/tmp/tmpkd_r0did.java:28: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpkd_r0did.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            if (test_pair.getValue0().getClass() != test_pair.getValue1().getClass()) {\n                result = false;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185115,
      "stdout": "",
      "stderr": "/tmp/tmpz_qpdy_2.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpz_qpdy_2.java:25: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getTypeName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmp8xyf000w.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for(Field field : fields) {\n            if(field.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185116,
      "stdout": "",
      "stderr": "/tmp/tmpa6ewki9z.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa6ewki9z.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa6ewki9z.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //System.out.println(test_tuple.getClass().getName());\n        if(test_tuple.getClass().getName().equals(\"org.javatuples.Pair\")){\n            Pair<?,?> test_pair = (Pair<?,?>) test_tuple;\n            if(test_pair.getValue0().getClass().getName().equals(test_pair.getValue1().getClass().getName())){\n                return true;\n            }\n            else{\n                return false;\n            }\n        }\n        else{\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185116,
      "stdout": "",
      "stderr": "/tmp/tmpfh7zrzj3.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfh7zrzj3.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfh7zrzj3.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185117,
      "stdout": "",
      "stderr": "/tmp/tmpx78fokak.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            return test_pair.getValue0().getClass() == test_pair.getValue1().getClass();\n        } else if (test_tuple instanceof Triplet) {\n            Triplet<Object, Object, Object> test_triplet = (Triplet<Object, Object, Object>) test_tuple;\n            return test_triplet.getValue0().getClass() == test_triplet.getValue1().getClass() && test_triplet.getValue1().getClass() == test_triplet.getValue2().getClass();\n        } else if (test_tuple instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> test_quartet = (Quartet<Object, Object, Object, Object>) test_tuple;\n            return test_quartet.getValue0().getClass() == test_quartet.getValue1().getClass() && test_quartet.getValue1().getClass() == test_quartet.getValue2().getClass() && test_quartet.getValue2().getClass() == test_quartet.getValue3().getClass();\n        } else if (test_tuple instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> test_quintet = (Quintet<Object, Object, Object, Object, Object>) test_tuple;\n            return test_quintet.getValue0().getClass() == test_quintet.getValue1().getClass() && test_quintet.getValue1().getClass() == test_quintet.getValue2().getClass() && test_quintet.getValue2().getClass() == test_quintet.getValue3().getClass() && test_quintet.getValue3().getClass() == test_quintet.getValue4().getClass();\n        } else if (test_tuple instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> test_sextet = (Sext\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185116,
      "stdout": "",
      "stderr": "/tmp/tmplpbo75uj.java:24: error: ')' expected\n            Sextet<Object, Object, Object, Object, Object, Object> test_sextet = (Sext\n                                                                                      ^\n/tmp/tmplpbo75uj.java:26: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185117,
      "stdout": "",
      "stderr": "/tmp/tmpx78fokak.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0].equals(types[1]);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpo6wkpt9b.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpo6wkpt9b.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpo6wkpt9b.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Object[] test_tuple_array = (Object[]) test_tuple;\n        Class<?> type = test_tuple_array[0].getClass();\n        for (Object obj : test_tuple_array) {\n            if (obj.getClass() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185117,
      "stdout": "",
      "stderr": "/tmp/tmplnz2ub5z.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplnz2ub5z.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplnz2ub5z.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmp50sqde2s.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //System.out.println(test_tuple.getClass().getName());\n        //System.out.println(test_tuple.getClass().getTypeName());\n        //System.out.println(test_tuple.getClass().getSimpleName());\n        //System.out.println(test_tuple.getClass().getCanonicalName());\n        //System.out.println(test_tuple.getClass().getTypeParameters());\n        //System.out.println(test_tuple.getClass().getGenericInterfaces());\n        //System.out.println(test_tuple.getClass().getGenericSuperclass());\n        //System.out.println(test_tuple.getClass().getGenericComponentType());\n        //System.out.println(test_tuple.getClass().getGenericSignature());\n        //System.out.println(test_tuple.getClass().getGenericTypeParameters());\n        //System.out.println(test_tuple.getClass().getGenericType());\n        //System.out.println(test_tuple.getClass().getGenericInterfaces());\n        //System.out.println(test_tuple.getClass().getGenericSuperclass());\n        //System.out.println(test_tuple.getClass().getGenericComponentType());\n        //System.out.println(test_tuple.getClass().getGenericSignature());\n        //System.out.println(test_tuple.getClass().getGenericTypeParameters());\n        //System.out.println(test_tuple.getClass().getGenericType());\n        //System.out.println(test_tuple.getClass().getGenericInterfaces());\n        //System.out.println(test_tuple.getClass().getGenericSuperclass());\n        //System.out.println(test_tuple.getClass().getGenericComponentType());\n        //System.out.println(test_tuple.getClass().getGenericSignature());\n        //System.out.println(test_tuple.get\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmph3k6jgxg.java:38: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmph3k6jgxg.java:39: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmph3k6jgxg.java:40: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Class<?> clazz = test_tuple.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            if (!field.getType().equals(fields[0].getType())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmpt0oh0dwu.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpt0oh0dwu.java:25: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        if (types[0] == types[1]) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmpq675qhe6.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq675qhe6.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpq675qhe6.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> tuple_class = test_tuple.getClass();\n        Class<?>[] tuple_interfaces = tuple_class.getInterfaces();\n        Class<?> tuple_interface = tuple_interfaces[0];\n        Method getValue = null;\n        try {\n            getValue = tuple_interface.getMethod(\"getValue\", int.class);\n        } catch (NoSuchMethodException e) {\n            e.printStackTrace();\n        }\n        Object[] tuple_values = new Object[2];\n        for (int i = 0; i < 2; i++) {\n            try {\n                tuple_values[i] = getValue.invoke(test_tuple, i);\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            } catch (InvocationTargetException e) {\n                e.printStackTrace();\n            }\n        }\n        Class<?> first_class = tuple_values[0].getClass();\n        Class<?> second_class = tuple_values[1].getClass();\n        return first_class.equals(second_class);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185119,
      "stdout": "",
      "stderr": "/tmp/tmphjnode58.java:35: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmphjnode58.java:36: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmphjnode58.java:37: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = null;\n        for (Field f : fields) {\n            if (type == null) {\n                type = f.getType();\n            } else {\n                if (type != f.getType()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185119,
      "stdout": "",
      "stderr": "/tmp/tmplcn3cgf4.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplcn3cgf4.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplcn3cgf4.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Object[] test_tuple_array = ((Pair)test_tuple).toArray();\n        return test_tuple_array[0].getClass().equals(test_tuple_array[1].getClass());\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185119,
      "stdout": "",
      "stderr": "/tmp/tmplv4b4sfn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplv4b4sfn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185117,
      "stdout": "",
      "stderr": "/tmp/tmpx78fokak.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpx78fokak.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Class<?>[] classes = new Class<?>[2];\n        classes[0] = test_tuple.getClass().getComponentType();\n        classes[1] = test_tuple.getClass().getComponentType();\n        return classes[0].equals(classes[1]);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185119,
      "stdout": "",
      "stderr": "/tmp/tmpesfmqg7x.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpesfmqg7x.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpesfmqg7x.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185120,
      "stdout": "",
      "stderr": "/tmp/tmp9b1_xlky.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9b1_xlky.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpsc1xigho.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmp50sqde2s.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) test_tuple;\n            return pair.getValue0().getClass() == pair.getValue1().getClass();\n        } else if (test_tuple instanceof Triplet) {\n            Triplet<?, ?, ?> triplet = (Triplet<?, ?, ?>) test_tuple;\n            return triplet.getValue0().getClass() == triplet.getValue1().getClass() && triplet.getValue1().getClass() == triplet.getValue2().getClass();\n        } else if (test_tuple instanceof Quartet) {\n            Quartet<?, ?, ?, ?> quartet = (Quartet<?, ?, ?, ?>) test_tuple;\n            return quartet.getValue0().getClass() == quartet.getValue1().getClass() && quartet.getValue1().getClass() == quartet.getValue2().getClass() && quartet.getValue2().getClass() == quartet.getValue3().getClass();\n        } else if (test_tuple instanceof Quintet) {\n            Quintet<?, ?, ?, ?, ?> quintet = (Quintet<?, ?, ?, ?, ?>) test_tuple;\n            return quintet.getValue0().getClass() == quintet.getValue1().getClass() && quintet.getValue1().getClass() == quintet.getValue2().getClass() && quintet.getValue2().getClass() == quintet.getValue3().getClass() && quintet.getValue3().getClass() == quintet.getValue4().getClass();\n        } else if (test_tuple instanceof Sextet) {\n            Sextet<?, ?, ?, ?, ?, ?> sextet = (Sextet<?, ?, ?, ?, ?, ?>) test_tuple;\n            return sextet.getValue0().getClass() == sextet.getValue1().getClass() && sextet.getValue1().getClass() == sextet.getValue2().getClass()\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185120,
      "stdout": "",
      "stderr": "/tmp/tmpat7nr1qp.java:25: error: ';' expected\n            return sextet.getValue0().getClass() == sextet.getValue1().getClass() && sextet.getValue1().getClass() == sextet.getValue2().getClass()\n                                                                                                                                                   ^\n/tmp/tmpat7nr1qp.java:27: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean result = true;\n        Object[] test_array = (Object[]) test_tuple;\n        Class<?> first_class = test_array[0].getClass();\n        for (int i = 1; i < test_array.length; i++) {\n            if (test_array[i].getClass() != first_class) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185120,
      "stdout": "",
      "stderr": "/tmp/tmpe_6lqc2j.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpe_6lqc2j.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (Field f : fields) {\n            if (f.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185121,
      "stdout": "",
      "stderr": "/tmp/tmpvcm8v42j.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpvcm8v42j.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpvcm8v42j.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair test_pair = (Pair) test_tuple;\n            Object first = test_pair.getValue0();\n            Object second = test_pair.getValue1();\n            if (first.getClass().equals(second.getClass())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185121,
      "stdout": "",
      "stderr": "/tmp/tmpm6smodpg.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpm6smodpg.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpsc1xigho.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n        return test_pair.getValue0().getClass().equals(test_pair.getValue1().getClass());\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmp10zpv5qj.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp10zpv5qj.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp10zpv5qj.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\nNote: /tmp/tmp10zpv5qj.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185120,
      "stdout": "",
      "stderr": "/tmp/tmp9b1_xlky.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9b1_xlky.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (int i = 1; i < fields.length; i++) {\n            if (fields[i].getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmpslomgwfc.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpslomgwfc.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpslomgwfc.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmp50sqde2s.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getTypeName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmp8xyf000w.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            return test_pair.getValue0().getClass() == test_pair.getValue1().getClass();\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmpa464src1.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = fields[0].getType();\n        for (Field field : fields) {\n            if (!field.getType().equals(type)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmpj7dyqkdi.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpj7dyqkdi.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        boolean result = true;\n        List<Object> test_list = new ArrayList<Object>();\n        if (test_tuple instanceof Pair) {\n            test_list = ((Pair) test_tuple).toList();\n        } else if (test_tuple instanceof Triplet) {\n            test_list = ((Triplet) test_tuple).toList();\n        } else if (test_tuple instanceof Quartet) {\n            test_list = ((Quartet) test_tuple).toList();\n        } else if (test_tuple instanceof Quintet) {\n            test_list = ((Quintet) test_tuple).toList();\n        } else if (test_tuple instanceof Sextet) {\n            test_list = ((Sextet) test_tuple).toList();\n        } else if (test_tuple instanceof Septet) {\n            test_list = ((Septet) test_tuple).toList();\n        } else if (test_tuple instanceof Octet) {\n            test_list = ((Octet) test_tuple).toList();\n        } else if (test_tuple instanceof Ennead) {\n            test_list = ((Ennead) test_tuple).toList();\n        } else if (test_tuple instanceof Decade) {\n            test_list = ((Decade) test_tuple).toList();\n        }\n        Class<?> first_class = test_list.get(0).getClass();\n        for (Object element : test_list) {\n            if (element.getClass() != first_class) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185123,
      "stdout": "",
      "stderr": "/tmp/tmpfcrztwlq.java:43: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcrztwlq.java:44: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfcrztwlq.java:45: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<?, ?> test_pair = (Pair<?, ?>) test_tuple;\n            if (test_pair.getValue0().getClass() == test_pair.getValue1().getClass()) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185123,
      "stdout": "",
      "stderr": "/tmp/tmpmpualmzr.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpmpualmzr.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<?, ?> test_pair = (Pair<?, ?>) test_tuple;\n            return test_pair.getValue0().getClass() == test_pair.getValue1().getClass();\n        } else if (test_tuple instanceof Triplet) {\n            Triplet<?, ?, ?> test_triplet = (Triplet<?, ?, ?>) test_tuple;\n            return test_triplet.getValue0().getClass() == test_triplet.getValue1().getClass() && test_triplet.getValue1().getClass() == test_triplet.getValue2().getClass();\n        } else if (test_tuple instanceof Quartet) {\n            Quartet<?, ?, ?, ?> test_quartet = (Quartet<?, ?, ?, ?>) test_tuple;\n            return test_quartet.getValue0().getClass() == test_quartet.getValue1().getClass() && test_quartet.getValue1().getClass() == test_quartet.getValue2().getClass() && test_quartet.getValue2().getClass() == test_quartet.getValue3().getClass();\n        } else if (test_tuple instanceof Quintet) {\n            Quintet<?, ?, ?, ?, ?> test_quintet = (Quintet<?, ?, ?, ?, ?>) test_tuple;\n            return test_quintet.getValue0().getClass() == test_quintet.getValue1().getClass() && test_quintet.getValue1().getClass() == test_quintet.getValue2().getClass() && test_quintet.getValue2().getClass() == test_quintet.getValue3().getClass() && test_quintet.getValue3().getClass() == test_quintet.getValue4().getClass();\n        } else if (test_tuple instanceof Sextet) {\n            Sextet<?, ?, ?, ?, ?, ?> test_sextet = (Sextet<?, ?, ?, ?,\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185123,
      "stdout": "",
      "stderr": "/tmp/tmpsennubuw.java:24: error: illegal start of expression\n            Sextet<?, ?, ?, ?, ?, ?> test_sextet = (Sextet<?, ?, ?, ?,\n                                                           ^\n/tmp/tmpsennubuw.java:24: error: illegal start of expression\n            Sextet<?, ?, ?, ?, ?, ?> test_sextet = (Sextet<?, ?, ?, ?,\n                                                            ^\n/tmp/tmpsennubuw.java:24: error: <identifier> expected\n            Sextet<?, ?, ?, ?, ?, ?> test_sextet = (Sextet<?, ?, ?, ?,\n                                                             ^\n/tmp/tmpsennubuw.java:26: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (Field f : fields) {\n            if (f.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185121,
      "stdout": "",
      "stderr": "/tmp/tmpvcm8v42j.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpvcm8v42j.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpvcm8v42j.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //return true;\n        if(test_tuple instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n            return pair.getValue0().getClass().equals(pair.getValue1().getClass());\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185123,
      "stdout": "",
      "stderr": "/tmp/tmpncbqgl6q.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpncbqgl6q.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpncbqgl6q.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\nNote: /tmp/tmpncbqgl6q.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        Class<?> c = test_tuple.getClass();\n        if (c.isArray()) {\n            Class<?> componentType = c.getComponentType();\n            if (componentType.isPrimitive()) {\n                result = false;\n            } else {\n                Object[] array = (Object[]) test_tuple;\n                for (int i = 0; i < array.length; i++) {\n                    if (!checkType(array[i])) {\n                        result = false;\n                        break;\n                    }\n                }\n            }\n        } else if (test_tuple instanceof Pair) {\n            Pair pair = (Pair) test_tuple;\n            if (!checkType(pair.getValue0()) || !checkType(pair.getValue1())) {\n                result = false;\n            }\n        } else if (test_tuple instanceof Triplet) {\n            Triplet triplet = (Triplet) test_tuple;\n            if (!checkType(triplet.getValue0()) || !checkType(triplet.getValue1()) || !checkType(triplet.getValue2())) {\n                result = false;\n            }\n        } else if (test_tuple instanceof Quartet) {\n            Quartet quartet = (Quartet) test_tuple;\n            if (!checkType(quartet.getValue0()) || !checkType(quartet.getValue1()) || !checkType(quartet.getValue2()) || !checkType(quartet.getValue3())) {\n                result = false;\n            }\n        } else if (test_tuple instanceof Quintet) {\n            Quintet quintet = (Quintet) test_tuple;\n            if (!checkType(quintet.getValue0()) || !checkType(quintet.getValue1()) || !checkType(quintet.getValue2()) || !checkType(quintet.getValue3()) || !checkType(quintet.getValue\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185123,
      "stdout": "",
      "stderr": "/tmp/tmpd8yn6nc2.java:46: error: ')' expected\n            if (!checkType(quintet.getValue0()) || !checkType(quintet.getValue1()) || !checkType(quintet.getValue2()) || !checkType(quintet.getValue3()) || !checkType(quintet.getValue\n                                                                                                                                                                                       ^\n/tmp/tmpd8yn6nc2.java:47: error: illegal start of statement\n    }\n    ^\n/tmp/tmpd8yn6nc2.java:48: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Class<?>[] classes = new Class<?>[2];\n        classes[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        classes[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return classes[0].equals(classes[1]);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185125,
      "stdout": "",
      "stderr": "/tmp/tmpiw97jl23.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiw97jl23.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpiw97jl23.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmp50sqde2s.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185125,
      "stdout": "",
      "stderr": "/tmp/tmpkac245tb.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpkac245tb.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpkac245tb.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(test_tuple instanceof Pair) {\n            Pair<?, ?> pair = (Pair<?, ?>) test_tuple;\n            if(pair.getValue0().getClass().equals(pair.getValue1().getClass())) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185125,
      "stdout": "",
      "stderr": "/tmp/tmp5neejmvr.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5neejmvr.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp5neejmvr.java:25: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n        return pair.getValue0().getClass().equals(pair.getValue1().getClass());\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185125,
      "stdout": "",
      "stderr": "/tmp/tmpuakdnybf.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpuakdnybf.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpuakdnybf.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpxij2etvl.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxij2etvl.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if(test_tuple instanceof Pair) {\n            Object first = ((Pair) test_tuple).getValue0();\n            Object second = ((Pair) test_tuple).getValue1();\n            return first.getClass() == second.getClass();\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185125,
      "stdout": "",
      "stderr": "/tmp/tmpikbwrfll.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpikbwrfll.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpikbwrfll.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] classes = new Class<?>[2];\n        classes[0] = test_tuple.getClass().getComponentType();\n        classes[1] = test_tuple.getClass().getComponentType();\n        return classes[0] == classes[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185126,
      "stdout": "",
      "stderr": "/tmp/tmp66c1v0e7.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp66c1v0e7.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp66c1v0e7.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //return true;\n        boolean result = true;\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n            if (pair.getValue0().getClass() != pair.getValue1().getClass()) {\n                result = false;\n            }\n        } else if (test_tuple instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) test_tuple;\n            if (triplet.getValue0().getClass() != triplet.getValue1().getClass() || triplet.getValue1().getClass() != triplet.getValue2().getClass()) {\n                result = false;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185126,
      "stdout": "",
      "stderr": "/tmp/tmpuugyx4ak.java:30: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpuugyx4ak.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpuugyx4ak.java:32: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\nNote: /tmp/tmpuugyx4ak.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpsc1xigho.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) test_tuple;\n            return pair.getValue0().getClass() == pair.getValue1().getClass();\n        } else if (test_tuple instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) test_tuple;\n            return triplet.getValue0().getClass() == triplet.getValue1().getClass() && triplet.getValue1().getClass() == triplet.getValue2().getClass();\n        } else if (test_tuple instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) test_tuple;\n            return quartet.getValue0().getClass() == quartet.getValue1().getClass() && quartet.getValue1().getClass() == quartet.getValue2().getClass() && quartet.getValue2().getClass() == quartet.getValue3().getClass();\n        } else if (test_tuple instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) test_tuple;\n            return quintet.getValue0().getClass() == quintet.getValue1().getClass() && quintet.getValue1().getClass() == quintet.getValue2().getClass() && quintet.getValue2().getClass() == quintet.getValue3().getClass() && quintet.getValue3().getClass() == quintet.getValue4().getClass();\n        } else if (test_tuple instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) test_tuple\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185126,
      "stdout": "",
      "stderr": "/tmp/tmpdht8tdmv.java:27: error: ';' expected\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) test_tuple\n                                                                                                                                               ^\n/tmp/tmpdht8tdmv.java:29: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        boolean result = true;\n        Class<?> clazz = test_tuple.getClass();\n        Field[] fields = clazz.getDeclaredFields();\n        for (Field field : fields) {\n            field.setAccessible(true);\n            try {\n                Object value = field.get(test_tuple);\n                if (value != null) {\n                    if (value.getClass() != field.getType()) {\n                        result = false;\n                    }\n                }\n            } catch (IllegalAccessException e) {\n                e.printStackTrace();\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185126,
      "stdout": "",
      "stderr": "/tmp/tmpot7p8f5d.java:33: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpot7p8f5d.java:34: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpot7p8f5d.java:35: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        if(test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            Object first = test_pair.getValue0();\n            Object second = test_pair.getValue1();\n            if(first.getClass().equals(second.getClass())) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185126,
      "stdout": "",
      "stderr": "/tmp/tmplx3at8q7.java:28: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmplx3at8q7.java:29: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean flag = true;\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        for (Field field : fields) {\n            if (field.getType() != fields[0].getType()) {\n                flag = false;\n            }\n        }\n        return flag;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185127,
      "stdout": "",
      "stderr": "/tmp/tmpw_yo5i50.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpw_yo5i50.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpw_yo5i50.java:24: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            return test_pair.getValue0().getClass() == test_pair.getValue1().getClass();\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmpa464src1.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        boolean result = true;\n        Class<?>[] types = new Class<?>[] {\n            Integer.class,\n            Double.class,\n            String.class,\n            Boolean.class\n        };\n        for(Class<?> type : types) {\n            if(type.isInstance(test_tuple)) {\n                result = false;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185128,
      "stdout": "",
      "stderr": "/tmp/tmpfovqyvwj.java:26: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfovqyvwj.java:27: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpfovqyvwj.java:28: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Object[] test_array = (Object[]) test_tuple;\n        Class<?> type = test_array[0].getClass();\n        for (int i = 1; i < test_array.length; i++) {\n            if (test_array[i].getClass() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185128,
      "stdout": "",
      "stderr": "/tmp/tmp42axbvov.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp42axbvov.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp42axbvov.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185118,
      "stdout": "",
      "stderr": "/tmp/tmp50sqde2s.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp50sqde2s.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185108,
      "stdout": "",
      "stderr": "/tmp/tmpxkhxw4l9.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpxkhxw4l9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here.\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185111,
      "stdout": "",
      "stderr": "/tmp/tmpjf7mtx4k.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpjf7mtx4k.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185112,
      "stdout": "",
      "stderr": "/tmp/tmpqcp1es29.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqcp1es29.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        if (test_tuple instanceof Pair) {\n            Pair<Object, Object> test_pair = (Pair<Object, Object>) test_tuple;\n            return test_pair.getValue0().getClass() == test_pair.getValue1().getClass();\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185122,
      "stdout": "",
      "stderr": "/tmp/tmpa464src1.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpa464src1.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getDeclaredFields()[0].getType();\n        types[1] = test_tuple.getClass().getDeclaredFields()[1].getType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185128,
      "stdout": "",
      "stderr": "/tmp/tmpi4ebv6y9.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpi4ebv6y9.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type1 = fields[0].getType();\n        Class<?> type2 = fields[1].getType();\n        return type1.equals(type2);\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185128,
      "stdout": "",
      "stderr": "/tmp/tmp2xsl2kd2.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2xsl2kd2.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp2xsl2kd2.java:20: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = {\n            Integer.class,\n            Double.class,\n            String.class,\n            Boolean.class,\n            Character.class,\n            Float.class,\n            Long.class,\n            Short.class,\n            Byte.class\n        };\n        Class<?> type = test_tuple.getClass();\n        for (Class<?> t : types) {\n            if (type.equals(t)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185129,
      "stdout": "",
      "stderr": "/tmp/tmpqpak8_r2.java:31: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqpak8_r2.java:32: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpqpak8_r2.java:33: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getTypeName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmp8xyf000w.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp8xyf000w.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object dec",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpye7uao08.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpye7uao08.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> first_type = fields[0].getType();\n        for (Field field : fields) {\n            if (field.getType() != first_type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185120,
      "stdout": "",
      "stderr": "/tmp/tmp9b1_xlky.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmp9b1_xlky.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        return test_tuple.getClass().getName().equals(\"org.javatuples.Pair\");\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185107,
      "stdout": "",
      "stderr": "/tmp/tmpb2yxw1if.java:14: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpb2yxw1if.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> cls = test_tuple.getClass();\n        Field[] fields = cls.getDeclaredFields();\n        Class<?> type = fields[0].getType();\n        for (Field f : fields) {\n            if (f.getType() != type) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185129,
      "stdout": "",
      "stderr": "/tmp/tmpnu23o1tv.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpnu23o1tv.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] types = new Class<?>[2];\n        types[0] = test_tuple.getClass().getComponentType();\n        types[1] = test_tuple.getClass().getComponentType();\n        return types[0] == types[1];\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185109,
      "stdout": "",
      "stderr": "/tmp/tmpsc1xigho.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:18: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpsc1xigho.java:19: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?> test_class = test_tuple.getClass();\n        Class<?>[] interfaces = test_class.getInterfaces();\n        for (Class<?> i : interfaces) {\n            if (i.getName().equals(\"org.javatuples.Pair\")) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185129,
      "stdout": "",
      "stderr": "/tmp/tmpzyp1ywse.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzyp1ywse.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpzyp1ywse.java:23: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        // Write your code here\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185106,
      "stdout": "",
      "stderr": "/tmp/tmpd_e079tn.java:15: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:16: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpd_e079tn.java:17: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if all the elements in pair have same data type or not.\n    public static boolean checkType(Object test_tuple) {\n        Class<?>[] tuple_types = test_tuple.getClass().getDeclaredFields()[0].getType().getComponentType().getClasses();\n        Object[] tuple_elements = (Object[]) test_tuple.getClass().getDeclaredFields()[0].get(test_tuple);\n        for (int i = 0; i < tuple_types.length; i++) {\n            if (tuple_types[i] != tuple_elements[i].getClass()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n    assert(checkType(Pair.with(3l, 2l, 1l, 4l, 5l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185129,
      "stdout": "",
      "stderr": "/tmp/tmpldp5p53p.java:21: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(5l, 6l, 7l, 3l, 5l, 6l)) == (true));\n                         ^\n  required: A#1,B#1\n  found: long,long,long,long,long,long\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    B#1 extends Object declared in method <A#1,B#1>with(A#1,B#1)\n    A#2 extends Object declared in class Pair\n    B#2 extends Object declared in class Pair\n/tmp/tmpldp5p53p.java:22: error: method with in class Pair<A#2,B#2> cannot be applied to given types;\n    assert(checkType(Pair.with(1l, 2l, \"4\")) == (false));\n                         ^\n  required: A#1,B#1\n  found: long,long,String\n  reason: cannot infer type-variable(s) A#1,B#1\n    (actual and formal argument lists differ in length)\n  where A#1,B#1,A#2,B#2 are type-variables:\n    A#1 extends O",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
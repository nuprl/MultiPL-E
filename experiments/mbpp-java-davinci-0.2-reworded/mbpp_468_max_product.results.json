{
  "name": "mbpp_468_max_product",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_468_max_product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            prod *= arr.get(i);\n            if (prod > max) {\n                max = prod;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmphcc2vn6z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long min = arr.get(0);\n        long result = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long temp = max;\n            max = Math.max(Math.max(max * arr.get(i), min * arr.get(i)), arr.get(i));\n            min = Math.min(Math.min(temp * arr.get(i), min * arr.get(i)), arr.get(i));\n            if (max > result) {\n                result = max;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpua3tfbop.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long max = arr.get(0);\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmp_lt0xiqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long max = arr.get(0);\n        long min = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long tempMax = max;\n            max = Math.max(Math.max(max * curr, min * curr), curr);\n            min = Math.min(Math.min(tempMax * curr, min * curr), curr);\n            maxProduct = Math.max(max, maxProduct);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmp96g8ge1s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > maxProduct) {\n                    maxProduct = product;\n                }\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmphw6qb3dl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 1;\n        long curr = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            curr *= arr.get(i);\n            if (curr > max) max = curr;\n            if (curr == 0) curr = 1;\n        }\n        curr = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            curr *= arr.get(i);\n            if (curr > max) max = curr;\n            if (curr == 0) curr = 1;\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpy_3kn_hr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = product * arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppipfliop.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmpfl7411rh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        for (long i : arr) {\n            if (i > max) {\n                max = i;\n                maxProduct = Math.max(maxProduct, max);\n            } else {\n                maxProduct = Math.max(maxProduct, i * max);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmp0a9rdxel.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = arr.get(0);\n        long curr = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            curr = Math.max(curr * arr.get(i), arr.get(i));\n            max = Math.max(max, curr);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpcb0tl0sd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpct8d5hqa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        long maxProduct = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > 0) {\n                max[i] = Math.max(max[i - 1] * arr.get(i), arr.get(i));\n                min[i] = Math.min(min[i - 1] * arr.get(i), arr.get(i));\n            } else {\n                max[i] = Math.max(min[i - 1] * arr.get(i), arr.get(i));\n                min[i] = Math.min(max[i - 1] * arr.get(i), arr.get(i));\n            }\n            maxProduct = Math.max(maxProduct, max[i]);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpcriwwi8m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7b88vgkw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            maxProduct = Math.max(maxProduct, product);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmppn9qmox7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 1;\n        long min = 1;\n        long maxProduct = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0) {\n                max = max * arr.get(i);\n                min = Math.min(min * arr.get(i), 1);\n            } else if (arr.get(i) == 0) {\n                max = 1;\n                min = 1;\n            } else {\n                long temp = max;\n                max = Math.max(min * arr.get(i), 1);\n                min = temp * arr.get(i);\n            }\n            if (maxProduct < max) {\n                maxProduct = max;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpqbkg0dot.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                maxProduct = Math.max(maxProduct, product);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpi30vgn47.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7b88vgkw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long maxProductSoFar = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            maxProductSoFar = Math.max(maxProductSoFar, maxProductSoFar * arr.get(i));\n            maxProduct = Math.max(maxProduct, maxProductSoFar);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpquutspu1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7diltzsa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for(int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp0806lg73.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for(int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp0806lg73.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmpfl7411rh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                if (prod > max) {\n                    max = prod;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpmh_z5psc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpdruvsc1h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long num = arr.get(i);\n            max[i] = Math.max(num, Math.max(num * max[i - 1], num * min[i - 1]));\n            min[i] = Math.min(num, Math.min(num * max[i - 1], num * min[i - 1]));\n            maxProduct = Math.max(maxProduct, max[i]);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpibew7hrv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct = max;\n            } else {\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpyw0igve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpe4poymns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            prod *= arr.get(i);\n            if (prod > max) {\n                max = prod;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpl7975yfi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                if (prod > max) {\n                    max = prod;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp5uwd5vvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpjqyywgal.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            maxProduct = Math.max(maxProduct, product);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmppn9qmox7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long a = arr.get(i);\n            long b = max[i - 1] * a;\n            long c = min[i - 1] * a;\n            max[i] = Math.max(Math.max(a, b), c);\n            min[i] = Math.min(Math.min(a, b), c);\n        }\n        long ans = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            ans = Math.max(ans, max[i]);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpewjc_sdw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long min = arr.get(0);\n        long result = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long tempMax = Math.max(Math.max(max * curr, min * curr), curr);\n            min = Math.min(Math.min(max * curr, min * curr), curr);\n            max = tempMax;\n            result = Math.max(result, max);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpvsbfgiog.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        int n = arr.size();\n        long[] dp = new long[n];\n        dp[0] = arr.get(0);\n        long max = dp[0];\n        for (int i = 1; i < n; i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp_obhy6xf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = 1;\n                    for (int k = i; k <= j; k++) {\n                        product *= arr.get(k);\n                    }\n                    max = Math.max(max, product);\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpq_fz9sh_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = arr.get(0);\n        long min = arr.get(0);\n        long result = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long temp = max;\n            max = Math.max(Math.max(max * arr.get(i), min * arr.get(i)), arr.get(i));\n            min = Math.min(Math.min(temp * arr.get(i), min * arr.get(i)), arr.get(i));\n            if(max > result) {\n                result = max;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpbn0p3wbc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long maxProductSoFar = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            maxProductSoFar = Math.max(maxProductSoFar, maxProductSoFar * arr.get(i));\n            maxProduct = Math.max(maxProduct, maxProductSoFar);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpquutspu1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for(int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if(product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmprx399uuc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7b88vgkw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long[] dp = new long[arr.size()];\n        for (int i = 0; i < arr.size(); i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(j) < arr.get(i)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpckpb6bom.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                long product = arr.get(i) * arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmppv958n5d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct = maxProduct * max;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpodfbh2np.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long product = 1;\n        int n = arr.size();\n        for (int i = 0; i < n; i++) {\n            product *= arr.get(i);\n            maxProduct = Math.max(maxProduct, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = n - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            maxProduct = Math.max(maxProduct, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpg5tkde_b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long maxProduct = 1;\n        long currProduct = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            currProduct *= arr.get(i);\n            maxProduct = Math.max(maxProduct, currProduct);\n            if (currProduct == 0) {\n                currProduct = 1;\n            }\n        }\n        currProduct = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            currProduct *= arr.get(i);\n            maxProduct = Math.max(maxProduct, currProduct);\n            if (currProduct == 0) {\n                currProduct = 1;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp7mzho_l8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                if (prod > max) {\n                    max = prod;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpmh_z5psc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct = max;\n            } else {\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpyw0igve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                maxProduct = Math.max(maxProduct, product);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpi30vgn47.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpdansdqve.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long[] dp = new long[arr.size()];\n        for (int i = 0; i < arr.size(); i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpa5zesegf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long[] dp = new long[arr.size()];\n        dp[0] = arr.get(0);\n        long max = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            dp[i] = arr.get(i);\n            for(int j = 0; j < i; j++) {\n                if(arr.get(j) < arr.get(i)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp4px35kd4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            max[i] = Math.max(Math.max(max[i - 1] * arr.get(i), min[i - 1] * arr.get(i)), arr.get(i));\n            min[i] = Math.min(Math.min(max[i - 1] * arr.get(i), min[i - 1] * arr.get(i)), arr.get(i));\n        }\n        long result = max[0];\n        for (int i = 1; i < arr.size(); i++) {\n            result = Math.max(result, max[i]);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp9v2naadx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long prod = arr.get(i) * arr.get(j);\n                    if (prod > max) {\n                        max = prod;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpqygx3i1i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(product, max);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpfyv2i8ia.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                if (prod > max) {\n                    max = prod;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpmh_z5psc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = 1;\n                    for (int k = i; k <= j; k++) {\n                        product *= arr.get(k);\n                    }\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpz859ivtl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = 1;\n        long product = 1;\n        for(int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if(product > max) {\n                max = product;\n            }\n            if(product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpf0s8207h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long prod = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            prod *= arr.get(i);\n            max = Math.max(max, prod);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmphsde0ia8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmpfl7411rh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmpfl7411rh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        int n = arr.size();\n        long[] dp = new long[n];\n        dp[0] = arr.get(0);\n        for(int i = 1; i < n; i++) {\n            long max = Long.MIN_VALUE;\n            for(int j = 0; j < i; j++) {\n                if(arr.get(i) > arr.get(j)) {\n                    max = Math.max(max, dp[j]);\n                }\n            }\n            dp[i] = max == Long.MIN_VALUE ? arr.get(i) : max * arr.get(i);\n        }\n        long ans = Long.MIN_VALUE;\n        for(int i = 0; i < n; i++) {\n            ans = Math.max(ans, dp[i]);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmphbx2r6hh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long maxProduct = 1;\n        long max = arr.get(0);\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct *= max;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp9unds2pe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(product, max);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp8ztchwm8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7b88vgkw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpx_o4xxcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long prevMax = max[i - 1];\n            long prevMin = min[i - 1];\n            max[i] = Math.max(Math.max(curr, curr * prevMax), curr * prevMin);\n            min[i] = Math.min(Math.min(curr, curr * prevMax), curr * prevMin);\n            maxProduct = Math.max(maxProduct, max[i]);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpddr7dl_o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        int n = arr.size();\n        long[] dp = new long[n];\n        dp[0] = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n            maxProduct = Math.max(maxProduct, dp[i]);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmph3g82j5p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct = max;\n            } else {\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpyw0igve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct = max;\n            } else {\n                maxProduct *= arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp2qvkiwg2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long min = arr.get(0);\n        long res = arr.get(0);\n        for(int i = 1; i < arr.size(); i++) {\n            long temp = max;\n            max = Math.max(Math.max(max * arr.get(i), min * arr.get(i)), arr.get(i));\n            min = Math.min(Math.min(temp * arr.get(i), min * arr.get(i)), arr.get(i));\n            res = Math.max(res, max);\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpw_sdnav0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpncxwa89l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpe4poymns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long currentProduct = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            currentProduct *= arr.get(i);\n            if (currentProduct > maxProduct) {\n                maxProduct = currentProduct;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpu_uxqcg7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpx_o4xxcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if(product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmp2c86niny.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpe4poymns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpvpdeae3j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(product, max);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmp8ztchwm8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long prod = 1;\n            for (int j = i; j < arr.size(); j++) {\n                prod *= arr.get(j);\n                max = Math.max(max, prod);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpqelum33m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long currProduct = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            currProduct *= arr.get(i);\n            maxProduct = Math.max(maxProduct, currProduct);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmp6es81v7p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long prod = arr.get(i) * arr.get(j);\n                    if (prod > max) {\n                        max = prod;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpm_ofgrh7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long[] dp = new long[arr.size()];\n        dp[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n        }\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmps9ksxvsb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpdpvkmzhh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 0;\n        long max = 0;\n        long min = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > 0) {\n                max = Math.max(max * arr.get(i), arr.get(i));\n                min = Math.min(min * arr.get(i), arr.get(i));\n            } else {\n                long temp = max;\n                max = Math.max(min * arr.get(i), arr.get(i));\n                min = Math.min(temp * arr.get(i), arr.get(i));\n            }\n            maxProduct = Math.max(maxProduct, max);\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpv3t1ky7x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        int n = arr.size();\n        long[] dp = new long[n];\n        dp[0] = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] * arr.get(i));\n                }\n            }\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, dp[i]);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpp_ity0j9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = Long.MIN_VALUE;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7b88vgkw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if(product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmphsdzvq71.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = arr.get(0);\n        long min = arr.get(0);\n        long result = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            long tempMax = Math.max(curr, Math.max(max * curr, min * curr));\n            min = Math.min(curr, Math.min(max * curr, min * curr));\n            max = tempMax;\n            result = Math.max(result, max);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmp4fm2io7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        product = 1;\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n            if (product == 0) {\n                product = 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122562,
      "stdout": "",
      "stderr": "/tmp/tmpx_o4xxcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long max = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                maxProduct *= arr.get(i);\n                max = arr.get(i);\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpvn3eeyfc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(j) > arr.get(i)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmp7luzxq38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long[] max = new long[arr.size()];\n        long[] min = new long[arr.size()];\n        max[0] = arr.get(0);\n        min[0] = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long a = arr.get(i);\n            max[i] = Math.max(a, Math.max(a * max[i - 1], a * min[i - 1]));\n            min[i] = Math.min(a, Math.min(a * max[i - 1], a * min[i - 1]));\n        }\n        return Arrays.stream(max).max().getAsLong();\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmp17xe8grp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long prev = arr.get(0);\n        for (int i = 1; i < arr.size(); i++) {\n            long curr = arr.get(i);\n            if (curr > prev) {\n                maxProduct *= curr;\n            }\n            prev = curr;\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmp315y20z8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long product = arr.get(i) * arr.get(j);\n                    if (product > max) {\n                        max = product;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122561,
      "stdout": "",
      "stderr": "/tmp/tmpe4poymns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for(int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for(int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if(product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpm3u_2t35.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509752,
      "stdout": "",
      "stderr": "/tmp/tmppz9q6o0g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                max = Math.max(max, product);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmkupvnpy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n            max = Math.max(max, product);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpmpmebc_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long max = 0;\n        long product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product = 1;\n            for (int j = i; j < arr.size(); j++) {\n                product *= arr.get(j);\n                if (product > max) {\n                    max = product;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1665509753,
      "stdout": "",
      "stderr": "/tmp/tmpx6ikf6eo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array array list.\n    public static long maxProduct(ArrayList<Long> arr) {\n        long maxProduct = 1;\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxProduct *= max;\n            }\n        }\n        return maxProduct;\n    }\n    public static void main(String[] args) {\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)3l, (long)100l, (long)4l, (long)5l, (long)150l, (long)6l)))) == (3000l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)4l, (long)42l, (long)55l, (long)68l, (long)80l)))) == (50265600l));\n    assert(maxProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)22l, (long)9l, (long)33l, (long)21l, (long)50l, (long)41l, (long)60l)))) == (2460l));\n    }\n\n}\n",
      "timestamp": 1666122563,
      "stdout": "",
      "stderr": "/tmp/tmpqxiefjxe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
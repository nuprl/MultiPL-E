{
  "name": "mbpp_249_intersection_array",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the intersection of two array array lists.\n    public static ArrayList<Long> intersectionArray(ArrayList<Long> array_nums1, ArrayList<Long> array_nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_249_intersection_array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(intersectionArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)5l, (long)7l, (long)8l, (long)9l, (long)10l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)8l, (long)9l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)8l, (long)9l)))));\n    assert(intersectionArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)5l, (long)7l, (long)8l, (long)9l, (long)10l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)5l, (long)7l, (long)9l)))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)5l, (long)7l, (long)9l)))));\n    assert(intersectionArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)5l, (long)7l, (long)8l, (long)9l, (long)10l))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<Long>(Arrays.asList((long)10l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    intersection.add(array_nums1.get(i));\n                }\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    result.add(array_nums1.get(i));\n                }\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                intersection.add(array_nums1.get(i));\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                result.add(array_nums1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                result.add(array_nums1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                result.add(array_nums1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (Long num : array_nums1) {\n            if (array_nums2.contains(num)) {\n                intersection.add(num);\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (Long num : array_nums1) {\n            if (array_nums2.contains(num)) {\n                intersection.add(num);\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                result.add(array_nums1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (Long num : array_nums1) {\n            if (array_nums2.contains(num)) {\n                intersection.add(num);\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> array_nums = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    array_nums.add(array_nums1.get(i));\n                }\n            }\n        }\n        return array_nums;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long num : array_nums1) {\n            if (array_nums2.contains(num)) {\n                result.add(num);\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    intersection.add(array_nums1.get(i));\n                }\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    result.add(array_nums1.get(i));\n                }\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    result.add(array_nums1.get(i));\n                }\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    intersection.add(array_nums1.get(i));\n                }\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                result.add(array_nums1.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> intersection = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    intersection.add(array_nums1.get(i));\n                }\n            }\n        }\n        return intersection;",
    "        ArrayList<Long> array_nums3 = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            for (int j = 0; j < array_nums2.size(); j++) {\n                if (array_nums1.get(i) == array_nums2.get(j)) {\n                    array_nums3.add(array_nums1.get(i));\n                }\n            }\n        }\n        return array_nums3;",
    "        ArrayList<Long> array_nums3 = new ArrayList<Long>();\n        for (int i = 0; i < array_nums1.size(); i++) {\n            if (array_nums2.contains(array_nums1.get(i))) {\n                array_nums3.add(array_nums1.get(i));\n            }\n        }\n        return array_nums3;"
  ]
}
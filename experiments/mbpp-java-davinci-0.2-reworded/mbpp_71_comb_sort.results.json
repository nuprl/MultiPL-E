{
  "name": "mbpp_71_comb_sort",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1vemidn.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    swapped = true;\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1)\n                gap = (int) (gap / 1.3);\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        double shrink = 1.3;\n        int n = nums.size();\n        int gap = n;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < n) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Your code here\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1juckdu.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here.\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here.\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int)(gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int)(gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while ((i + gap) < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Your code here\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt1juckdu.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            swapped = false;\n            int i = 0;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr1vemidn.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while ((i + gap) < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int n = nums.size();\n        double shrink = 1.3;\n        int gap = n;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < n) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        boolean swapped = true;\n        int gap = nums.size();\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    swapped = true;\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1)\n                gap = (int) (gap / 1.3);\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188764,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188764,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) gap = (int) (gap / 1.3);\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Write your code here.\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.25);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while(!sorted) {\n            gap = (int)(gap / shrink);\n            if(gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while(i + gap < nums.size()) {\n                if(nums.get(i) > nums.get(i + gap)) {\n                    Collections.swap(nums, i, i + gap);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        long gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (long) (gap / 1.247330950103979);\n            }\n            long i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get((int) (i + gap)) < nums.get((int) i)) {\n                    long temp = nums.get((int) i);\n                    nums.set((int) i, nums.get((int) (i + gap)));\n                    nums.set((int) (i + gap), temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int)(gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    Long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int n = nums.size();\n        int gap = n;\n        boolean swapped = true;\n        while (gap != 1 || swapped == true) {\n            gap = getNextGap(gap);\n            swapped = false;\n            for (int i = 0; i < n - gap; i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188767,
      "stdout": "",
      "stderr": "/tmp/tmp4144lavl.java:15: error: cannot find symbol\n            gap = getNextGap(gap);\n                  ^\n  symbol:   method getNextGap(int)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean swapped = false;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / shrink);\n            }\n            int i = 0;\n            swapped = false;\n            while (gap + i < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        // Your code here.\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    swapped = true;\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.247330950103979);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            int i = 0;\n            swapped = false;\n            while (i + gap < nums.size()) {\n                if (nums.get(i).compareTo(nums.get(i + gap)) > 0) {\n                    Collections.swap(nums, i, i + gap);\n                    swapped = true;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) Math.floor(gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            if (gap > 1) {\n                gap = (int) (gap / 1.3);\n            }\n            swapped = false;\n            for (int i = 0; i + gap < nums.size(); i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap > 1) {\n                sorted = false;\n            } else {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> combSort(ArrayList<Long> nums) {\n        int gap = nums.size();\n        double shrink = 1.3;\n        boolean sorted = false;\n        while (!sorted) {\n            gap = (int) (gap / shrink);\n            if (gap <= 1) {\n                gap = 1;\n                sorted = true;\n            }\n            int i = 0;\n            while (i + gap < nums.size()) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    long temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    sorted = false;\n                }\n                i++;\n            }\n        }\n        return nums;\n    }\n    public static void main(String[] args) {\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)37l, (long)25l, (long)79l)))).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)15l, (long)25l, (long)37l, (long)79l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)32l, (long)15l, (long)19l, (long)22l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)19l, (long)22l, (long)32l, (long)41l)))));\n    assert(combSort((new ArrayList<Long>(Arrays.asList((long)99l, (long)15l, (long)13l, (long)47l)))).equals((new ArrayList<Long>(Arrays.asList((long)13l, (long)15l, (long)47l, (long)99l)))));\n    }\n\n}\n",
      "timestamp": 1667188756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
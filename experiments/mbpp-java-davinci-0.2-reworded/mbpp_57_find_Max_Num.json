{
  "name": "mbpp_57_find_Max_Num",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the largest number that can be formed with the given array list of digits.\n    public static long findMaxNum(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (321l));\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)1l)))) == (6541l));\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)9l)))) == (9321l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, (a, b) -> {\n            String s1 = a.toString();\n            String s2 = b.toString();\n            return (s2 + s1).compareTo(s1 + s2);\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i: arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr,Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<arr.size();i++){\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if(num > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        ArrayList<Long> arr2 = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++) {\n            arr2.add(arr.get(i));\n        }\n        Collections.sort(arr2, Collections.reverseOrder());\n        String s = \"\";\n        for(int i = 0; i < arr2.size(); i++) {\n            s += arr2.get(i);\n        }\n        return Long.parseLong(s);",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        ArrayList<Long> sorted = new ArrayList<Long>(arr);\n        Collections.sort(sorted, new Comparator<Long>() {\n            @Override\n            public int compare(Long a, Long b) {\n                String aa = a.toString();\n                String bb = b.toString();\n                return (bb + aa).compareTo(aa + bb);\n            }\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long l : sorted) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr,Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i:arr)\n        {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        long max = 0;\n        for(long i : arr) {\n            max = Math.max(max, i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i=0;i<arr.size();i++) {\n            for(int j=i+1;j<arr.size();j++) {\n                if(arr.get(i)<arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i,arr.get(j));\n                    arr.set(j,temp);\n                }\n            }\n        }\n        for(int i=0;i<arr.size();i++) {\n            max = max*10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                String s1 = o1.toString();\n                String s2 = o2.toString();\n                return (s2+s1).compareTo(s1+s2);\n            }\n        });\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i = arr.size() - 1; i >= 0; i--) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            long temp = num;\n            for(int j = 0; j < arr.size(); j++) {\n                if(i != j) {\n                    temp = temp * 10 + arr.get(j);\n                }\n            }\n            if(temp > max) {\n                max = temp;\n            }\n        }\n        return max;",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        ArrayList<Long> temp = new ArrayList<Long>();\n        for(int i=0;i<arr.size();i++){\n            temp.add(arr.get(i));\n        }\n        Collections.sort(temp,Collections.reverseOrder());\n        long ans = 0;\n        for(int i=0;i<temp.size();i++){\n            ans = ans*10 + temp.get(i);\n        }\n        return ans;",
    "        // Write your code here\n        return 0;",
    "        // Write your code here\n        ArrayList<Long> arr2 = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++) {\n            arr2.add(arr.get(i));\n        }\n        Collections.sort(arr2);\n        Collections.reverse(arr2);\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr2.size(); i++) {\n            sb.append(arr2.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(long i: arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr,Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l:arr){\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i = arr.size() - 1; i >= 0; i--) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        return max;",
    "        // Write your code here\n        ArrayList<Long> arr1 = new ArrayList<Long>();\n        ArrayList<Long> arr2 = new ArrayList<Long>();\n        for(int i=0;i<arr.size();i++){\n            if(arr.get(i)%2==0){\n                arr1.add(arr.get(i));\n            }\n            else{\n                arr2.add(arr.get(i));\n            }\n        }\n        Collections.sort(arr1);\n        Collections.sort(arr2);\n        Collections.reverse(arr2);\n        arr1.addAll(arr2);\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<arr1.size();i++){\n            sb.append(arr1.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        ArrayList<Long> arr1 = new ArrayList<Long>();\n        for (int i = 0; i < arr.size(); i++) {\n            arr1.add(arr.get(i));\n        }\n        Collections.sort(arr1, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                String s1 = String.valueOf(o1);\n                String s2 = String.valueOf(o2);\n                return (s2 + s1).compareTo(s1 + s2);\n            }\n        });\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr1.size(); i++) {\n            sb.append(arr1.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        StringBuilder sb = new StringBuilder();\n        for(Long i: arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i+1; j < arr.size(); j++) {\n                if(arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here.\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++){\n            long temp = arr.get(i);\n            for(int j = 0; j < arr.size(); j++){\n                if(i != j){\n                    temp = temp * 10 + arr.get(j);\n                }\n            }\n            if(temp > max){\n                max = temp;\n            }\n        }\n        return max;",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        // return 0;\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        long maxNum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            maxNum = maxNum * 10 + arr.get(i);\n        }\n        return maxNum;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            max = Math.max(max, arr.get(i));\n        }\n        return max;",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                String s1 = o1.toString();\n                String s2 = o2.toString();\n                return (s2 + s1).compareTo(s1 + s2);\n            }\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        return Long.parseLong(arr.stream().map(Object::toString).collect(Collectors.joining(\"\")));",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        return 0;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.size(); i++){\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(Long l: arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        return 0;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        StringBuilder sb = new StringBuilder();\n        arr.stream().sorted(Collections.reverseOrder()).forEach(x -> sb.append(x));\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<arr.size();i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        Collections.sort(arr, Collections.reverseOrder());\n        for (int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        StringBuilder sb = new StringBuilder();\n        arr.sort(new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                return (o2+\"\"+o1).compareTo(o1+\"\"+o2);\n            }\n        });\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            for(int j = i + 1; j < arr.size(); j++) {\n                if(arr.get(i) < arr.get(j)) {\n                    long temp = arr.get(i);\n                    arr.set(i, arr.get(j));\n                    arr.set(j, temp);\n                }\n            }\n        }\n        for(int i = 0; i < arr.size(); i++) {\n            max = max * 10 + arr.get(i);\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        // Write your code here\n        // Return the largest number that can be formed with the given array list of digits.\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<arr.size();i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, (a, b) -> {\n            String s1 = String.valueOf(a);\n            String s2 = String.valueOf(b);\n            return (s2 + s1).compareTo(s1 + s2);\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr);\n        Collections.reverse(arr);\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) > max) {\n                max = arr.get(i);\n            }\n        }\n        return max;",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, new Comparator<Long>() {\n            @Override\n            public int compare(Long o1, Long o2) {\n                String s1 = o1.toString();\n                String s2 = o2.toString();\n                return (s2 + s1).compareTo(s1 + s2);\n            }\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long temp = arr.get(i);\n            for(int j = i + 1; j < arr.size(); j++) {\n                temp = temp * 10 + arr.get(j);\n                if(temp > max) {\n                    max = temp;\n                }\n            }\n        }\n        return max;"
  ]
}
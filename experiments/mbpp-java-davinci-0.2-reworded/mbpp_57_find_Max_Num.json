{
  "name": "mbpp_57_find_Max_Num",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the largest number that can be formed with the given array list of digits.\n    public static long findMaxNum(ArrayList<Long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))) == (321l));\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)1l)))) == (6541l));\n    assert(findMaxNum((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)9l)))) == (9321l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here.\n        Collections.sort(arr, (a, b) -> {\n            String s1 = a.toString();\n            String s2 = b.toString();\n            return (s2 + s1).compareTo(s1 + s2);\n        });\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long i: arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr,Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(int i=0;i<arr.size();i++){\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long num : arr) {\n            sb.append(num);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for(Long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            long num = arr.get(i);\n            if(num > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (long l : arr) {\n            sb.append(l);\n        }\n        return Long.parseLong(sb.toString());",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        ArrayList<Long> arr2 = new ArrayList<Long>();\n        for(int i = 0; i < arr.size(); i++) {\n            arr2.add(arr.get(i));\n        }\n        Collections.sort(arr2, Collections.reverseOrder());\n        String s = \"\";\n        for(int i = 0; i < arr2.size(); i++) {\n            s += arr2.get(i);\n        }\n        return Long.parseLong(s);",
    "        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (Long i : arr) {\n            sb.append(i);\n        }\n        return Long.parseLong(sb.toString());",
    "        // Write your code here\n        Collections.sort(arr, Collections.reverseOrder());\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.size(); i++) {\n            sb.append(arr.get(i));\n        }\n        return Long.parseLong(sb.toString());"
  ]
}
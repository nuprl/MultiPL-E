{
  "name": "mbpp_742_area_tetrahedron",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to caluclate the area of a tetrahedron.\n    public static float areaTetrahedron(long side) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_742_area_tetrahedron.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(areaTetrahedron((3l)) == (15.588457268119894f));\n    assert(areaTetrahedron((20l)) == (692.8203230275509f));\n    assert(areaTetrahedron((10l)) == (173.20508075688772f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        // Write your code here.\n        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float)(Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float)Math.sqrt(3) * side * side;",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) Math.sqrt(3) * side * side;",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));",
    "        return (float) (Math.sqrt(3) * Math.pow(side, 2));"
  ]
}
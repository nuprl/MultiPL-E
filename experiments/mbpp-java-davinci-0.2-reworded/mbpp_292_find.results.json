{
  "name": "mbpp_292_find",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_292_find.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return (long) Math.floor(n / m);\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return Math.floorDiv(n, m);\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        // Write your code here\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185861,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe948x0we.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        // Write your code here\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185861,
      "stdout": "",
      "stderr": "/tmp/tmpibvlqjk7.java:12: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        // Write your code here\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n/m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find quotient of two numbers (rounded down to the nearest integer).\n    public static long find(long n, long m) {\n        return n / m;\n    }\n    public static void main(String[] args) {\n    assert(find((10l), (3l)) == (3l));\n    assert(find((4l), (2l)) == (2l));\n    assert(find((20l), (5l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1667185860,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
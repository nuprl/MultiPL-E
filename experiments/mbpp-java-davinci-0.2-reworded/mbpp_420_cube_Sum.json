{
  "name": "mbpp_420_cube_Sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the cube sum of first n even natural numbers.\n    public static long cubeSum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return n * n * n;",
    "        return IntStream.rangeClosed(1, (int)n).filter(i -> i % 2 == 0).mapToLong(i -> i * i * i).sum();",
    "        return IntStream.rangeClosed(1, (int) n).filter(i -> i % 2 == 0).mapToLong(i -> (long) Math.pow(i, 3)).sum();",
    "        return n*n*n;",
    "        return n * n * n;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        long sum = 0;\n        for (int i = 2; i <= n; i += 2) {\n            sum += Math.pow(i, 3);\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(x -> x).filter(x -> x % 2 == 0).mapToLong(x -> x * x * x).sum();",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return IntStream.rangeClosed(1, (int) n).mapToLong(i -> i * i * i).sum();",
    "        return n * (n + 1) * (n + 2);",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += Math.pow(i, 3);\n        }\n        return sum;",
    "        return 0;",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(i -> i * i * i).sum();",
    "        return IntStream.rangeClosed(1, (int)n).map(x -> x * x * x).sum();",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return 0;",
    "        return n * n * n;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return 0;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        // Write your code here\n        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n*n*n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        // Write your code here\n        long sum = 0;\n        for (int i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += (i * i * i);\n        }\n        return sum;",
    "        return IntStream.rangeClosed(1, (int)n)\n            .mapToLong(x -> x * x * x)\n            .sum();",
    "        return 0;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        // Write your code here\n        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= 2 * n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (int i = 2; i <= n * 2; i += 2) {\n            sum += Math.pow(i, 3);\n        }\n        return sum;",
    "        long sum = 0;\n        for(long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return 0;",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(x -> x*x*x).sum();",
    "        return IntStream.rangeClosed(1, (int) n).mapToLong(x -> x * x * x).sum();",
    "        return n*n*n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return n * n * n;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return IntStream.rangeClosed(1, (int) n).mapToLong(i -> i * i * i).sum();",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(i -> i).filter(i -> i % 2 == 0).mapToLong(i -> i * i * i).sum();",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return n * n * n;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return n*n*n;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(i -> i).filter(i -> i % 2 == 0).mapToLong(i -> i * i * i).sum();",
    "        return n * n * n;",
    "        return n * n * n;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n*n*n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return n*n*n;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return Stream.iterate(2, i -> i + 2).limit(n).map(i -> i * i * i).reduce(0, (a, b) -> a + b);",
    "        return 0;",
    "        return 0;",
    "        return IntStream.rangeClosed(1, (int) n).filter(i -> i % 2 == 0).mapToLong(i -> i * i * i).sum();",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * n * n;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * n * n;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return IntStream.range(0, (int)n).mapToLong(i -> i * i * i).sum();",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return IntStream.rangeClosed(1, (int)n).map(x -> x * x * x).sum();",
    "        return n * (n + 1) * (n + 2) / 2;",
    "        return 0;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        // Write your code here\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                sum += i * i * i;\n            }\n        }\n        return sum;",
    "        return IntStream.rangeClosed(1, (int)n).filter(x -> x % 2 == 0).map(x -> x * x * x).sum();",
    "        return IntStream.range(0, (int)n).mapToLong(i -> i * i * i).sum();",
    "        return n * n * n;",
    "        return n*n*(n+1)*(n+1)/4;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n;",
    "        return n * n * n;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return n * n * n;",
    "        return n * n * n;",
    "        return n * (n + 1) * (n + 2);",
    "        return n * n * n;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += (i * 2) * (i * 2) * (i * 2);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return IntStream.rangeClosed(1, (int)n).map(i -> i * i * i).sum();",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return 0;",
    "        return n * n * n;",
    "        return n*n*n;",
    "        return IntStream.rangeClosed(1, (int) n).mapToLong(i -> i * i * i).sum();",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return 0;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        long sum = 0;\n        for (int i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += (i * i * i);\n        }\n        return sum;",
    "        return n * n * n;",
    "        return Stream.iterate(2, i -> i + 2).limit(n).map(i -> i * i * i).reduce(0, (a, b) -> a + b);",
    "        return n * n * n;",
    "        return IntStream.rangeClosed(1, (int)n).mapToLong(i -> i).filter(i -> i % 2 == 0).mapToLong(i -> i * i * i).sum();",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * n * n;",
    "        // Write your code here\n        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return n * n * n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return n*n*n;",
    "        return IntStream.range(0, (int) n).map(i -> i * 2 + 2).mapToLong(i -> i * i * i).sum();",
    "        return IntStream.rangeClosed(1, (int)n).map(x -> x * x * x).sum();",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * n * n;",
    "        // Write your code here\n        long sum = 0;\n        for (int i = 0; i <= n; i++) {\n            if (i % 2 == 0) {\n                sum += i * i * i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * n * n;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return IntStream.rangeClosed(1, (int)n).filter(x -> x % 2 == 0).mapToLong(x -> (long)Math.pow(x, 3)).sum();",
    "        return 0;"
  ]
}
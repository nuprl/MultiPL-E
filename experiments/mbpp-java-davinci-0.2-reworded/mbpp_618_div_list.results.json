{
  "name": "mbpp_618_div_list",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_618_div_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188268,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188268,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188268,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188268,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188270,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188270,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> ans = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            ans.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188268,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188269,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i).floatValue() / nums2.get(i).floatValue());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188271,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "/tmp/tmpw031l5bq.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> res = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            res.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "/tmp/tmp52iyczoy.java:13: error: incompatible types: long cannot be converted to Float\n            result.add(nums1.get(i) / nums2.get(i));\n                                    ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / (float) nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188266,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i).floatValue() / nums2.get(i).floatValue());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188270,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float) nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / (float)nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188264,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to divide two array lists element wise.\n    public static ArrayList<Float> divList(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((float)nums1.get(i) / nums2.get(i));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Float>(Arrays.asList((float)4.0f, (float)2.5f, (float)2.0f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))).equals((new ArrayList<Float>(Arrays.asList((float)3.0f, (float)0.5f)))));\n    assert(divList((new ArrayList<Long>(Arrays.asList((long)90l, (long)120l))), (new ArrayList<Long>(Arrays.asList((long)50l, (long)70l)))).equals((new ArrayList<Float>(Arrays.asList((float)1.8f, (float)1.7142857142857142f)))));\n    }\n\n}\n",
      "timestamp": 1667188267,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
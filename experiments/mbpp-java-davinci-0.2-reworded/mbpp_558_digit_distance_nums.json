{
  "name": "mbpp_558_digit_distance_nums",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the sum of the per-digit difference between two integers.\n    public static long digitDistanceNums(long n1, long n2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_558_digit_distance_nums.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(digitDistanceNums((1l), (2l)) == (1l));\n    assert(digitDistanceNums((23l), (56l)) == (6l));\n    assert(digitDistanceNums((123l), (256l)) == (7l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return 0;",
    "        // Write your code here\n        return 0;",
    "        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            long d1 = n1 % 10;\n            long d2 = n2 % 10;\n            sum += Math.abs(d1 - d2);\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Write your code here\n        long sum = 0;\n        String s1 = String.valueOf(n1);\n        String s2 = String.valueOf(n2);\n        for (int i = 0; i < s1.length(); i++) {\n            sum += Math.abs(s1.charAt(i) - s2.charAt(i));\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        // Your code here.\n        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        long sum = 0;\n        while (n1 > 0 || n2 > 0) {\n            sum += Math.abs((n1 % 10) - (n2 % 10));\n            n1 /= 10;\n            n2 /= 10;\n        }\n        return sum;",
    "        return 0;",
    "        return 0;",
    "        return 0;",
    "        return 0;"
  ]
}
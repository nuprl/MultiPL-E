{
  "name": "mbpp_77_is_Diff",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long rem = temp % 10;\n            sum += rem;\n            temp /= 10;\n            rem = temp % 10;\n            diff += rem;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0 || diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (n > 0) {\n            long digit = n % 10;\n            sum += digit;\n            diff -= digit;\n            n /= 10;\n        }\n        return (sum == diff);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoe372q9x.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum2 += i;\n            }\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzvn4pnt.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n == 0) {\n            return true;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 0) {\n                even += digit;\n            } else {\n                odd += digit;\n            }\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdf1_4x8.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n            diff += num % 10;\n            num /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) n = -n;\n        if (n < 10) return false;\n        long even = 0, odd = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 0) even += digit;\n            else odd += digit;\n            n /= 10;\n        }\n        return isDiff(even - odd);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7pbzbttv.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp != 0) {\n            long r = temp % 10;\n            if (sum >= diff) {\n                diff += r;\n            } else {\n                sum += r;\n            }\n            temp /= 10;\n        }\n        return (sum == diff);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0o1lhex.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        while (n > 0) {\n            even += n % 10;\n            n /= 10;\n            odd += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(even - odd));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjfjs7tk.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n *= -1;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnpnsbb4.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6zvngc2.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum1 += n % 10;\n            n /= 10;\n        }\n        return sum == sum1;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long d = num % 10;\n            num /= 10;\n            if (num > 0) {\n                diff += d;\n            } else {\n                sum += d;\n            }\n        }\n        return sum - diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp5_zb16d.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long odd = 0, even = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0)\n                even += d;\n            else\n                odd += d;\n            n /= 10;\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp83ter6q6.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n == 0) {\n            return true;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return isDiff(even - odd);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpby8w82l9.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long num = n;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n            sum2 += num % 10;\n            num /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "/tmp/tmppbdkzh4e.java:76: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long i = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (i % 2 == 0) {\n                sum += digit;\n            } else {\n                sum2 += digit;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n            diff += temp % 10;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        // Write your code here\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(even - odd) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) n = -n;\n        long odd = 0, even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = String.valueOf(n);\n        int l = s.length();\n        int sum = 0;\n        for (int i = 0; i < l; i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "/tmp/tmppbdkzh4e.java:76: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long i = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (i % 2 == 0) {\n                sum += d;\n            } else {\n                sum2 += d;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        while (n > 0) {\n            even += n % 10;\n            n /= 10;\n            odd += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(even - odd));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjfjs7tk.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long odd = 0, even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = Long.toString(n);\n        long sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189720,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long rem = temp % 10;\n            temp = temp / 10;\n            sum += rem;\n            diff -= rem;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp85yjsg34.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n        temp = n;\n        while (temp > 0) {\n            sum2 += temp % 100;\n            temp /= 100;\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjeg4cmm7.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int)(n % 10)]++;\n            n /= 10;\n        }\n        int odd = 0;\n        int even = 0;\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] % 2 == 0) {\n                even += digits[i];\n            } else {\n                odd += digits[i];\n            }\n        }\n        return Math.abs(even - odd) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8vcjgecy.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long count = 0;\n        while (n > 0) {\n            if (count % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            count++;\n        }\n        return sum - diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while(temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            long d = n % 10;\n            n /= 10;\n            sum += d;\n            diff -= d;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm32bntbr.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = String.valueOf(n);\n        int l = s.length();\n        int sum = 0;\n        for (int i = 0; i < l; i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        while (n > 0) {\n            long d = n % 10;\n            sum += d;\n            n /= 10;\n            d = n % 10;\n            sum1 += d;\n            n /= 10;\n        }\n        return sum == sum1;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum2 += i;\n            }\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzvn4pnt.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        int sum = 0;\n        for (int i = 0; i < 10; i++) {\n            sum += digits[i] * (i % 2 == 0 ? 1 : -1);\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189723,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv55dgwcc.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189723,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplmqpmx2y.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long r = temp % 10;\n            sum += r;\n            temp /= 10;\n            r = temp % 10;\n            diff += r;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            long d = n % 10;\n            n = n / 10;\n            diff += (i % 2 == 0) ? d : -d;\n            i++;\n        }\n        return diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189723,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "/tmp/tmppbdkzh4e.java:76: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            long d = n % 10;\n            n /= 10;\n            if (sum <= diff) {\n                sum += d;\n            } else {\n                diff += d;\n            }\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189724,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_38yr7v.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n            sum2 += temp % 10;\n            temp /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189724,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum1 = 0, sum2 = 0;\n        while (n > 0) {\n            sum1 += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum1 == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0 || diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0 || diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n == 0) {\n            return false;\n        }\n        if (n == 1) {\n            return true;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189724,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.java:31)\n\tat Problem.isDiff(tmp8qo09ukw.j",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "/tmp/tmppbdkzh4e.java:76: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int sum = 0;\n        int diff = 0;\n        while (n > 0) {\n            int d = (int) (n % 10);\n            n /= 10;\n            if (sum > diff) {\n                diff -= d;\n            } else {\n                sum += d;\n            }\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189725,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_j0t6xu6.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < String.valueOf(n).length(); i++) {\n            if (i % 2 == 0) {\n                sum += Character.getNumericValue(String.valueOf(n).charAt(i));\n            } else {\n                sum2 += Character.getNumericValue(String.valueOf(n).charAt(i));\n            }\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum1 = 0, sum2 = 0;\n        while (n > 0) {\n            sum1 += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum1 == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189725,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        long i = 1;\n        while (n > 0) {\n            long d = n % 10;\n            if (i % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n            i++;\n        }\n        return odd - even == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmx_vx3g.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189717,
      "stdout": "",
      "stderr": "/tmp/tmppbdkzh4e.java:76: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            long r = n % 10;\n            if (i % 2 == 0) {\n                sum += r;\n            } else {\n                diff += r;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 0) {\n                even += digit;\n            } else {\n                odd += digit;\n            }\n            n /= 10;\n        }\n        return isDiff(odd - even);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_ymr7u1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n        temp = n;\n        while (temp > 0) {\n            sum2 += temp % 100;\n            temp /= 100;\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjeg4cmm7.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 1;\n        while (n > 0) {\n            long digit = n % 10;\n            if (i % 2 == 0) {\n                diff += digit;\n            } else {\n                sum += digit;\n            }\n            n /= 10;\n            i++;\n        }\n        return (sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long[] digits = new long[20];\n        int i = 0;\n        while (n > 0) {\n            digits[i++] = n % 10;\n            n /= 10;\n        }\n        long sum1 = 0, sum2 = 0;\n        for (int j = 0; j < i; j++) {\n            if (j % 2 == 0) {\n                sum1 += digits[j];\n            } else {\n                sum2 += digits[j];\n            }\n        }\n        return Math.abs(sum1 - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189727,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        while (temp > 0) {\n            sum2 += temp % 100;\n            temp /= 100;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189727,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5bk4o8v5.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int sum = 0;\n        for (int i = 0; i < n.length(); i++) {\n            if (i % 2 == 0) {\n                sum += n.charAt(i) - '0';\n            } else {\n                sum -= n.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189727,
      "stdout": "",
      "stderr": "/tmp/tmpt71r63qn.java:12: error: long cannot be dereferenced\n        for (int i = 0; i < n.length(); i++) {\n                             ^\n/tmp/tmpt71r63qn.java:14: error: long cannot be dereferenced\n                sum += n.charAt(i) - '0';\n                        ^\n/tmp/tmpt71r63qn.java:16: error: long cannot be dereferenced\n                sum -= n.charAt(i) - '0';\n                        ^\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long digit = num % 10;\n            num /= 10;\n            sum += digit;\n            diff -= digit;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189728,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3jffe2k.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long rem = temp % 10;\n            sum += rem;\n            temp /= 10;\n            rem = temp % 10;\n            diff += rem;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (i % 2 == 0) {\n                sum += d;\n            } else {\n                diff += d;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < String.valueOf(n).length(); i++) {\n            if (i % 2 == 0) {\n                sum += Character.getNumericValue(String.valueOf(n).charAt(i));\n            } else {\n                sum2 += Character.getNumericValue(String.valueOf(n).charAt(i));\n            }\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) n = -n;\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46sr_pct.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = Long.toString(n);\n        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long rem = temp % 10;\n            sum += rem;\n            temp /= 10;\n            rem = temp % 10;\n            diff += rem;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum1 = 0;\n        long sum2 = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum1 += n % 10;\n            } else {\n                sum2 += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(sum1 - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            temp /= 10;\n            sum += digit;\n            diff -= digit;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189730,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwklx7ikj.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                sum2 += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n            diff += num % 10;\n            num /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n == 0) {\n            return true;\n        }\n        if (n < 10) {\n            return false;\n        }\n        return isDiff((n / 10) - (n % 10));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        int i = 0;\n        while (temp > 0) {\n            if (i % 2 == 0) {\n                sum += temp % 10;\n            } else {\n                diff += temp % 10;\n            }\n            temp /= 10;\n            i++;\n        }\n        return sum - diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum2 += i;\n            }\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprzvn4pnt.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n            sum2 += temp % 10;\n            temp /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189731,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long tmp = n;\n        while (tmp > 0) {\n            sum += tmp % 10;\n            tmp /= 10;\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189731,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfpbujs_.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum1 = 0;\n        long sum2 = 0;\n        long num = n;\n        while (num > 0) {\n            sum1 += num % 10;\n            num /= 10;\n            sum2 += num % 10;\n            num /= 10;\n        }\n        return Math.abs(sum1 - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189732,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long diff = n % 10 - n / 10 % 10;\n        long m = n / 100;\n        while (m > 0) {\n            if (diff != m % 10 - m / 10 % 10) {\n                return false;\n            }\n            m /= 100;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189732,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq39yuzwv.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189732,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        boolean isPositive = true;\n        while (n > 0) {\n            long digit = n % 10;\n            if (isPositive) {\n                sum += digit;\n            } else {\n                diff += digit;\n            }\n            isPositive = !isPositive;\n            n /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        int odd = 0;\n        int even = 0;\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] % 2 == 0) {\n                even += digits[i];\n            } else {\n                odd += digits[i];\n            }\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_fp830i.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        int i = 0;\n        while (temp > 0) {\n            if (i % 2 == 0) {\n                sum += temp % 10;\n            } else {\n                diff += temp % 10;\n            }\n            temp /= 10;\n            i++;\n        }\n        return sum - diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189730,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long rem = temp % 10;\n            sum += rem;\n            temp /= 10;\n            rem = temp % 10;\n            diff += rem;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) == 11;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3vz92n_s.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n        }\n        temp = n;\n        while (temp > 0) {\n            sum2 += temp % 100;\n            temp /= 100;\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189721,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjeg4cmm7.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            long d = n % 10;\n            sum += d;\n            n /= 10;\n            d = n % 10;\n            sum2 += d;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = String.valueOf(n);\n        int l = s.length();\n        int sum = 0;\n        for (int i = 0; i < l; i++) {\n            int d = s.charAt(i) - '0';\n            if (i % 2 == 0) {\n                sum += d;\n            } else {\n                sum -= d;\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum2 += i;\n            }\n        }\n        return sum - sum2 == 11;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189734,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdevh8h1.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long d = num % 10;\n            num /= 10;\n            if (sum < diff) {\n                sum += d;\n            } else {\n                diff += d;\n            }\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189734,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9h7md7dx.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 0) {\n                even += digit;\n            } else {\n                odd += digit;\n            }\n            n /= 10;\n        }\n        return isDiff(odd - even);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_ymr7u1.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long d = 0;\n        long m = n;\n        while (m > 0) {\n            d += m % 10;\n            m /= 10;\n        }\n        return d % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189735,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjhdxbxl3.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            return isDiff(-n);\n        }\n        if (n < 10) {\n            return n == 0;\n        }\n        return isDiff((n / 10) - (n % 10));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long diff = n % 10 - n / 10 % 10;\n        long m = n / 100;\n        while (m > 0) {\n            long d = m % 10 - m / 10 % 10;\n            if (d != diff) {\n                return false;\n            }\n            m /= 100;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189734,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vwkv85o.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm6zvngc2.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int sum = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                sum -= n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189735,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < String.valueOf(n).length(); i++) {\n            if (i % 2 == 0) {\n                sum += Character.getNumericValue(String.valueOf(n).charAt(i));\n            } else {\n                sum2 += Character.getNumericValue(String.valueOf(n).charAt(i));\n            }\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            long digit = n % 10;\n            if (digit % 2 == 0) {\n                even += digit;\n            } else {\n                odd += digit;\n            }\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189736,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59249irl.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n == 0) {\n            return true;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (d % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n        }\n        return isDiff(even - odd);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpby8w82l9.java:35)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long digit = num % 10;\n            sum += digit;\n            diff -= digit;\n            num /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189736,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nbk1kas.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long i = 0;\n        while (n != 0) {\n            if (i % 2 == 0) {\n                sum += n % 10;\n            } else {\n                diff += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189736,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) n = -n;\n        if (n < 10) return false;\n        long d = n % 10;\n        long m = n / 10;\n        return isDiff(m - d);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189736,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4mjjtrt.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long r = temp % 10;\n            if (sum > diff) {\n                diff = diff - r;\n            } else {\n                sum = sum + r;\n            }\n            temp = temp / 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189737,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgk27esql.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp != 0) {\n            long rem = temp % 10;\n            sum += rem;\n            temp /= 10;\n            rem = temp % 10;\n            diff += rem;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            long r = n % 10;\n            sum += r;\n            diff -= r;\n            n /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189737,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbjv2hk7.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        int odd = 0;\n        int even = 0;\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] % 2 == 0) {\n                even += digits[i];\n            } else {\n                odd += digits[i];\n            }\n        }\n        return Math.abs(odd - even) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189733,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_fp830i.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        while (n > 0) {\n            even += n % 10;\n            n /= 10;\n            odd += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(even - odd));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjfjs7tk.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189719,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while(n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189737,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = Long.toString(n);\n        int sum = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189729,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum1 += n % 10;\n            n /= 10;\n        }\n        return sum == sum1;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189716,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        while (temp > 0) {\n            sum2 += temp % 10;\n            temp /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189738,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx6cckvde.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            diff += n % 10;\n            n /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189738,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            temp /= 10;\n            if (temp % 2 == 0) {\n                sum += digit;\n            } else {\n                diff += digit;\n            }\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189738,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpshwklh6b.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            diff += temp % 10;\n            temp /= 10;\n            diff -= temp % 10;\n            temp /= 10;\n        }\n        return diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189739,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            long d = n % 10;\n            n /= 10;\n            sum += d;\n            sum2 += n % 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189739,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9w3dkse6.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < String.valueOf(n).length(); i++) {\n            if (i % 2 == 0) {\n                sum += Character.getNumericValue(String.valueOf(n).charAt(i));\n            } else {\n                sum2 += Character.getNumericValue(String.valueOf(n).charAt(i));\n            }\n        }\n        return sum - sum2 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189726,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        long i = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (i % 2 == 0) {\n                even += d;\n            } else {\n                odd += d;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(even - odd) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189739,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n            diff += temp % 10;\n            temp /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189740,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long even = 0;\n        long odd = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return isDiff(even - odd);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189740,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpid55cfna.java:33)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            sum += temp % 10;\n            temp /= 10;\n            diff += temp % 10;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189718,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return isDiff(sum - sum2);\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189741,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjfr4w_8.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        boolean isPositive = true;\n        while (n > 0) {\n            long d = n % 10;\n            if (isPositive) {\n                sum += d;\n            } else {\n                diff += d;\n            }\n            isPositive = !isPositive;\n            n /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189740,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sumEven = 0;\n        long sumOdd = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                sumEven += n % 10;\n            } else {\n                sumOdd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(sumEven - sumOdd) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189741,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) n = -n;\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum -= n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189741,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        long temp = n;\n        while (n > 0) {\n            long rem = n % 10;\n            sum = sum + rem;\n            n = n / 10;\n        }\n        while (temp > 0) {\n            long rem = temp % 100;\n            sum2 = sum2 + rem;\n            temp = temp / 100;\n        }\n        if (sum - sum2 == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189741,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphq_eprhp.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189742,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        String s = String.valueOf(n);\n        int len = s.length();\n        int sum = 0;\n        for (int i = 0; i < len; i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189742,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        long i = 0;\n        while (n > 0) {\n            long d = n % 10;\n            if (i % 2 == 0) {\n                diff += d;\n            } else {\n                diff -= d;\n            }\n            n /= 10;\n            i++;\n        }\n        return diff % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189742,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long digit = num % 10;\n            sum += digit;\n            num /= 10;\n            digit = num % 10;\n            diff += digit;\n            num /= 10;\n        }\n        return Math.abs(sum - diff) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        while (n > 0) {\n            odd += n % 10;\n            n /= 10;\n            even += n % 10;\n            n /= 10;\n        }\n        return isDiff(Math.abs(odd - even));\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189722,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9yif8k_.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            long d = n % 10;\n            sum += d;\n            n /= 10;\n            d = n % 10;\n            sum2 += d;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189712,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        while (n > 0) {\n            long d = n % 10;\n            sum += d;\n            diff -= d;\n            n /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189743,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_kt10ce.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num != 0) {\n            long digit = num % 10;\n            sum += digit;\n            diff -= digit;\n            num /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189743,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpah9jnt8e.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189714,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long diff = 0;\n        while (n > 0) {\n            diff += n % 10;\n            n /= 10;\n            diff -= n % 10;\n            n /= 10;\n        }\n        return diff == 0;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189713,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long sum1 = 0;\n        while(n > 0) {\n            long d = n % 10;\n            sum += d;\n            n /= 10;\n            d = n % 10;\n            sum1 += d;\n            n /= 10;\n        }\n        return Math.abs(sum - sum1) == 11;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189743,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp03kt6sfc.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n        long sum = 0;\n        long diff = 0;\n        long temp = n;\n        while (temp > 0) {\n            long digit = temp % 10;\n            sum += digit;\n            temp /= 10;\n            digit = temp % 10;\n            diff += digit;\n            temp /= 10;\n        }\n        return sum == diff;\n    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
      "timestamp": 1667189744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
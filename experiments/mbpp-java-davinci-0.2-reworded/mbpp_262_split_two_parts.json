{
  "name": "mbpp_262_split_two_parts",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list and an integer L and splits the given array list into two parts where the length of the first part of the array list is L, and returns the resulting array lists in a pair.\n    public static Object splitTwoParts(Object list1, long L) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_262_split_two_parts.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(splitTwoParts((new Object(Arrays.asList((long)1l, (long)1l, (long)2l, (long)3l, (long)4l, (long)4l, (long)5l, (long)1l))), (3l)).equals(Pair.with(new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l)), new ArrayList<Long>(Arrays.asList((long)3l, (long)4l, (long)4l, (long)5l, (long)1l)))));\n    assert(splitTwoParts((new Object(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\"))), (2l)).equals(Pair.with(new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"b\")), new ArrayList<String>(Arrays.asList((String)\"c\", (String)\"d\")))));\n    assert(splitTwoParts((new Object(Arrays.asList((String)\"p\", (String)\"y\", (String)\"t\", (String)\"h\", (String)\"o\", (String)\"n\"))), (4l)).equals(Pair.with(new ArrayList<String>(Arrays.asList((String)\"p\", (String)\"y\", (String)\"t\", (String)\"h\")), new ArrayList<String>(Arrays.asList((String)\"o\", (String)\"n\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Object list2 = new ArrayList();\n        for (int i = 0; i < L; i++) {\n            ((ArrayList) list2).add(((ArrayList) list1).get(i));\n        }\n        for (int i = 0; i < L; i++) {\n            ((ArrayList) list1).remove(0);\n        }\n        return new Pair(list1, list2);",
    "        // Write your code here\n        return null;",
    "        return null;",
    "        Object list2 = new ArrayList<>();\n        if (list1 instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) list1;\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    list2 = (ArrayList<Object>) list.get(i);\n                }\n            }\n        }\n        return new Pair<>(list1, list2);",
    "        return null;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Object> list = (ArrayList<Object>) list1;\n        ArrayList<Object> list2 = new ArrayList<Object>();\n        ArrayList<Object> list3 = new ArrayList<Object>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list.get(i));\n        }\n        for (int i = (int) L; i < list.size(); i++) {\n            list3.add(list.get(i));\n        }\n        Pair<ArrayList<Object>, ArrayList<Object>> pair = new Pair<ArrayList<Object>, ArrayList<Object>>(list2, list3);\n        return pair;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (list1 instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) list1;\n            ArrayList<Object> first = new ArrayList<Object>();\n            ArrayList<Object> second = new ArrayList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    first.add(list.get(i));\n                } else {\n                    second.add(list.get(i));\n                }\n            }\n            return new Pair<ArrayList<Object>, ArrayList<Object>>(first, second);\n        } else if (list1 instanceof String) {\n            String list = (String) list1;\n            String first = \"\";\n            String second = \"\";\n            for (int i = 0; i < list.length(); i++) {\n                if (i < L) {\n                    first += list.charAt(i);\n                } else {\n                    second += list.charAt(i);\n                }\n            }\n            return new Pair<String, String>(first, second);\n        } else if (list1 instanceof int[]) {\n            int[] list = (int[]) list1;\n            int[] first = new int[(int) L];\n            int[] second = new int[list.length - (int) L];\n            for (int i = 0; i < list.length; i++) {\n                if (i < L) {\n                    first[i] = list[i];\n                } else {\n                    second[i - (int) L] = list[i];\n                }\n            }\n            return new Pair<int[], int[]>(first, second);\n        } else if (list1 instanceof char[]) {\n            char[] list = (char[]) list1;\n            char[] first = new char[(int) L];\n            char[] second = new char[list.length - (int) L];\n            for (int i = 0; i < list.length;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = new ArrayList<Object>();\n        List<Object> list3 = new ArrayList<Object>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list.get(i));\n        }\n        for (int i = (int) L; i < list.size(); i++) {\n            list3.add(list.get(i));\n        }\n        Pair<List<Object>, List<Object>> pair = new Pair<List<Object>, List<Object>>(list2, list3);\n        return pair;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) list1;\n        List<Object> first = new ArrayList<Object>();\n        List<Object> second = new ArrayList<Object>();\n        for(int i = 0; i < L; i++) {\n            first.add(list.get(i));\n        }\n        for(int i = (int) L; i < list.size(); i++) {\n            second.add(list.get(i));\n        }\n        return new Pair<List<Object>, List<Object>>(first, second);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return null;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = list.subList(0, (int) L);\n        List<Object> list3 = list.subList((int) L, list.size());\n        return new Pair<>(list2, list3);",
    "        Object list2 = new ArrayList<>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list1.get(i));\n        }\n        return new Pair<>(list2, list1.subList(L, list1.size()));",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Integer> list = (ArrayList<Integer>) list1;\n        ArrayList<Integer> list2 = new ArrayList<Integer>();\n        ArrayList<Integer> list3 = new ArrayList<Integer>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i < L) {\n                list2.add(list.get(i));\n            } else {\n                list3.add(list.get(i));\n            }\n        }\n        Pair<ArrayList<Integer>, ArrayList<Integer>> pair = new Pair<ArrayList<Integer>, ArrayList<Integer>>(list2, list3);\n        return pair;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Object> list = (ArrayList<Object>) list1;\n        ArrayList<Object> list2 = new ArrayList<Object>();\n        ArrayList<Object> list3 = new ArrayList<Object>();\n        for(int i = 0; i < L; i++) {\n            list2.add(list.get(i));\n        }\n        for(int i = (int) L; i < list.size(); i++) {\n            list3.add(list.get(i));\n        }\n        Pair<ArrayList<Object>, ArrayList<Object>> pair = new Pair<ArrayList<Object>, ArrayList<Object>>(list2, list3);\n        return pair;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Object list2 = null;\n        if (list1 instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) list1;\n            list2 = new ArrayList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    list2.add(list.get(i));\n                } else {\n                    list2.add(list.get(i));\n                }\n            }\n        } else if (list1 instanceof LinkedList) {\n            LinkedList<Object> list = (LinkedList<Object>) list1;\n            list2 = new LinkedList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    list2.add(list.get(i));\n                } else {\n                    list2.add(list.get(i));\n                }\n            }\n        } else if (list1 instanceof Vector) {\n            Vector<Object> list = (Vector<Object>) list1;\n            list2 = new Vector<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    list2.add(list.get(i));\n                } else {\n                    list2.add(list.get(i));\n                }\n            }\n        } else if (list1 instanceof Stack) {\n            Stack<Object> list = (Stack<Object>) list1;\n            list2 = new Stack<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i < L) {\n                    list2.add(list.get(i));\n                } else {\n                    list2.add(list.get(i));\n                }\n            }\n        }\n        return new Pair<Object, Object>(list1, list2);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = new ArrayList<>();\n        List<Object> list3 = new ArrayList<>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list.get(i));\n        }\n        for (int i = (int) L; i < list.size(); i++) {\n            list3.add(list.get(i));\n        }\n        Pair<List<Object>, List<Object>> pair = new Pair<>(list2, list3);\n        return pair;",
    "        Object list2 = new ArrayList();\n        for (int i = 0; i < L; i++) {\n            Object item = ((ArrayList) list1).get(i);\n            ((ArrayList) list2).add(item);\n        }\n        return new Pair(list2, list1);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return null;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> list2 = new ArrayList<Object>();\n        List<Object> list3 = new ArrayList<Object>();\n        for (int i = 0; i < L; i++) {\n            list2.add(list.get(i));\n        }\n        for (int i = (int) L; i < list.size(); i++) {\n            list3.add(list.get(i));\n        }\n        return new Pair<List<Object>, List<Object>>(list2, list3);",
    "        return null;"
  ]
}
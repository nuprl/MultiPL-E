{
  "name": "mbpp_69_is_sublist",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s))\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp308zv83d.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) break;\n            }\n            if (j == m) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        while (i < l.size()) {\n            if (l.get(i) == s.get(0)) {\n                int j = 0;\n                while (j < s.size() && i + j < l.size() && l.get(i + j) == s.get(j)) {\n                    j++;\n                }\n                if (j == s.size()) return true;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188679,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188679,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j)))\n                        break;\n                    if (j == s.size() - 1)\n                        return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 1;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean flag = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr68k57c0.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (n < m) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            int j = 0;\n            while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                j++;\n            }\n            if (j == s.size()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j = 0;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 1;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) break;\n                }\n                if (j == s.size()) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSub = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj38pd66l.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 1;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188685,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s))\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188685,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) {\n            return true;\n        }\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (j = 0; j < s.size() && i + j < l.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i < n - m + 1; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                j++;\n                if (j == s.size()) return true;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            boolean isSublist = true;\n            for (int j = 0; j < s.size(); j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    isSublist = false;\n                    break;\n                }\n            }\n            if (isSublist) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188687,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) {\n            return true;\n        }\n        if (l.size() == 0) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                j++;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188687,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 1;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist)\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j = 0;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188689,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist)\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188689,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) {\n            return true;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == s.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188690,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52r3wfgg.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188691,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvhrzw32.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188691,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size()) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n                if (j == s.size()) return true;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188691,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188691,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if(s.size() > l.size()) {\n            return false;\n        }\n        for(int i = 0; i <= l.size() - s.size(); i++) {\n            if(l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for(int j = 0; j < s.size(); j++) {\n                    if(!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if(isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188692,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188692,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s))\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) break;\n                }\n                if (j == s.size()) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188693,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188691,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean match = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        match = false;\n                        break;\n                    }\n                }\n                if (match) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188693,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist)\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188693,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for(int i=0;i<=n-m;i++) {\n            int j;\n            for(j=0;j<m;j++) {\n                if(l.get(i+j) != s.get(j))\n                    break;\n            }\n            if(j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188693,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188692,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188689,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size())\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i < n - m + 1; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) == s.get(0)) {\n                if (l.size() - i < s.size()) {\n                    return false;\n                }\n                for (int j = 0; j < s.size(); j++) {\n                    if (l.get(i + j) != s.get(j)) {\n                        break;\n                    }\n                    if (j == s.size() - 1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == s.size()) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188690,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp52r3wfgg.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean flag = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188695,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188695,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (l.size() < s.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188695,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size()) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n            } else {\n                j = 0;\n            }\n            if (j == s.size()) {\n                return true;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) == s.get(0)) {\n                int j = 0;\n                for (j = 0; j < s.size(); j++) {\n                    if (l.get(i + j) != s.get(j)) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188696,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) break;\n                }\n                if (j == s.size()) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i < n - m + 1; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                j++;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        while (i < l.size()) {\n            if (l.get(i) == s.get(0)) {\n                int j = 0;\n                while (j < s.size() && i + j < l.size() && l.get(i + j) == s.get(j)) {\n                    j++;\n                }\n                if (j == s.size()) return true;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188679,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                if (l.subList(i, i + s.size()).equals(s))\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188697,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int j = 0;\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n            } else {\n                j = 0;\n            }\n            if (j == s.size()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0, j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188698,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwpsaku80.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 1;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i) == s.get(j)) {\n                j++;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188698,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i < n; i++) {\n            if (l.get(i) == s.get(0)) {\n                int j = 0;\n                while (j < m && l.get(i + j) == s.get(j)) {\n                    j++;\n                }\n                if (j == m) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188699,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int i = 0;\n        int j = 0;\n        while (i < l.size() && j < s.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == s.size();\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpir64_0ts.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean found = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) return false;\n        int i = 0, j = 0;\n        while (i < n && j < m) {\n            if (l.get(i).equals(s.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == m;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188692,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188692,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() == 0) return true;\n        int i = 0;\n        int j = 0;\n        while (i < l.size()) {\n            if (l.get(i).equals(s.get(j))) {\n                j++;\n                if (j == s.size()) return true;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                for (; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        break;\n                    }\n                }\n                if (j == s.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i < n - m + 1; i++) {\n            int j = 0;\n            for (j = 0; j < m; j++) {\n                if (l.get(i + j) != s.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188701,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 1; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size())\n            return false;\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                int j = 0;\n                while (j < s.size() && l.get(i + j).equals(s.get(j))) {\n                    j++;\n                }\n                if (j == s.size())\n                    return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188694,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean isSublist = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        isSublist = false;\n                        break;\n                    }\n                }\n                if (isSublist) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                if (l.subList(i, i + s.size()).equals(s)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        if (n < m)\n            return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (l.get(i + j) != s.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.subList(i, i + s.size()).equals(s)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) {\n            return false;\n        }\n        for (int i = 0; i <= l.size() - s.size(); i++) {\n            if (l.get(i).equals(s.get(0))) {\n                if (l.subList(i, i + s.size()).equals(s)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        int n = l.size();\n        int m = s.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (l.get(i + j) != s.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check whether an array array list contains the given subarray list or not.\n    public static boolean isSublist(ArrayList<Long> l, ArrayList<Long> s) {\n        if (s.size() > l.size()) return false;\n        for (int i = 0; i < l.size() - s.size() + 1; i++) {\n            if (l.get(i).equals(s.get(0))) {\n                boolean match = true;\n                for (int j = 0; j < s.size(); j++) {\n                    if (!l.get(i + j).equals(s.get(j))) {\n                        match = false;\n                        break;\n                    }\n                }\n                if (match) return true;\n            }\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)3l, (long)7l)))) == (false));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)4l, (long)3l)))) == (true));\n    assert(isSublist((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)5l, (long)7l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)6l)))) == (false));\n    }\n\n}\n",
      "timestamp": 1667188702,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
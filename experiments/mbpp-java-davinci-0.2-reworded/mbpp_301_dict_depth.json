{
  "name": "mbpp_301_dict_depth",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the depth of a hash map.\n    public static long dictDepth(Object d) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(dictDepth((new Object())))))))) == (4l));\n    assert(dictDepth((new Object((\"c\", \"python\")))))) == (2l));\n    assert(dictDepth((new Object((4l, \"Mon\")))))))) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                max = Math.max(max, dictDepth(v));\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long depth = dictDepth(e.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            long max = 0;\n            for (Object k : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            return 1 + Collections.max(\n                ((Map)d).values().stream()\n                    .map(x -> dictDepth(x))\n                    .collect(Collectors.toList())\n            );\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            return 1 + Collections.max(\n                ((Map) d).values().stream()\n                    .map(Problem::dictDepth)\n                    .collect(Collectors.toList())\n            );\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                max = Math.max(max, depth);\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            if (map.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                max = Math.max(max, depth);\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) return 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) max = depth;\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> dMap = (Map<Object, Object>) d;\n            long maxDepth = 0;\n            for (Object key : dMap.keySet()) {\n                long depth = dictDepth(dMap.get(key));\n                if (depth > maxDepth) {\n                    maxDepth = depth;\n                }\n            }\n            return maxDepth + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else if (d instanceof List) {\n            List<Object> l = (List<Object>) d;\n            long max = 0;\n            for (Object o : l) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<Object, Object> map = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object key : map.keySet()) {\n            long depth = dictDepth(map.get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            if (map.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        Map<Object, Object> dict = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object key : dict.keySet()) {\n            long depth = dictDepth(dict.get(key));\n            if (depth > max) max = depth;\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long d2 = dictDepth(e.getValue());\n                if (d2 > depth) {\n                    depth = d2;\n                }\n            }\n            return depth + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<String, Object> map = (Map<String, Object>) d;\n        long max = 0;\n        for (Object value : map.values()) {\n            max = Math.max(max, dictDepth(value));\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        Map<Object, Object> map = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object key : map.keySet()) {\n            long depth = dictDepth(map.get(key));\n            if (depth > max) max = depth;\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            if (map.size() == 0) {\n                return 1;\n            }\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long depth = 0;\n            for (Object o : m.values()) {\n                depth = Math.max(depth, dictDepth(o));\n            }\n            return depth + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>)d;\n            if (m.size() == 0) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                max = Math.max(max, dictDepth(o));\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            for (Object key : map.keySet()) {\n                long depthKey = dictDepth(key);\n                long depthValue = dictDepth(map.get(key));\n                if (depthKey > depth) {\n                    depth = depthKey;\n                }\n                if (depthValue > depth) {\n                    depth = depthValue;\n                }\n            }\n            return depth + 1;\n        }\n        return depth;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long depth = dictDepth(e.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(k);\n                if (depth > max) {\n                    max = depth;\n                }\n                depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                Object value = map.get(key);\n                long depth = dictDepth(value);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                max = Math.max(max, depth);\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            return 1 + Collections.max(((Map) d).values().stream().map(Problem::dictDepth).collect(Collectors.toList()));\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (!d.getClass().isArray()) return 1;\n        Object[] arr = (Object[]) d;\n        long max = 0;\n        for (Object o : arr) {\n            long depth = dictDepth(o);\n            if (depth > max) max = depth;\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long maxDepth = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > maxDepth) {\n                maxDepth = depth;\n            }\n        }\n        return maxDepth + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long depth = dictDepth(e.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else if (d instanceof List) {\n            List<Object> l = (List<Object>) d;\n            long max = 0;\n            for (Object o : l) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            return 1 + Collections.max(\n                ((Map)d).values().stream()\n                .map(x -> dictDepth(x))\n                .collect(Collectors.toList())\n            );\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                max = Math.max(max, dictDepth(m.get(k)));\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.size() == 0) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                max = Math.max(max, dictDepth(o));\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.size() == 0) {\n                return 1;\n            }\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        long max = 0;\n        for (Object key : ((Map)d).keySet()) {\n            long depth = dictDepth(((Map)d).get(key));\n            if (depth > max) max = depth;\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                max = Math.max(max, dictDepth(v));\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> dict = (Map<Object, Object>) d;\n            long maxDepth = 0;\n            for (Object key : dict.keySet()) {\n                long depth = dictDepth(dict.get(key));\n                if (depth > maxDepth) {\n                    maxDepth = depth;\n                }\n            }\n            return maxDepth + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            return m.entrySet().stream().map(e -> dictDepth(e.getValue())).max(Long::compare).orElse(0) + 1;\n        } else if (d instanceof List) {\n            List<Object> l = (List<Object>) d;\n            return l.stream().map(e -> dictDepth(e)).max(Long::compare).orElse(0) + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> dm = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : dm.keySet()) {\n                long depth = dictDepth(dm.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            max = Math.max(max, dictDepth(((Map) d).get(key)));\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) max = depth;\n            }\n            return 1 + max;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                max = Math.max(max, dictDepth(o));\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof HashMap) {\n            HashMap<Object, Object> h = (HashMap<Object, Object>) d;\n            long max = 0;\n            for (Object key : h.keySet()) {\n                long depth = dictDepth(h.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> dict = (Map<Object, Object>) d;\n            for (Object key : dict.keySet()) {\n                long depthKey = dictDepth(key);\n                long depthValue = dictDepth(dict.get(key));\n                depth = Math.max(depth, Math.max(depthKey, depthValue));\n            }\n            depth++;\n        }\n        return depth;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            return 1 + m.values().stream().mapToLong(Problem::dictDepth).max().getAsLong();\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            return 1 + Collections.max(\n                ((Map<String, Object>) d).values().stream()\n                    .map(Problem::dictDepth)\n                    .collect(Collectors.toList())\n            );\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object value : map.values()) {\n                long depth = dictDepth(value);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                max = Math.max(max, dictDepth(map.get(key)));\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            for (Object v : m.values()) {\n                long d2 = dictDepth(v);\n                if (d2 > depth) {\n                    depth = d2;\n                }\n            }\n            depth += 1;\n        }\n        return depth;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long maxDepth = 0;\n            for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > maxDepth) {\n                    maxDepth = depth;\n                }\n            }\n            return maxDepth + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> dict = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : dict.keySet()) {\n                long depth = dictDepth(dict.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return 1 + max;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<String, Object> m = (Map<String, Object>) d;\n            long max = 0;\n            for (Map.Entry<String, Object> entry : m.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        long max = 0;\n        for (Object key : ((Map)d).keySet()) {\n            max = Math.max(max, dictDepth(((Map)d).get(key)));\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<Object, Object> map = (Map) d;\n        long max = 0;\n        for (Object key : map.keySet()) {\n            long depth = dictDepth(map.get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            for (Object key : map.keySet()) {\n                long depthKey = dictDepth(key);\n                long depthValue = dictDepth(map.get(key));\n                depth = Math.max(depth, Math.max(depthKey, depthValue));\n            }\n            depth += 1;\n        }\n        return depth;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            return 1 + dictDepth(new ArrayList(((Map) d).values()).stream().max(Comparator.comparing(Problem::dictDepth)).orElse(0L));\n        } else if (d instanceof List) {\n            return 1 + ((List) d).stream().mapToLong(Problem::dictDepth).max().orElse(0L);\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object v : m.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                max = Math.max(max, depth);\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<Object, Object> map = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object value : map.values()) {\n            long depth = dictDepth(value);\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            depth++;\n            for (Object key : ((Map) d).keySet()) {\n                depth = Math.max(depth, dictDepth(((Map) d).get(key)));\n            }\n        }\n        return depth;",
    "        if (d == null) return 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : map.keySet()) {\n                long depth = dictDepth(map.get(k));\n                if (depth > max) max = depth;\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                depth = Math.max(depth, dictDepth(entry.getValue()));\n            }\n            return depth + 1;\n        } else if (d instanceof List) {\n            List<Object> list = (List<Object>) d;\n            for (Object o : list) {\n                depth = Math.max(depth, dictDepth(o));\n            }\n            return depth;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        Map<Object, Object> dict = (Map<Object, Object>) d;\n        long maxDepth = 1;\n        for (Object key : dict.keySet()) {\n            long depth = dictDepth(dict.get(key));\n            if (depth > maxDepth) maxDepth = depth;\n        }\n        return maxDepth + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            if (map.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object v : map.values()) {\n                long depth = dictDepth(v);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        Map<Object, Object> m = (Map<Object, Object>) d;\n        long maxDepth = 0;\n        for (Object key : m.keySet()) {\n            long depth = dictDepth(m.get(key));\n            if (depth > maxDepth) maxDepth = depth;\n        }\n        return maxDepth + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> dict = (Map<Object, Object>) d;\n            long maxDepth = 0;\n            for (Map.Entry<Object, Object> entry : dict.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > maxDepth) {\n                    maxDepth = depth;\n                }\n            }\n            return maxDepth + 1;\n        } else {\n            return 0;\n        }",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> dm = (Map<Object, Object>) d;\n            for (Object key : dm.keySet()) {\n                long depthKey = dictDepth(key);\n                long depthValue = dictDepth(dm.get(key));\n                depth = Math.max(depth, Math.max(depthKey, depthValue));\n            }\n            depth += 1;\n        }\n        return depth;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<String, Object> dict = (Map<String, Object>) d;\n        long maxDepth = 0;\n        for (String key : dict.keySet()) {\n            Object value = dict.get(key);\n            long depth = dictDepth(value);\n            maxDepth = Math.max(maxDepth, depth);\n        }\n        return maxDepth + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (!(d instanceof Map)) return 1;\n        long max = 0;\n        for (Object v : ((Map) d).values()) {\n            max = Math.max(max, dictDepth(v));\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.isEmpty()) {\n                return 1;\n            }\n            long max = 1;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                max = Math.max(max, depth + 1);\n            }\n            return max;\n        } else {\n            return 1;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            long max = 0;\n            for (Object value : ((Map) d).values()) {\n                max = Math.max(max, dictDepth(value));\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            return 1 + m.values().stream().mapToLong(Problem::dictDepth).max().orElse(0);\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<Object, Object> m = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object v : m.values()) {\n            long depth = dictDepth(v);\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map)d).keySet()) {\n                long depth = dictDepth(((Map)d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        Map<Object, Object> map = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object key : map.keySet()) {\n            long depth = dictDepth(map.get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            return 1 + m.values().stream().mapToLong(Problem::dictDepth).max().orElse(0);\n        } else if (d instanceof List) {\n            List<Object> l = (List<Object>) d;\n            return 1 + l.stream().mapToLong(Problem::dictDepth).max().orElse(0);\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>)d;\n            if (m.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            return 1 + dictDepth(((Map) d).values());\n        }\n        if (d instanceof Collection) {\n            long max = 0;\n            for (Object o : (Collection) d) {\n                max = Math.max(max, dictDepth(o));\n            }\n            return max;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>)d;\n            return 1 + m.values().stream().mapToLong(Problem::dictDepth).max().orElse(0);\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            if (m.isEmpty()) {\n                return 1;\n            }\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(k);\n                if (depth > max) {\n                    max = depth;\n                }\n                depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                Object value = map.get(key);\n                long depth = dictDepth(value);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>)d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long depth = dictDepth(e.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) return 0;\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) max = depth;\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object o : m.values()) {\n                long depth = dictDepth(o);\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return 1 + max;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            long max = 0;\n            for (Object key : ((Map) d).keySet()) {\n                long depth = dictDepth(((Map) d).get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            Map<String, Object> m = (Map<String, Object>) d;\n            long max = 0;\n            for (String k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                max = Math.max(max, depth);\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : map.keySet()) {\n                long depth = dictDepth(map.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        long depth = 0;\n        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            for (Object key : map.keySet()) {\n                long depthKey = dictDepth(key);\n                long depthValue = dictDepth(map.get(key));\n                depth = Math.max(depth, Math.max(depthKey, depthValue));\n            }\n            return depth + 1;\n        } else {\n            return depth;\n        }",
    "        if (d == null) {\n            return 0;\n        }\n        if (!(d instanceof Map)) {\n            return 1;\n        }\n        long max = 0;\n        for (Object key : ((Map) d).keySet()) {\n            long depth = dictDepth(((Map) d).get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d instanceof Map) {\n            Map<Object, Object> map = (Map<Object, Object>) d;\n            long maxDepth = 0;\n            for (Map.Entry<Object, Object> entry : map.entrySet()) {\n                long depth = dictDepth(entry.getValue());\n                if (depth > maxDepth) {\n                    maxDepth = depth;\n                }\n            }\n            return maxDepth + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;",
    "        if (d instanceof Map) {\n            return 1 + Collections.max(\n                ((Map)d).values().stream()\n                .map(x -> dictDepth(x))\n                .collect(Collectors.toList())\n            );\n        } else {\n            return 1;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object k : m.keySet()) {\n                long depth = dictDepth(m.get(k));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 0;\n        }",
    "        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Object key : m.keySet()) {\n                long depth = dictDepth(m.get(key));\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        } else {\n            return 1;\n        }",
    "        if (!(d instanceof Map)) {\n            return 0;\n        }\n        Map<Object, Object> map = (Map<Object, Object>) d;\n        long max = 0;\n        for (Object key : map.keySet()) {\n            long depth = dictDepth(map.get(key));\n            if (depth > max) {\n                max = depth;\n            }\n        }\n        return max + 1;",
    "        if (d == null) {\n            return 0;\n        }\n        if (d instanceof Map) {\n            Map<Object, Object> m = (Map<Object, Object>) d;\n            long max = 0;\n            for (Map.Entry<Object, Object> e : m.entrySet()) {\n                long depth = dictDepth(e.getValue());\n                if (depth > max) {\n                    max = depth;\n                }\n            }\n            return max + 1;\n        }\n        return 0;"
  ]
}
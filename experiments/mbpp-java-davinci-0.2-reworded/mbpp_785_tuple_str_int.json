{
  "name": "mbpp_785_tuple_str_int",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert pair string to integer pair.\n    public static long tupleStrInt(String test_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (long)Pair.with(7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (long)Pair.with(1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (long)Pair.with(4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (long)Pair.with(7l, 81l, 19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] str = test_str.split(\",\");\n        long a = Long.parseLong(str[0]);\n        long b = Long.parseLong(str[1]);\n        return a * 1000000 + b;",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return Arrays.stream(int_arr).reduce(1, (a, b) -> a * b);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] arr = test_str.split(\",\");\n        return Long.parseLong(arr[0]) * 1000000 + Long.parseLong(arr[1]);",
    "        String[] str_arr = test_str.split(\",\");\n        long int_arr[] = new long[str_arr.length];\n        for(int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return Arrays.stream(int_arr).reduce(0, (a, b) -> a + b);",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        Pair<Long, Long> pair = new Pair<Long, Long>(int_arr[0], int_arr[1]);\n        return pair.hashCode();",
    "        return 0;",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return int_arr[0] * int_arr[1];",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return Arrays.stream(int_arr).reduce(0, (a, b) -> a * 10 + b);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] parts = test_str.split(\"\\\\s+\");\n        long a = Long.parseLong(parts[0]);\n        long b = Long.parseLong(parts[1]);\n        return a + b;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] strs = test_str.split(\",\");\n        return Integer.parseInt(strs[0]) * Integer.MAX_VALUE + Integer.parseInt(strs[1]);",
    "        String[] str = test_str.split(\",\");\n        return Long.parseLong(str[0]) * 100 + Long.parseLong(str[1]);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        long result = 0;\n        for (int i = 0; i < int_arr.length; i++) {\n            result += int_arr[i] * Math.pow(10, int_arr.length - i - 1);\n        }\n        return result;",
    "        String[] test_str_arr = test_str.split(\",\");\n        Pair<String, Integer> test_pair = new Pair<String, Integer>(test_str_arr[0], Integer.parseInt(test_str_arr[1]));\n        return test_pair.getValue1().length() + test_pair.getValue2();",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        Pair<Long, Long> pair = new Pair<Long, Long>(int_arr[0], int_arr[1]);\n        return pair.getValue0() * 100 + pair.getValue1();",
    "        String[] str_arr = test_str.split(\",\");\n        long x = Long.parseLong(str_arr[0]);\n        long y = Long.parseLong(str_arr[1]);\n        return x * 1000000 + y;",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return Arrays.stream(int_arr).reduce(0, (a, b) -> a * 10 + b);",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[2];\n        for (int i = 0; i < 2; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return (int_arr[0] * 1000000) + int_arr[1];",
    "        String[] str_arr = test_str.split(\",\");\n        long[] int_arr = new long[str_arr.length];\n        for (int i = 0; i < str_arr.length; i++) {\n            int_arr[i] = Long.parseLong(str_arr[i]);\n        }\n        return Arrays.stream(int_arr).reduce(0, (a, b) -> a * 10 + b);",
    "        String[] str_arr = test_str.split(\",\");\n        Pair<String, Integer> test_pair = Pair.with(str_arr[0], Integer.parseInt(str_arr[1]));\n        return test_pair.getValue1() + test_pair.getValue2();",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String[] strs = test_str.split(\",\");\n        return new Pair<>(strs[0], Integer.parseInt(strs[1])).hashCode();"
  ]
}
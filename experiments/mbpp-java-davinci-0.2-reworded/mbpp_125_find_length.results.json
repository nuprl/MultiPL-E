{
  "name": "mbpp_125_find_length",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpqpy_8b_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpuud4l4tb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            } else {\n                count = Math.max(count0, count1);\n                max = Math.max(max, count);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpq_q5wou1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 * 2);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 * 2);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp1sqfikr6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            zeros[i] += zeros[i - 1];\n            ones[i] += ones[i - 1];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long z = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                long o = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                long diff = Math.abs(z - o);\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpbyqodlir.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int zeroCount = 0;\n        int oneCount = 0;\n        int maxDiff = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            if (zeroCount == oneCount) {\n                maxDiff = Math.max(maxDiff, zeroCount);\n            }\n        }\n        zeroCount = 0;\n        oneCount = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            if (zeroCount == oneCount) {\n                maxDiff = Math.max(maxDiff, zeroCount);\n            }\n        }\n        return maxDiff;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmptukkh6j8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j];\n                int o = ones[j];\n                if (i > 0) {\n                    z -= zeros[i - 1];\n                    o -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpo_h0k28b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpbp07p9_i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpqpy_8b_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int left = i == 0 ? 0 : prefix[i - 1];\n                int right = j == n - 1 ? 0 : suffix[j + 1];\n                max = Math.max(max, Math.abs(left + right - (j - i + 1 - (prefix[j] - left))));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpee062e9e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp0cojdpaa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        zeros[0] = string.charAt(0) == '0' ? 1 : 0;\n        ones[0] = string.charAt(0) == '1' ? 1 : 0;\n        for (int i = 1; i < n; i++) {\n            zeros[i] = string.charAt(i) == '0' ? zeros[i - 1] + 1 : zeros[i - 1];\n            ones[i] = string.charAt(i) == '1' ? ones[i - 1] + 1 : ones[i - 1];\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                int o = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp5zx3ztex.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] prefix = new int[n];\n        int[] suffix = new int[n];\n        int[] diff = new int[n];\n        int[] max = new int[n];\n        int[] min = new int[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        prefix[0] = count[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + count[i];\n        }\n        suffix[n - 1] = count[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + count[i];\n        }\n        for (int i = 0; i < n; i++) {\n            diff[i] = prefix[i] - suffix[i];\n        }\n        max[0] = diff[0];\n        for (int i = 1; i < n; i++) {\n            max[i] = Math.max(max[i - 1], diff[i]);\n        }\n        min[n - 1] = diff[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            min[i] = Math.min(min[i + 1], diff[i]);\n        }\n        long result = 0;\n        for (int i = 0; i < n; i++) {\n            result = Math.max(result, Math.max(Math.abs(max[i]), Math.abs(min[i])));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpqwdn7akl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            zeros[i] += zeros[i - 1];\n            ones[i] += ones[i - 1];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j];\n                int o = ones[j];\n                if (i > 0) {\n                    z -= zeros[i - 1];\n                    o -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpze459p5g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long count = 0;\n                for (int k = i; k <= j; k++) {\n                    if (arr[k] == 0) {\n                        count++;\n                    }\n                }\n                long diff = Math.abs(count - (j - i + 1 - count));\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpel1viaf9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp811jnatk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for(int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] left = new int[n];\n        int[] right = new int[n];\n        left[0] = arr[0];\n        right[n - 1] = arr[n - 1];\n        for(int i = 1; i < n; i++) {\n            left[i] = left[i - 1] + arr[i];\n        }\n        for(int i = n - 2; i >= 0; i--) {\n            right[i] = right[i + 1] + arr[i];\n        }\n        int min = Integer.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n            min = Math.min(min, Math.abs(left[i] - right[i]));\n        }\n        return min;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3f4r6gv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, n - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp_40y7j1z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp6qj8htav.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            }\n            zeros[i] = count;\n        }\n        count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            }\n            ones[i] = count;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long z = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                long o = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp2boo1472.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpyynkbzin.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp2dadh4sr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            max = Math.max(max, Math.abs(count));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp8zqqtkgx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmphaz2t0ef.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, n - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp_40y7j1z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long diff = Math.abs(zeros[j] - ones[j]);\n                if (i > 0) {\n                    diff -= Math.abs(zeros[i - 1] - ones[i - 1]);\n                }\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpso58ptb7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int count = 0;\n        int max = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp4832q_v1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int left = i == 0 ? 0 : prefix[i - 1];\n                int right = j == n - 1 ? 0 : suffix[j + 1];\n                ans = Math.max(ans, Math.abs(left + right - (j - i + 1 - left - right)));\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpxxr1zu12.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefix1 = new int[n];\n        prefix1[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix1[i] = prefix1[i - 1] + (1 - arr[i]);\n        }\n        int[] suffix1 = new int[n];\n        suffix1[n - 1] = 1 - arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix1[i] = suffix1[i + 1] + (1 - arr[i]);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long left = 0;\n                long right = 0;\n                if (i == 0) {\n                    left = prefix[j];\n                } else {\n                    left = prefix[j] - prefix[i - 1];\n                }\n                if (j == n - 1) {\n                    right = suffix1[i];\n                } else {\n                    right = suffix1[i] - suffix1[j + 1];\n                }\n                long left1 = 0;\n                long right1 = 0;\n                if (i == 0) {\n                    left1 = prefix1[j];\n                } else {\n                    left1 = prefix1[j] -\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpwujil56m.java:57: error: illegal start of expression\n    }\n    ^\n/tmp/tmpwujil56m.java:58: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int length = string.length();\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < length; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n        }\n        count = 0;\n        for (int i = 0; i < length; i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpyes8ptd7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpqpy_8b_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        int[] arr2 = new int[n];\n        int[] arr3 = new int[n];\n        int[] arr4 = new int[n];\n        int[] arr5 = new int[n];\n        int[] arr6 = new int[n];\n        int[] arr7 = new int[n];\n        int[] arr8 = new int[n];\n        int[] arr9 = new int[n];\n        int[] arr10 = new int[n];\n        int[] arr11 = new int[n];\n        int[] arr12 = new int[n];\n        int[] arr13 = new int[n];\n        int[] arr14 = new int[n];\n        int[] arr15 = new int[n];\n        int[] arr16 = new int[n];\n        int[] arr17 = new int[n];\n        int[] arr18 = new int[n];\n        int[] arr19 = new int[n];\n        int[] arr20 = new int[n];\n        int[] arr21 = new int[n];\n        int[] arr22 = new int[n];\n        int[] arr23 = new int[n];\n        int[] arr24 = new int[n];\n        int[] arr25 = new int[n];\n        int[] arr26 = new int[n];\n        int[] arr27 = new int[n];\n        int[] arr28 = new int[n];\n        int[] arr29 = new int[n];\n        int[] arr30 = new int[n];\n        int[] arr31 = new int[n];\n        int[] arr32 = new int[n];\n        int[] arr33 = new int[n];\n        int[] arr34 = new int[n];\n        int[] arr35 = new int[n];\n        int[] arr36 = new int[n];\n        int[] arr37 = new int[n];\n        int[] arr38 = new int[n];\n        int[] arr39 = new int[n];\n        int[] arr40 = new int[n];\n        int[] arr41 = new int[n];\n        int[] arr42 = new int[n];\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpmj64aom4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            zeros[i] += zeros[i - 1];\n            ones[i] += ones[i - 1];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j] - (i > 0 ? zeros[i - 1] : 0);\n                int o = ones[j] - (i > 0 ? ones[i - 1] : 0);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpwv29_ciz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            } else {\n                max = Math.max(max, 2 * Math.abs(count));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp41fiy1g0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        long max = 0;\n        long sum = 0;\n        HashMap<Long, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n            if (sum == 0) {\n                max = i + 1;\n            }\n            if (map.containsKey(sum)) {\n                max = Math.max(max, i - map.get(sum));\n            } else {\n                map.put(sum, i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpfk62elgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zeroDiff = zeros[j] - (i == 0 ? 0 : zeros[i - 1]);\n                int oneDiff = ones[j] - (i == 0 ? 0 : ones[i - 1]);\n                max = Math.max(max, Math.abs(zeroDiff - oneDiff));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp060ru9d0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                arr[i] = -1;\n            } else {\n                arr[i] = 1;\n            }\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n                max = Math.max(max, Math.abs(sum));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpm679q77r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long count = 0;\n        long max = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpdu9g1vt4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpzlnth0lb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long zc = zeros[j] - (i > 0 ? zeros[i - 1] : 0);\n                long oc = ones[j] - (i > 0 ? ones[i - 1] : 0);\n                long diff = Math.abs(zc - oc);\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp6pu08p5z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                arr[i] = -1;\n            } else {\n                arr[i] = 1;\n            }\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += arr[k];\n                }\n                if (sum == 0) {\n                    max = Math.max(max, j - i + 1);\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp3mbfeeky.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            max = Math.max(max, Math.abs(zeros - ones));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp06td4c3n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpdey9gve2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] prefix = new int[n];\n        int[] suffix = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count[i] = 1;\n            } else {\n                count[i] = -1;\n            }\n        }\n        prefix[0] = count[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + count[i];\n        }\n        suffix[n - 1] = count[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + count[i];\n        }\n        int[] min = new int[n];\n        min[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            min[i] = Math.min(min[i + 1], suffix[i]);\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, prefix[i] - min[i]);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp8r9bxw2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, ones + zeros);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, ones + zeros);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpuzvu4as3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefixDiff = new int[n];\n        prefixDiff[0] = prefix[0];\n        for (int i = 1; i < n; i++) {\n            prefixDiff[i] = Math.abs(prefix[i] - (i + 1 - prefix[i]));\n        }\n        int[] suffixDiff = new int[n];\n        suffixDiff[n - 1] = suffix[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffixDiff[i] = Math.abs(suffix[i] - (n - i - suffix[i]));\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, Math.max(prefixDiff[i], suffixDiff[i]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpb52x1kbf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int zeros = prefix[i - 1] + suffix[j + 1];\n                int ones = (j - i + 1) - zeros;\n                max = Math.max(max, Math.abs(zeros - ones));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpcr7z6k6e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpzm_gn9sh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpni_gcx8w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int zeroCount = 0;\n        int oneCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeroCount++;\n            } else {\n                oneCount++;\n            }\n            zeros[i] = zeroCount;\n            ones[i] = oneCount;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long z = zeros[j] - (i > 0 ? zeros[i - 1] : 0);\n                long o = ones[j] - (i > 0 ? ones[i - 1] : 0);\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp2yntq56z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z1 = zeros[i];\n                int z2 = zeros[j];\n                int o1 = ones[i];\n                int o2 = ones[j];\n                long diff = Math.abs(z2 - z1) + Math.abs(o2 - o1);\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpa0zjf0ke.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            }\n            else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            if(count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpwn8umhl1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] count = new int[n];\n        int[] sum = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                count[i] = 1;\n            } else {\n                count[i] = -1;\n            }\n        }\n        sum[0] = count[0];\n        for (int i = 1; i < n; i++) {\n            sum[i] = sum[i - 1] + count[i];\n        }\n        HashMap<Integer, Integer> map = new HashMap<>();\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            if (sum[i] == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (map.containsKey(sum[i])) {\n                max = Math.max(max, i - map.get(sum[i]));\n            } else {\n                map.put(sum[i], i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp0qzn9l3l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmpazh0q78q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            max = Math.max(max, Math.abs(zeros - ones));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122959,
      "stdout": "",
      "stderr": "/tmp/tmp06td4c3n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            } else if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmph2lenzas.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp6qj8htav.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpa6cbo4lz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int zeros = 0;\n        int ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n        }\n        return Math.abs(zeros - ones);\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpn7vcvmn7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpx991mi3p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] prefix_max = new int[n];\n        int[] suffix_max = new int[n];\n        prefix_max[0] = prefix[0];\n        suffix_max[n - 1] = suffix[n - 1];\n        for (int i = 1; i < n; i++) {\n            prefix_max[i] = Math.max(prefix_max[i - 1], prefix[i]);\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            suffix_max[i] = Math.max(suffix_max[i + 1], suffix[i]);\n        }\n        int[] prefix_min = new int[n];\n        int[] suffix_min = new int[n];\n        prefix_min[0] = prefix[0];\n        suffix_min[n - 1] = suffix[n - 1];\n        for (int i = 1; i < n; i++) {\n            prefix_min[i] = Math.min(prefix_min[i - 1], prefix[i]);\n        }\n        for (int i = n - 2; i >= 0; i--) {\n            suffix_min[i] = Math.min(suffix_min[i + 1], suffix[i]);\n        }\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            int left = i;\n            int right\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpbe1iw4az.java:49: error: ';' expected\n            int right\n                     ^\n/tmp/tmpbe1iw4az.java:51: error: illegal start of expression\n    public static void main(String[] args) {\n    ^\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpmwun4ggk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                zeros[i] = 1;\n            } else {\n                ones[i] = 1;\n            }\n            if (i > 0) {\n                zeros[i] += zeros[i - 1];\n                ones[i] += ones[i - 1];\n            }\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int z = zeros[j];\n                int o = ones[j];\n                if (i > 0) {\n                    z -= zeros[i - 1];\n                    o -= ones[i - 1];\n                }\n                max = Math.max(max, Math.abs(z - o));\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpyyawlxg_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count != 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpm3oizc3r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpbp07p9_i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long diff = Math.abs(zeros[j] - ones[j]);\n                if (i > 0) {\n                    diff -= Math.abs(zeros[i - 1] - ones[i - 1]);\n                }\n                max = Math.max(max, diff);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmp7e38vnuy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            }\n            else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            else if(count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for(int i = string.length() - 1; i >= 0; i--) {\n            if(string.charAt(i) == '1') {\n                count++;\n            }\n            else {\n                count--;\n            }\n            if(count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            else if(count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpbrefbqrc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) == '0' ? -1 : 1;\n        }\n        long max = 0;\n        HashMap<Long, Long> map = new HashMap<>();\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += arr[i];\n            if (sum == 0) {\n                max = i + 1;\n            }\n            if (map.containsKey(sum + n)) {\n                max = Math.max(max, i - map.get(sum + n));\n            } else {\n                map.put(sum + n, (long) i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpixnnxhfy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] zeros = new int[n];\n        int[] ones = new int[n];\n        int z = 0;\n        int o = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '0') {\n                z++;\n            } else {\n                o++;\n            }\n            zeros[i] = z;\n            ones[i] = o;\n        }\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                long zc = zeros[j];\n                long oc = ones[j];\n                if (i > 0) {\n                    zc -= zeros[i - 1];\n                    oc -= ones[i - 1];\n                }\n                long diff = Math.abs(zc - oc);\n                if (diff > max) {\n                    max = diff;\n                }\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpe8kbv6u3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpx991mi3p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp839m_st5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = string.charAt(i) - '0';\n        }\n        int[] prefix = new int[n];\n        prefix[0] = arr[0];\n        for (int i = 1; i < n; i++) {\n            prefix[i] = prefix[i - 1] + arr[i];\n        }\n        int[] suffix = new int[n];\n        suffix[n - 1] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            suffix[i] = suffix[i + 1] + arr[i];\n        }\n        int[] diff = new int[n];\n        for (int i = 0; i < n; i++) {\n            diff[i] = prefix[i] - suffix[i];\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max = Math.max(max, Math.abs(diff[i]));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpsx321tvt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        count0 = 0;\n        count1 = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            if (count0 == count1) {\n                max = Math.max(max, count0 + count1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmplukoo1ck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count--;\n            } else {\n                count++;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count--;\n            } else {\n                count++;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpr5c2n_4x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp6qj8htav.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int n = string.length();\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = n - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, n - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpy490ra42.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long zeros = 0;\n        long ones = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        zeros = 0;\n        ones = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                zeros++;\n            } else {\n                ones++;\n            }\n            if (zeros == ones) {\n                max = Math.max(max, zeros + ones);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp017pst2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpwmrpr4a9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = i + 1;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmpe_u8ubh3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp42erewvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, i + 1);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        count = 0;\n        for (int i = string.length() - 1; i >= 0; i--) {\n            if (string.charAt(i) == '1') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count == 0) {\n                max = Math.max(max, string.length() - i);\n            }\n            if (count < 0) {\n                count = 0;\n            }\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmpmuem4jsi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmp_2diy5hj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if (count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1665509993,
      "stdout": "",
      "stderr": "/tmp/tmpvja5ssnd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        // Write your code here\n        long max = 0;\n        long count = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count++;\n            } else {\n                count--;\n            }\n            if(count < 0) {\n                count = 0;\n            }\n            max = Math.max(max, count);\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122960,
      "stdout": "",
      "stderr": "/tmp/tmp8yoi6kyn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n    public static long findLength(String string) {\n        long max = 0;\n        long count0 = 0;\n        long count1 = 0;\n        for(int i = 0; i < string.length(); i++) {\n            if(string.charAt(i) == '0') {\n                count0++;\n            } else {\n                count1++;\n            }\n            max = Math.max(max, Math.abs(count0 - count1));\n        }\n        return max;\n    }\n    public static void main(String[] args) {\n    assert(findLength((\"11000010001\")) == (6l));\n    assert(findLength((\"10111\")) == (1l));\n    assert(findLength((\"11011101100101\")) == (2l));\n    }\n\n}\n",
      "timestamp": 1666122958,
      "stdout": "",
      "stderr": "/tmp/tmp0cojdpaa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
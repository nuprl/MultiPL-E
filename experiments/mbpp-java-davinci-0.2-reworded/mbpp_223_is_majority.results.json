{
  "name": "mbpp_223_is_majority",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpfc3aysgu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int l = 0;\n        int r = arr.size() - 1;\n        int mid = (l + r) / 2;\n        while (l <= r) {\n            if (arr.get(mid) == x && (mid == 0 || arr.get(mid - 1) != x)) {\n                break;\n            } else if (arr.get(mid) >= x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n            mid = (l + r) / 2;\n        }\n        if (l > r) {\n            return false;\n        }\n        if (mid + n / 2 < arr.size() && arr.get(mid + (int) n / 2) == x) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp_685iqmx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpgf0wybde.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int low = 0;\n        int high = arr.size() - 1;\n        int mid = (low + high) / 2;\n        while (low <= high) {\n            if (arr.get(mid) == x) {\n                if (mid + n / 2 < arr.size() && arr.get(mid + (int) (n / 2)) == x) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else if (arr.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n            mid = (low + high) / 2;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdks_n3ai.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpgmpp00pl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp0om0axga.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt72vg51.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt0o7ruv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp6gg047d7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++){\n            if(arr.get(i) == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpytihoatt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (Long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp00l8yp11.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpx7720ku5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp0om0axga.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpevnat61d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > (n/2)) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpjsvyp4xm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        return Collections.frequency(arr, x) > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpo42z7421.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for(long i = 0; i < n; i++) {\n            if(arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpo13ohogx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpd3rcxwws.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(long i = 0; i < n; i++) {\n            if(arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpfsr_vp7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(long i : arr){\n            if(i == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpkq7c0_9b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpx1u5ftdd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpic9i4lid.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpevnat61d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt72vg51.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpnlo4w9qw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp06n98n8a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpgmpp00pl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpr6zb9w40.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n/2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp7_5nbg5v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here.\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpzp5134jo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        return Collections.frequency(arr, x) > n/2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpj13lkfdi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpnlo4w9qw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpcsf3_mh8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt72vg51.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x)\n                count++;\n        }\n        if (count > n / 2)\n            return true;\n        else\n            return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpt4ywbg5e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here.\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpbxrf8mrk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpr6zb9w40.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpn16a2427.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++){\n            if(arr.get(i) == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpic9i4lid.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(long i : arr){\n            if(i == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpkq7c0_9b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpcwupcus4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpyjjdqt5p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (Long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpzlb200ys.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpx1u5ftdd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpvki4n_zj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpv5_0gq_x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpwonw5yuc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpevnat61d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt0o7ruv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpx7720ku5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp199hfq9b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++){\n            if(arr.get(i) == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpytihoatt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        // If x is present more than n/2 times, then it is the majority element\n        int i = Collections.binarySearch(arr, x);\n        // If element is not present, i < 0\n        if (i < 0)\n            return false;\n        // check if the element is present more than n/2 times\n        if (((i + n/2) <= (n -1)) && arr.get(i + n/2) == x)\n            return true;\n        else\n            return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpnymhftgd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnymhftgd.java:18: error: incompatible types: possible lossy conversion from long to int\n        if (((i + n/2) <= (n -1)) && arr.get(i + n/2) == x)\n                                               ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpv5_0gq_x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(long i = 0; i < n; i++) {\n            if(arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpfsr_vp7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp6gg047d7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i=0;i<n;i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp9nd337rl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++){\n            if(arr.get(i) == x){\n                count++;\n            }\n        }\n        if(count > n/2){\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpytihoatt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int l = 0;\n        int r = (int)n-1;\n        int mid = (l+r)/2;\n        while(l<=r) {\n            mid = (l+r)/2;\n            if(arr.get(mid)==x) {\n                break;\n            }\n            else if(arr.get(mid)<x) {\n                l = mid+1;\n            }\n            else {\n                r = mid-1;\n            }\n        }\n        if(arr.get(mid)==x) {\n            int count = 0;\n            int i = mid;\n            while(i>=0 && arr.get(i)==x) {\n                count++;\n                i--;\n            }\n            i = mid+1;\n            while(i<n && arr.get(i)==x) {\n                count++;\n                i++;\n            }\n            if(count>n/2) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp2v_318xw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        return Collections.frequency(arr, x) > n/2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpj13lkfdi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (Long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmphuswk_de.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpud_zlvs0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpmh1xqh9h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp134qs683.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp199hfq9b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpv5_0gq_x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpn16a2427.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (long i : arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmptrz9wyoo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpyjjdqt5p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpr6zb9w40.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpyobhru1t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp199hfq9b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpgf0wybde.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpnlo4w9qw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(long i = 0; i < n; i++) {\n            if(arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpfsr_vp7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(long i = 0; i < n; i++) {\n            if(arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpfsr_vp7t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpx3ujbwco.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpdt0o7ruv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int)i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpyjjdqt5p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp2z965amv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n / 2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpy03jp3ns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmplvtihez1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < arr.size(); i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpe7j5xje2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        return count > n/2;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmp7_5nbg5v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i=0;i<n;i++)\n        {\n            if(arr.get(i)==x)\n            {\n                count++;\n            }\n        }\n        if(count>n/2)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmp54bpdi6r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpeelkcdwb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmp10_9y444.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        long count = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr.get((int) i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpn16a2427.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpvta9d_m4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123069,
      "stdout": "",
      "stderr": "/tmp/tmpcsf3_mh8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        int count = 0;\n        for(long i: arr) {\n            if(i == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1666123070,
      "stdout": "",
      "stderr": "/tmp/tmpqdlzkg24.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in a sorted array array list, its length (n), and an element and returns whether the element is the majority element in the given sorted array array list. (The majority element is the element that occurs more than n/2 times.)\n    public static boolean isMajority(ArrayList<Long> arr, long n, long x) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < n; i++) {\n            if(arr.get(i) == x) {\n                count++;\n            }\n        }\n        if(count > n/2) {\n            return true;\n        }\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)3l, (long)3l, (long)3l, (long)10l))), (7l), (3l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)4l, (long)4l, (long)4l, (long)6l, (long)6l))), (8l), (4l)) == (false));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (true));\n    assert(isMajority((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l))), (5l), (1l)) == (false));\n    }\n\n}\n",
      "timestamp": 1665517373,
      "stdout": "",
      "stderr": "/tmp/tmpxle_xavq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
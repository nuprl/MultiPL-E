{
  "name": "mbpp_283_validate",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        HashMap<Character, Integer> map = new HashMap<>();\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if(map.get(c) > Character.getNumericValue(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] a = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (a[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] a = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (a[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] digits = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getKey() < entry.getValue()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i=0;i<s.length();i++){\n            count[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<s.length();i++){\n            if(count[s.charAt(i)-'0']>s.charAt(i)-'0'){\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm0wxkw3c.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        Map<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.get(c) > Character.getNumericValue(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185750,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185750,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        Map<Integer, Integer> map = new HashMap<>();\n        while(n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n        }\n        for(int key : map.keySet()) {\n            if(map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185750,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (char c : s.toCharArray()) {\n            freq[c - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185750,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[Character.getNumericValue(s.charAt(i))]++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[Character.getNumericValue(s.charAt(i))] > Character.getNumericValue(s.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185751,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] c = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            c[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (c[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185752,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String num = String.valueOf(n);\n        int[] count = new int[10];\n        for(int i = 0; i < num.length(); i++) {\n            int digit = Character.getNumericValue(num.charAt(i));\n            count[digit]++;\n        }\n        for(int i = 0; i < num.length(); i++) {\n            int digit = Character.getNumericValue(num.charAt(i));\n            if(count[digit] > digit) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185752,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here.\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185752,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] digits = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            digits[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (digits[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185752,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (arr[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > (s.charAt(i) - '0'))\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n = n / 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185754,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185755,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] digits = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            digits[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185755,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0')\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185755,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = Long.toString(n);\n        Map<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.get(c) > Character.getNumericValue(c)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i=0;i<s.length();i++){\n            arr[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<s.length();i++){\n            if(arr[s.charAt(i)-'0']>s.charAt(i)-'0'){\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            int index = s.charAt(i) - '0';\n            arr[index]++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            int index = s.charAt(i) - '0';\n            if (arr[index] > index) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185756,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Integer, Integer> freq = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (freq.containsKey(digit)) {\n                freq.put(digit, freq.get(digit) + 1);\n            } else {\n                freq.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : freq.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] counts = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            counts[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (counts[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (char c : s.toCharArray()) {\n            freq[c - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (char c : s.toCharArray()) {\n            freq[c - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > (s.charAt(i) - '0')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185759,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i=0;i<s.length();i++){\n            count[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<10;i++){\n            if(count[i]>i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n = n / 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] a = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (a[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        Map<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > Character.getNumericValue(entry.getKey())) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] digits = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i=0;i<s.length();i++) {\n            freq[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<s.length();i++) {\n            if(freq[s.charAt(i)-'0'] > (s.charAt(i)-'0')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185762,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] a = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (a[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185761,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        HashMap<Integer, Integer> map = new HashMap<>();\n        while(n > 0) {\n            int digit = (int) (n % 10);\n            n /= 10;\n            if(map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n        }\n        for(Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if(entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185764,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Your code here\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185764,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] digits = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185746,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] a = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            a[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (a[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Long, Long> freq = new HashMap<>();\n        while (n > 0) {\n            long digit = n % 10;\n            freq.put(digit, freq.getOrDefault(digit, 0L) + 1);\n            n /= 10;\n        }\n        for (Map.Entry<Long, Long> entry : freq.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i=0;i<s.length();i++){\n            count[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<10;i++){\n            if(count[i]>i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185760,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++){\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++){\n            if(count[s.charAt(i) - '0'] > s.charAt(i) - '0'){\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i=0;i<s.length();i++){\n            freq[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<s.length();i++){\n            if(freq[s.charAt(i)-'0']>s.charAt(i)-'0'){\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        HashMap<Character, Integer> map = new HashMap<>();\n        for(int i = 0; i < s.length(); i++) {\n            if(map.containsKey(s.charAt(i))) {\n                map.put(s.charAt(i), map.get(s.charAt(i)) + 1);\n            } else {\n                map.put(s.charAt(i), 1);\n            }\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(map.get(s.charAt(i)) > Character.getNumericValue(s.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] freq = new int[10];\n        while (n > 0) {\n            int d = (int) (n % 10);\n            freq[d]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185768,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185748,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        int[] digits = new int[10];\n        while (n > 0) {\n            digits[(int) (n % 10)]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] freq = new int[10];\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        int[] freq = new int[10];\n        while (n > 0) {\n            int d = (int) (n % 10);\n            freq[d]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185769,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[Character.getNumericValue(s.charAt(i))]++;\n        }\n        for(int i = 0; i < arr.length; i++) {\n            if(arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(arr[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185744,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185765,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i=0;i<s.length();i++){\n            arr[s.charAt(i)-'0']++;\n        }\n        for(int i=0;i<10;i++){\n            if(arr[i]>i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(arr[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185770,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n            n /= 10;\n        }\n        for (int key : map.keySet()) {\n            if (map.get(key) > key) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] freq = new int[10];\n        while (n > 0) {\n            int d = (int) n % 10;\n            n /= 10;\n            freq[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        int[] arr = new int[10];\n        while(n > 0) {\n            arr[(int)n%10]++;\n            n /= 10;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185771,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i)\n                return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (count[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185749,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] c = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            c[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (c[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        HashMap<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            if (map.containsKey(digit)) {\n                map.put(digit, map.get(digit) + 1);\n            } else {\n                map.put(digit, 1);\n            }\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185767,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185745,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String num = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < num.length(); i++) {\n            freq[num.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < num.length(); i++) {\n            if (freq[num.charAt(i) - '0'] > num.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185772,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185758,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] arr = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            arr[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(arr[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185763,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        Map<Integer, Integer> map = new HashMap<>();\n        while (n > 0) {\n            int digit = (int) (n % 10);\n            map.put(digit, map.getOrDefault(digit, 0) + 1);\n            n /= 10;\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > entry.getKey()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185773,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] count = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185743,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here.\n        int[] count = new int[10];\n        while (n > 0) {\n            count[(int) (n % 10)]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185773,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185747,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185766,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here.\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(freq[s.charAt(i) - '0'] > (s.charAt(i) - '0')) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185773,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185753,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        // Write your code here\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for(int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for(int i = 0; i < 10; i++) {\n            if(freq[i] > i) return false;\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185773,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static boolean validate(long n) {\n        String s = String.valueOf(n);\n        int[] freq = new int[10];\n        for (int i = 0; i < s.length(); i++) {\n            freq[s.charAt(i) - '0']++;\n        }\n        for (int i = 0; i < s.length(); i++) {\n            if (freq[s.charAt(i) - '0'] > s.charAt(i) - '0') {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void main(String[] args) {\n    assert(validate((1234l)) == (true));\n    assert(validate((51241l)) == (false));\n    assert(validate((321l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667185757,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
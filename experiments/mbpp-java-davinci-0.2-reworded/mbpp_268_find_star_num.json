{
  "name": "mbpp_268_find_star_num",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the n'th star number.\n    public static long findStarNum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_268_find_star_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findStarNum((3l)) == (37l));\n    assert(findStarNum((4l)) == (73l));\n    assert(findStarNum((5l)) == (121l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        long starNum = 0;\n        for (long i = 1; i <= n; i++) {\n            starNum += i;\n        }\n        return starNum;",
    "        return 0;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            starNum += i;\n            i++;\n            n--;\n        }\n        return starNum;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            if (isStarNum(i)) {\n                starNum = i;\n                n--;\n            }\n            i++;\n        }\n        return starNum;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            if (isStarNum(i)) {\n                starNum = i;\n                n--;\n            }\n            i++;\n        }\n        return starNum;",
    "        long starNum = 0;\n        long count = 0;\n        while (count < n) {\n            starNum++;\n            if (isStarNum(starNum)) {\n                count++;\n            }\n        }\n        return starNum;",
    "        // Your code here.\n        return 0;",
    "        long i = 1;\n        long count = 1;\n        while (count < n) {\n            i++;\n            if (isStarNum(i)) {\n                count++;\n            }\n        }\n        return i;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            starNum += i;\n            i++;\n            n--;\n        }\n        return starNum;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            starNum += i;\n            i++;\n            n--;\n        }\n        return starNum;",
    "        long starNum = 0;\n        for (long i = 1; i <= n; i++) {\n            starNum += i;\n        }\n        return starNum;",
    "        long i = 0;\n        long starNum = 0;\n        while (i < n) {\n            starNum++;\n            if (isStarNum(starNum)) {\n                i++;\n            }\n        }\n        return starNum;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            long num = i;\n            long sum = 0;\n            while (num > 0) {\n                sum += num % 10;\n                num /= 10;\n            }\n            if (sum + i == i * i) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        return 0;",
    "        // Your code here\n        return 0;",
    "        long starNum = 0;\n        long i = 1;\n        while(n > 0) {\n            starNum += i;\n            i++;\n            n--;\n        }\n        return starNum;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            if (isStarNum(i)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        long start = 1;\n        long end = n * n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            long midSqrt = (long) Math.sqrt(mid);\n            if (midSqrt * midSqrt == mid) {\n                if (midSqrt % 2 == 0) {\n                    return mid;\n                } else {\n                    end = mid - 1;\n                }\n            } else {\n                start = mid + 1;\n            }\n        }\n        return -1;",
    "        long starNum = 0;\n        long i = 1;\n        while (n > 0) {\n            starNum += i;\n            i++;\n            n--;\n        }\n        return starNum;"
  ]
}
{
  "name": "mbpp_807_first_odd",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here.\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(num -> num % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (Long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4xg2nk4.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4xg2nk4.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190188,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 == 1) {\n                return nums.get(i);\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (Long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().orElse(0L);\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().orElse(-1L);\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(num -> num % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190190,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190190,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxmndxp_.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 == 1) {\n                return nums.get(i);\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190190,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj3126_o3.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 == 1) {\n                return nums.get(i);\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long n : nums) {\n            if (n % 2 == 1) {\n                return n;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190191,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 != 0) {\n                return nums.get(i);\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4xg2nk4.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm4xg2nk4.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (Long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here.\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190193,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190187,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(num -> num % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190193,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().orElse(0L);\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (Long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190192,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Your code here\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190193,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here.\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190194,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream()\n            .filter(num -> num % 2 == 1)\n            .findFirst()\n            .get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190194,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190186,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        for (long num : nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190189,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(n -> n % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        return nums.stream().filter(x -> x % 2 == 1).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190185,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the first odd number in a given array list of numbers.\n    public static long firstOdd(ArrayList<Long> nums) {\n        // Write your code here\n        return nums.stream().filter(x -> x % 2 != 0).findFirst().get();\n    }\n    public static void main(String[] args) {\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)1l, (long)3l)))) == (1l));\n    assert(firstOdd((new ArrayList<Long>(Arrays.asList((long)8l, (long)9l, (long)1l)))) == (9l));\n    }\n\n}\n",
      "timestamp": 1667190194,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
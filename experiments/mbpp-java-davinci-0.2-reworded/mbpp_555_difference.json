{
  "name": "mbpp_555_difference",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.\n    public static long difference(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_555_difference.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(difference((3l)) == (30l));\n    assert(difference((5l)) == (210l));\n    assert(difference((2l)) == (6l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return 0;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum * sum;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += Math.pow(i, 3);\n        }\n        return sumOfCubes - sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sumOfNaturalNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturalNumbers += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sumOfNaturalNumbers, 2));",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        // Write your code here\n        long sum = 0;\n        for(long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - sum;",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += Math.pow(i, 3);\n        }\n        return sumOfCubes - sum;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - sum;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - (long) Math.pow(sum, 2);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfNumbers - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for(long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sumOfCubes - sum * sum;",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        // Write your code here\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n        }\n        return sumOfCubes - sum;",
    "        return (long)Math.pow(n*(n+1)/2, 2) - n*(n+1)*(2*n+1)/6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return Math.abs(sumOfCubes - (long) Math.pow(sum, 2));",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - (long) Math.pow(sum, 2);",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfSquares(n) - squareOfSum(n);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        return 0;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - (long) Math.pow(sum, 2);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return Math.abs(sumOfCubes - (long) Math.pow(sum, 2));",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNumbers);",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        // Write your code here\n        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sumOfNaturals, 2));",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        // Write your code here\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return ((n * (n + 1) / 2) * (n * (n + 1) / 2)) - (n * (n + 1) * (2 * n + 1) / 6);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNumbers);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNumbers);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - sum;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - (long)Math.pow(sum, 2);",
    "        return (long) Math.pow(n*(n+1)/2, 2) - n*(n+1)*(2*n+1)/6;",
    "        long sumOfCubes = 0;\n        long sumOfNaturalNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturalNumbers += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sumOfNaturalNumbers, 2));",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - sum;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNaturals);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        // Write your code here.\n        long sum = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += Math.pow(i, 3);\n        }\n        return sumOfCubes - sum;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfNaturalNumbers(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - sum;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNaturals += i;\n        }\n        return sumOfCubes - sumOfNaturals * sumOfNaturals;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum - n * n;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sum += i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - (long) Math.pow(sumOfNumbers, 2);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfSquares = 0;\n        long sumOfCubes = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfSquares += i;\n            sumOfCubes += i * i * i;\n        }\n        return sumOfSquares * sumOfSquares - sumOfCubes;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for(int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long)Math.pow(sum, 2) - sumOfCubes;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sumOfNaturals, 2));",
    "        // Write your code here\n        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return Math.abs(sumOfCubes - (long) Math.pow(sumOfNaturals, 2));",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n        }\n        return sumOfCubes - sum;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        // Write your code here\n        long sum = 0;\n        for(long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for(long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n        }\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n        }\n        return sum * sum - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sum, 2));",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNumbers);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        long sum = 0;\n        long sumOfCubes = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i;\n            sumOfCubes += i * i * i;\n        }\n        return sumOfCubes - sum * sum;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return Math.abs(sumOfCubes - (long) Math.pow(sumOfNaturals, 2));",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += i * i * i;\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers * sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return (long) Math.pow(sumOfNaturals, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return (long) Math.pow(sumOfNumbers, 2) - sumOfCubes;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNaturals = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNaturals += i;\n        }\n        return (long) Math.pow(sumOfNaturals, 2) - sumOfCubes;",
    "        return sumOfCubes(n) - sumOfSquares(n);",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return sumOfCubes - sum;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for(int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return sumOfCubes - sumOfNumbers;",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2) - (n * (n + 1) * (2 * n + 1) / 6);",
    "        long sumOfCubes = 0;\n        long sumOfNumbers = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sumOfNumbers += i;\n        }\n        return Math.abs(sumOfCubes - sumOfNumbers);",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return (long) Math.pow(sum, 2) - sumOfCubes;",
    "        long sumOfCubes = 0;\n        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sumOfCubes += Math.pow(i, 3);\n            sum += i;\n        }\n        return Math.abs(sumOfCubes - Math.pow(sum, 2));",
    "        return (long)Math.pow(n * (n + 1) / 2, 2) - n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long)Math.pow(n, 2) * (n + 1) * (3 * n + 2) / 12;"
  ]
}
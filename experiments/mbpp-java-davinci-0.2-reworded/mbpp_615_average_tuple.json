{
  "name": "mbpp_615_average_tuple",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function which takes a pair of pairs and returns the average value for each pair as an array array list.\n    public static ArrayList<Float> averageTuple(long nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_615_average_tuple.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(averageTuple((long)Pair.with(Pair.with(10l, 10l, 10l, 12l), Pair.with(30l, 45l, 56l, 45l), Pair.with(81l, 80l, 39l, 32l), Pair.with(1l, 2l, 3l, 4l))).equals((new ArrayList<Float>(Arrays.asList((float)30.5f, (float)34.25f, (float)27.0f, (float)23.25f)))));\n    assert(averageTuple((long)Pair.with(Pair.with(1l, 1l, -5l), Pair.with(30l, -15l, 56l), Pair.with(81l, -60l, -39l), Pair.with(-10l, 2l, 3l))).equals((new ArrayList<Float>(Arrays.asList((float)25.5f, (float)-18.0f, (float)3.75f)))));\n    assert(averageTuple((long)Pair.with(Pair.with(100l, 100l, 100l, 120l), Pair.with(300l, 450l, 560l, 450l), Pair.with(810l, 800l, 390l, 320l), Pair.with(10l, 20l, 30l, 40l))).equals((new ArrayList<Float>(Arrays.asList((float)305.0f, (float)342.5f, (float)270.0f, (float)232.5f)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add((float)i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 1; i <= nums; i++) {\n            result.add((float)i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add((float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for(int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add((float) (i + 1) / 2);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add((float)i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<>();\n        for (int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (long i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add((float)i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(0.0f);\n        }\n        return result;",
    "        ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0; i < nums; i++) {\n            result.add(i, (float) i);\n        }\n        return result;"
  ]
}
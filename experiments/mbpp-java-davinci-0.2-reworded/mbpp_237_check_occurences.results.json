{
  "name": "mbpp_237_check_occurences",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_237_check_occurences.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> hm = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(hm.containsKey(i)) {\n                hm.put(i,hm.get(i) + 1);\n            }\n            else {\n                hm.put(i,(long)1);\n            }\n        }\n        return hm;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp1d65bxx0.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp1d65bxx0.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp1d65bxx0.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp1d65bxx0.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            }\n            else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmptvbvgejf.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptvbvgejf.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptvbvgejf.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptvbvgejf.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long x : test_list) {\n            if (occurences.containsKey(x)) {\n                occurences.put(x, occurences.get(x) + 1);\n            } else {\n                occurences.put(x, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpqp02ytnu.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpqp02ytnu.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpqp02ytnu.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpqp02ytnu.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long num : test_list) {\n            if (occurences.containsKey(num)) {\n                occurences.put(num, occurences.get(num) + 1);\n            } else {\n                occurences.put(num, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpzsv2x34l.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpzsv2x34l.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(int i=0;i<test_list.size();i++) {\n            if(result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i),result.get(test_list.get(i))+1);\n            }\n            else {\n                result.put(test_list.get(i),1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmp3xm782jx.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp3xm782jx.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp3xm782jx.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp3xm782jx.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpewaorio8.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpewaorio8.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp59pisl1m.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp59pisl1m.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp6xcwbhok.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6xcwbhok.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6xcwbhok.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6xcwbhok.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpt7einiji.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpt7einiji.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpt7einiji.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpt7einiji.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i: test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpsdyj6hvz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpsdyj6hvz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpsdyj6hvz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpsdyj6hvz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> test_map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (test_map.containsKey(i)) {\n                Long count = test_map.get(i);\n                test_map.put(i,count+1);\n            } else {\n                test_map.put(i,1L);\n            }\n        }\n        return test_map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmp0q4kfqz5.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp0q4kfqz5.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp0q4kfqz5.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp0q4kfqz5.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpbcizst32.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpbcizst32.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, (long) 1);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpmqtk5m11.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpmqtk5m11.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpmqtk5m11.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpmqtk5m11.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long num : test_list) {\n            if (occurences.containsKey(num)) {\n                occurences.put(num, occurences.get(num) + 1);\n            } else {\n                occurences.put(num, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpzsv2x34l.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpzsv2x34l.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i: test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpmv37484e.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpmv37484e.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpmv37484e.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpmv37484e.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            }\n            else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpxmw08u_6.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpxmw08u_6.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpxmw08u_6.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpxmw08u_6.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> test_map = new HashMap<Long,Long>();\n        for (int i=0; i<test_list.size(); i++) {\n            if (test_map.containsKey(test_list.get(i))) {\n                test_map.put(test_list.get(i), test_map.get(test_list.get(i))+1);\n            } else {\n                test_map.put(test_list.get(i), 1L);\n            }\n        }\n        return test_map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmp7v8hl5je.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp7v8hl5je.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp7v8hl5je.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp7v8hl5je.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpfne62tcg.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpfne62tcg.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpchsbtyx4.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpchsbtyx4.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpchsbtyx4.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpchsbtyx4.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long num : test_list) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpjtw_884q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpjtw_884q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpjtw_884q.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpjtw_884q.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp59pisl1m.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp59pisl1m.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> hm = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (hm.containsKey(i)) {\n                hm.put(i, hm.get(i) + 1);\n            } else {\n                hm.put(i, 1L);\n            }\n        }\n        return hm;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmp3fs_eak8.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp3fs_eak8.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp3fs_eak8.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp3fs_eak8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpccfuxjln.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpccfuxjln.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            }\n            else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmp5kpyi4vk.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp5kpyi4vk.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp5kpyi4vk.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp5kpyi4vk.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long num : test_list) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpjtw_884q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpjtw_884q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpjtw_884q.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpjtw_884q.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for(Long num: test_list) {\n            if(occurences.containsKey(num)) {\n                occurences.put(num, occurences.get(num) + 1);\n            } else {\n                occurences.put(num, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpw7oxpaoz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpw7oxpaoz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpw7oxpaoz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpw7oxpaoz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurances = new HashMap<Long,Long>();\n        for (Long element : test_list) {\n            if (occurances.containsKey(element)) {\n                occurances.put(element, occurances.get(element) + 1);\n            } else {\n                occurances.put(element, 1L);\n            }\n        }\n        return occurances;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185217,
      "stdout": "",
      "stderr": "/tmp/tmpcy0a5kla.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpcy0a5kla.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpcy0a5kla.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpcy0a5kla.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (long i : test_list) {\n            if (occurences.containsKey(i)) {\n                long count = occurences.get(i);\n                occurences.put(i, count + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185217,
      "stdout": "",
      "stderr": "/tmp/tmphtta073d.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmphtta073d.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmphtta073d.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmphtta073d.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(int i=0;i<test_list.size();i++) {\n            if(result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i),result.get(test_list.get(i))+1);\n            }\n            else {\n                result.put(test_list.get(i),1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185217,
      "stdout": "",
      "stderr": "/tmp/tmplrnxv9ey.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmplrnxv9ey.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmplrnxv9ey.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmplrnxv9ey.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i: test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185217,
      "stdout": "",
      "stderr": "/tmp/tmp97fhrlfi.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp97fhrlfi.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp97fhrlfi.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp97fhrlfi.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i: test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185217,
      "stdout": "",
      "stderr": "/tmp/tmpgk5k5kpe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpgk5k5kpe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpgk5k5kpe.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpgk5k5kpe.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpccfuxjln.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpccfuxjln.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpewaorio8.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpewaorio8.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp59pisl1m.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp59pisl1m.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp59pisl1m.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(Long i: test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            }\n            else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmp4hst3jnc.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp4hst3jnc.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp4hst3jnc.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp4hst3jnc.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpccfuxjln.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpccfuxjln.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> test_map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (test_map.containsKey(i)) {\n                test_map.put(i, test_map.get(i) + 1);\n            } else {\n                test_map.put(i, 1L);\n            }\n        }\n        return test_map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmpv1xbwydw.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpv1xbwydw.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpv1xbwydw.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpv1xbwydw.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmplqf68bzk.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmplqf68bzk.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmplqf68bzk.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmplqf68bzk.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmpxqk3gs7s.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpxqk3gs7s.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpxqk3gs7s.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpxqk3gs7s.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpbcizst32.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpbcizst32.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            }\n            else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmpv8czosp3.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpv8czosp3.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpv8czosp3.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpv8czosp3.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmpc26er83g.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpc26er83g.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpc26er83g.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpc26er83g.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpewaorio8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpewaorio8.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpewaorio8.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6dl35tts.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6dl35tts.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long element : test_list) {\n            if (occurences.containsKey(element)) {\n                occurences.put(element, occurences.get(element) + 1);\n            } else {\n                occurences.put(element, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmpl5uetg2_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpl5uetg2_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpl5uetg2_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpl5uetg2_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for(Long i : test_list) {\n            if(occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmp2j2sid5v.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2j2sid5v.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2j2sid5v.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2j2sid5v.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long num : test_list) {\n            if (occurences.containsKey(num)) {\n                occurences.put(num, occurences.get(num) + 1);\n            } else {\n                occurences.put(num, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpzsv2x34l.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpzsv2x34l.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpzsv2x34l.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpbcizst32.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpbcizst32.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpbcizst32.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpbcizst32.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i: test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            }\n            else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmp1mv4sjiq.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp1mv4sjiq.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp1mv4sjiq.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp1mv4sjiq.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(occurences.containsKey(i)) {\n                occurences.put(i,occurences.get(i)+1);\n            }\n            else {\n                occurences.put(i,1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185220,
      "stdout": "",
      "stderr": "/tmp/tmp2xzjg8m_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2xzjg8m_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2xzjg8m_.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2xzjg8m_.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpfne62tcg.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpfne62tcg.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp6xcwbhok.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6xcwbhok.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6xcwbhok.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6xcwbhok.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmpc26er83g.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpc26er83g.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpc26er83g.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpc26er83g.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, (long)1);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185220,
      "stdout": "",
      "stderr": "/tmp/tmpcte83xyw.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpcte83xyw.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpcte83xyw.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpcte83xyw.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6dl35tts.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6dl35tts.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i: test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i)+1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185220,
      "stdout": "",
      "stderr": "/tmp/tmpyjac2pac.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpyjac2pac.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpyjac2pac.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpyjac2pac.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185218,
      "stdout": "",
      "stderr": "/tmp/tmpxqk3gs7s.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpxqk3gs7s.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpxqk3gs7s.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpxqk3gs7s.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (map.containsKey(test_list.get(i))) {\n                map.put(test_list.get(i), map.get(test_list.get(i)) + 1);\n            } else {\n                map.put(test_list.get(i), 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185220,
      "stdout": "",
      "stderr": "/tmp/tmp6hhd0p6q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6hhd0p6q.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6hhd0p6q.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6hhd0p6q.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            }\n            else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185220,
      "stdout": "",
      "stderr": "/tmp/tmpnit1o14s.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpnit1o14s.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpnit1o14s.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpnit1o14s.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpo8o8y190.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpo8o8y190.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpo8o8y190.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmpzpf7buqe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpzpf7buqe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpzpf7buqe.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpzpf7buqe.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185214,
      "stdout": "",
      "stderr": "/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpbcizst32.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpbcizst32.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpbcizst32.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            }\n            else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185216,
      "stdout": "",
      "stderr": "/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpccfuxjln.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpccfuxjln.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpccfuxjln.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmpxsnk6x_2.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpxsnk6x_2.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpxsnk6x_2.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpxsnk6x_2.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i,map.get(i)+1);\n            } else {\n                map.put(i,1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185219,
      "stdout": "",
      "stderr": "/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp6dl35tts.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp6dl35tts.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp6dl35tts.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i: test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, (long)1);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmpx7l6x8v_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpx7l6x8v_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpx7l6x8v_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpx7l6x8v_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmptxdche0_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmptxdche0_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmptxdche0_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for(Long i : test_list) {\n            if(result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            }\n            else {\n                result.put(i, (long)1);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmphrlcosr8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmphrlcosr8.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmphrlcosr8.java:23: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmphrlcosr8.java:24: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i,result.get(i)+1);\n            } else {\n                result.put(i,1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpiy1rtno7.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpiy1rtno7.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpiy1rtno7.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> hm = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(hm.containsKey(i)) {\n                hm.put(i, hm.get(i) + 1);\n            } else {\n                hm.put(i, 1L);\n            }\n        }\n        return hm;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmpsaw8vhx_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpsaw8vhx_.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpsaw8vhx_.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpsaw8vhx_.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185212,
      "stdout": "",
      "stderr": "/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpm7835hns.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpm7835hns.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpm7835hns.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185213,
      "stdout": "",
      "stderr": "/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp2s_c0elv.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp2s_c0elv.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp2s_c0elv.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpfne62tcg.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpfne62tcg.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (result.containsKey(i)) {\n                result.put(i, result.get(i) + 1);\n            } else {\n                result.put(i, 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmp_tv9j4rz.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmp_tv9j4rz.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmp_tv9j4rz.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> map = new HashMap<Long,Long>();\n        for(Long i : test_list) {\n            if(map.containsKey(i)) {\n                map.put(i, map.get(i) + 1);\n            } else {\n                map.put(i, 1L);\n            }\n        }\n        return map;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185215,
      "stdout": "",
      "stderr": "/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpfne62tcg.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpfne62tcg.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpfne62tcg.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> result = new HashMap<Long,Long>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(result.containsKey(test_list.get(i))) {\n                result.put(test_list.get(i), result.get(test_list.get(i)) + 1);\n            } else {\n                result.put(test_list.get(i), 1L);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185221,
      "stdout": "",
      "stderr": "/tmp/tmpzpf7buqe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpzpf7buqe.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpzpf7buqe.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpzpf7buqe.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in an array array list of pairs and returns a hash map mapping each unique pair to the number of times it occurs in the array list.\n    public static HashMap<Long,Long> checkOccurences(ArrayList<Long> test_list) {\n        HashMap<Long,Long> occurences = new HashMap<Long,Long>();\n        for (Long i : test_list) {\n            if (occurences.containsKey(i)) {\n                occurences.put(i, occurences.get(i) + 1);\n            } else {\n                occurences.put(i, 1L);\n            }\n        }\n        return occurences;\n    }\n    public static void main(String[] args) {\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(4l, 2l), (Pair<Long, Long>)Pair.with(2l, 4l), (Pair<Long, Long>)Pair.with(3l, 6l), (Pair<Long, Long>)Pair.with(6l, 3l), (Pair<Long, Long>)Pair.with(7l, 4l))))).equals((new HashMap<Long,Long>((4l, 7l), 1l)))));\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(13l, 2l), (Pair<Long, Long>)Pair.with(11l, 23l), (Pair<Long, Long>)Pair.with(12l, 25l), (Pair<Long, Long>)Pair.with(25l, 12l), (Pair<Long, Long>)Pair.with(16l, 23l))))).equals((new HashMap<Long,Long>((16l, 23l), 1l)))));\n    }\n\n}\n",
      "timestamp": 1667185211,
      "stdout": "",
      "stderr": "/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                            ^\n/tmp/tmpb2ek8w_p.java:22: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                 ^\n/tmp/tmpb2ek8w_p.java:22: error: ';' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(3l, 1l), (Pair<Long, Long>)Pair.with(1l, 3l), (Pair<Long, Long>)Pair.with(2l, 5l), (Pair<Long, Long>)Pair.with(5l, 2l), (Pair<Long, Long>)Pair.with(6l, 3l))))).equals((new HashMap<Long,Long>((3l, 6l), 1l)))));\n                                                                                                                                                                                                                                                                                                       ^\n/tmp/tmpb2ek8w_p.java:23: error: ')' expected\n    assert(checkOccurences((new ArrayList<Long>(Arrays.asList((Pair<Long, Long>)Pair.with(",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
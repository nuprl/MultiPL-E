{
  "name": "mbpp_58_opposite_Signs",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_58_opposite_Signs.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        // Write your code here\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return (x ^ y) < 0;\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check whether the given two integers have opposite sign or not.\n    public static boolean oppositeSigns(long x, long y) {\n        return ((x ^ y) < 0);\n    }\n    public static void main(String[] args) {\n    assert(oppositeSigns((1l), (-2l)) == (true));\n    assert(oppositeSigns((3l), (2l)) == (false));\n    assert(oppositeSigns((-10l), (-10l)) == (false));\n    assert(oppositeSigns((-2l), (2l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187895,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to pack consecutive duplicates of a given array list elements into subarray lists.\n    public static Object packConsecutiveDuplicates(Object list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((long)0l, (long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)4l, (long)5l, (long)6l, (long)6l, (long)6l, (long)7l, (long)8l, (long)9l, (long)4l, (long)4l)))).equals((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)0l, (long)0l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)6l, (long)6l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)7l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)8l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)4l)))))));\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((long)10l, (long)10l, (long)15l, (long)19l, (long)18l, (long)18l, (long)17l, (long)26l, (long)26l, (long)17l, (long)18l, (long)10l)))).equals((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)10l, (long)10l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)15l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)19l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)18l, (long)18l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)17l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)26l, (long)26l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)17l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)18l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)10l)))))));\n    assert(packConsecutiveDuplicates((new Object(Arrays.asList((String)\"a\", (String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\", (String)\"d\")))).equals((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"a\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"b\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"c\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"d\", (String)\"d\")))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i == 0) {\n                temp.add(list.get(i));\n            } else {\n                if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n        }\n        result.add(temp);\n        return result;",
    "        if (list1 instanceof List) {\n            List list = (List) list1;\n            List<List> result = new ArrayList<>();\n            List<Object> sublist = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    sublist.add(list.get(i));\n                } else {\n                    if (list.get(i).equals(list.get(i - 1))) {\n                        sublist.add(list.get(i));\n                    } else {\n                        result.add(sublist);\n                        sublist = new ArrayList<>();\n                        sublist.add(list.get(i));\n                    }\n                }\n            }\n            result.add(sublist);\n            return result;\n        } else {\n            return null;\n        }",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (List) list1) {\n            if (((List) list3).isEmpty()) {\n                ((List) list3).add(i);\n            } else if (((List) list3).get(0).equals(i)) {\n                ((List) list3).add(i);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List) list3).add(i);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        Object list2 = new ArrayList();\n        Object list3 = new ArrayList();\n        Object list4 = new ArrayList();\n        Object list5 = new ArrayList();\n        Object list6 = new ArrayList();\n        Object list7 = new ArrayList();\n        Object list8 = new ArrayList();\n        Object list9 = new ArrayList();\n        Object list10 = new ArrayList();\n        Object list11 = new ArrayList();\n        Object list12 = new ArrayList();\n        Object list13 = new ArrayList();\n        Object list14 = new ArrayList();\n        Object list15 = new ArrayList();\n        Object list16 = new ArrayList();\n        Object list17 = new ArrayList();\n        Object list18 = new ArrayList();\n        Object list19 = new ArrayList();\n        Object list20 = new ArrayList();\n        Object list21 = new ArrayList();\n        Object list22 = new ArrayList();\n        Object list23 = new ArrayList();\n        Object list24 = new ArrayList();\n        Object list25 = new ArrayList();\n        Object list26 = new ArrayList();\n        Object list27 = new ArrayList();\n        Object list28 = new ArrayList();\n        Object list29 = new ArrayList();\n        Object list30 = new ArrayList();\n        Object list31 = new ArrayList();\n        Object list32 = new ArrayList();\n        Object list33 = new ArrayList();\n        Object list34 = new ArrayList();\n        Object list35 = new ArrayList();\n        Object list36 = new ArrayList();\n        Object list37 = new ArrayList();\n        Object list38 = new ArrayList();\n        Object list39 = new ArrayList();\n        Object list40 = new ArrayList();\n        Object list41 = new ArrayList();\n        Object list42 = new ArrayList();\n        Object list43 = new ArrayList();\n        Object list44 = new ArrayList();\n        Object list45 = new ArrayList();\n        Object list46 = new ArrayList();\n        Object list47 = new ArrayList();\n        Object list48 = new ArrayList();\n        Object list49 = new ArrayList();\n        Object list50 = new ArrayList();\n        Object list51 = new ArrayList();\n        Object list52 = new ArrayList();\n       ",
    "        Object list2 = new ArrayList<Object>();\n        Object list3 = new ArrayList<Object>();\n        Object list4 = new ArrayList<Object>();\n        Object list5 = new ArrayList<Object>();\n        Object list6 = new ArrayList<Object>();\n        Object list7 = new ArrayList<Object>();\n        Object list8 = new ArrayList<Object>();\n        Object list9 = new ArrayList<Object>();\n        Object list10 = new ArrayList<Object>();\n        Object list11 = new ArrayList<Object>();\n        Object list12 = new ArrayList<Object>();\n        Object list13 = new ArrayList<Object>();\n        Object list14 = new ArrayList<Object>();\n        Object list15 = new ArrayList<Object>();\n        Object list16 = new ArrayList<Object>();\n        Object list17 = new ArrayList<Object>();\n        Object list18 = new ArrayList<Object>();\n        Object list19 = new ArrayList<Object>();\n        Object list20 = new ArrayList<Object>();\n        Object list21 = new ArrayList<Object>();\n        Object list22 = new ArrayList<Object>();\n        Object list23 = new ArrayList<Object>();\n        Object list24 = new ArrayList<Object>();\n        Object list25 = new ArrayList<Object>();\n        Object list26 = new ArrayList<Object>();\n        Object list27 = new ArrayList<Object>();\n        Object list28 = new ArrayList<Object>();\n        Object list29 = new ArrayList<Object>();\n        Object list30 = new ArrayList<Object>();\n        Object list31 = new ArrayList<Object>();\n        Object list32 = new ArrayList<Object>();\n        Object list33 = new ArrayList<Object>();\n        Object list34 = new ArrayList<Object>();\n        Object list35 = new ArrayList<Object>();\n        Object list36 = new ArrayList<Object>();\n        Object list37 = new ArrayList<Object>();\n        Object list38 = new ArrayList<Object>();\n        Object list39 = new ArrayList<Object>();\n        Object list40 = new ArrayList<Object>();\n        Object list41",
    "        Object list2 = new ArrayList<Object>();\n        Object list3 = new ArrayList<Object>();\n        Object list4 = new ArrayList<Object>();\n        Object list5 = new ArrayList<Object>();\n        Object list6 = new ArrayList<Object>();\n        Object list7 = new ArrayList<Object>();\n        Object list8 = new ArrayList<Object>();\n        Object list9 = new ArrayList<Object>();\n        Object list10 = new ArrayList<Object>();\n        Object list11 = new ArrayList<Object>();\n        Object list12 = new ArrayList<Object>();\n        Object list13 = new ArrayList<Object>();\n        Object list14 = new ArrayList<Object>();\n        Object list15 = new ArrayList<Object>();\n        Object list16 = new ArrayList<Object>();\n        Object list17 = new ArrayList<Object>();\n        Object list18 = new ArrayList<Object>();\n        Object list19 = new ArrayList<Object>();\n        Object list20 = new ArrayList<Object>();\n        Object list21 = new ArrayList<Object>();\n        Object list22 = new ArrayList<Object>();\n        Object list23 = new ArrayList<Object>();\n        Object list24 = new ArrayList<Object>();\n        Object list25 = new ArrayList<Object>();\n        Object list26 = new ArrayList<Object>();\n        Object list27 = new ArrayList<Object>();\n        Object list28 = new ArrayList<Object>();\n        Object list29 = new ArrayList<Object>();\n        Object list30 = new ArrayList<Object>();\n        Object list31 = new ArrayList<Object>();\n        Object list32 = new ArrayList<Object>();\n        Object list33 = new ArrayList<Object>();\n        Object list34 = new ArrayList<Object>();\n        Object list35 = new ArrayList<Object>();\n        Object list36 = new ArrayList<Object>();\n        Object list37 = new ArrayList<Object>();\n        Object list38 = new ArrayList<Object>();\n        Object list39 = new ArrayList<Object>();\n        Object list40 = new ArrayList<Object>();\n        Object list41",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            Object last = null;\n            List<Object> sublist = null;\n            for (Object item : list) {\n                if (last == null || !last.equals(item)) {\n                    sublist = new ArrayList<>();\n                    result.add(sublist);\n                }\n                sublist.add(item);\n                last = item;\n            }\n            return result;\n        } else {\n            return list1;\n        }",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            List<Object> temp = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (temp.size() == 0) {\n                    temp.add(list.get(i));\n                } else if (temp.get(0).equals(list.get(i))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n            result.add(temp);\n            return result;\n        } else {\n            return null;\n        }",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i == 0) {\n                temp.add(list.get(i));\n            } else {\n                if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n        }\n        result.add(temp);\n        return result;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (ArrayList)list1) {\n            if (((ArrayList)list3).isEmpty()) {\n                ((ArrayList)list3).add(i);\n            } else if (((ArrayList)list3).get(0).equals(i)) {\n                ((ArrayList)list3).add(i);\n            } else {\n                ((ArrayList)list2).add(list3);\n                list3 = new ArrayList<>();\n                ((ArrayList)list3).add(i);\n            }\n        }\n        ((ArrayList)list2).add(list3);\n        return list2;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        Object list4 = new ArrayList<>();\n        Object list5 = new ArrayList<>();\n        Object list6 = new ArrayList<>();\n        Object list7 = new ArrayList<>();\n        Object list8 = new ArrayList<>();\n        Object list9 = new ArrayList<>();\n        Object list10 = new ArrayList<>();\n        Object list11 = new ArrayList<>();\n        Object list12 = new ArrayList<>();\n        Object list13 = new ArrayList<>();\n        Object list14 = new ArrayList<>();\n        Object list15 = new ArrayList<>();\n        Object list16 = new ArrayList<>();\n        Object list17 = new ArrayList<>();\n        Object list18 = new ArrayList<>();\n        Object list19 = new ArrayList<>();\n        Object list20 = new ArrayList<>();\n        Object list21 = new ArrayList<>();\n        Object list22 = new ArrayList<>();\n        Object list23 = new ArrayList<>();\n        Object list24 = new ArrayList<>();\n        Object list25 = new ArrayList<>();\n        Object list26 = new ArrayList<>();\n        Object list27 = new ArrayList<>();\n        Object list28 = new ArrayList<>();\n        Object list29 = new ArrayList<>();\n        Object list30 = new ArrayList<>();\n        Object list31 = new ArrayList<>();\n        Object list32 = new ArrayList<>();\n        Object list33 = new ArrayList<>();\n        Object list34 = new ArrayList<>();\n        Object list35 = new ArrayList<>();\n        Object list36 = new ArrayList<>();\n        Object list37 = new ArrayList<>();\n        Object list38 = new ArrayList<>();\n        Object list39 = new ArrayList<>();\n        Object list40 = new ArrayList<>();\n        Object list41 = new ArrayList<>();\n        Object list42 = new ArrayList<>();\n        Object list43 = new ArrayList<>();\n        Object list44 = new Array",
    "        if (list1 instanceof List) {\n            List list = (List) list1;\n            List<List> result = new ArrayList<>();\n            List<Object> temp = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (temp.size() == 0) {\n                    temp.add(list.get(i));\n                } else {\n                    if (temp.get(0).equals(list.get(i))) {\n                        temp.add(list.get(i));\n                    } else {\n                        result.add(temp);\n                        temp = new ArrayList<>();\n                        temp.add(list.get(i));\n                    }\n                }\n            }\n            result.add(temp);\n            return result;\n        } else {\n            return list1;\n        }",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i == 0) {\n                temp.add(list.get(i));\n            } else if (list.get(i).equals(list.get(i - 1))) {\n                temp.add(list.get(i));\n            } else {\n                result.add(temp);\n                temp = new ArrayList<>();\n                temp.add(list.get(i));\n            }\n        }\n        result.add(temp);\n        return result;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (List) list1) {\n            if (((List) list3).isEmpty() || ((List) list3).get(0).equals(i)) {\n                ((List) list3).add(i);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List) list3).add(i);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object i : (ArrayList) list1) {\n            if (((ArrayList) list3).isEmpty()) {\n                ((ArrayList) list3).add(i);\n            } else if (((ArrayList) list3).get(0).equals(i)) {\n                ((ArrayList) list3).add(i);\n            } else {\n                ((ArrayList) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((ArrayList) list3).add(i);\n            }\n        }\n        ((ArrayList) list2).add(list3);\n        return list2;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object item : (List) list1) {\n            if (((List) list3).isEmpty() || ((List) list3).get(0).equals(item)) {\n                ((List) list3).add(item);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List) list3).add(item);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        List<Object> list = (List<Object>) list1;\n        List<Object> result = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (i == 0) {\n                temp.add(list.get(i));\n            } else {\n                if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n        }\n        result.add(temp);\n        return result;",
    "        Object list2 = new ArrayList<>();\n        Object list3 = new ArrayList<>();\n        for (Object item : (List) list1) {\n            if (((List) list3).isEmpty() || ((List) list3).get(0).equals(item)) {\n                ((List) list3).add(item);\n            } else {\n                ((List) list2).add(list3);\n                list3 = new ArrayList<>();\n                ((List) list3).add(item);\n            }\n        }\n        ((List) list2).add(list3);\n        return list2;",
    "        if (list1 instanceof List) {\n            List<Object> list = (List<Object>) list1;\n            List<Object> result = new ArrayList<>();\n            List<Object> temp = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    temp.add(list.get(i));\n                } else if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n            result.add(temp);\n            return result;\n        } else {\n            return list1;\n        }",
    "        if (list1 instanceof List) {\n            List list = (List) list1;\n            List<List> result = new ArrayList<>();\n            List<Object> temp = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    temp.add(list.get(i));\n                } else if (list.get(i).equals(list.get(i - 1))) {\n                    temp.add(list.get(i));\n                } else {\n                    result.add(temp);\n                    temp = new ArrayList<>();\n                    temp.add(list.get(i));\n                }\n            }\n            result.add(temp);\n            return result;\n        }\n        return null;"
  ]
}
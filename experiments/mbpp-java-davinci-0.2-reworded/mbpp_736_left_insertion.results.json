{
  "name": "mbpp_736_left_insertion",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_736_left_insertion.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpr3hmexm_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            }\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpxmiqx8ou.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp1rvjzoa0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmput4r_xdq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2wy88qk9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpxv7u5yfp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp933gy47g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpv4qpj_va.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpwwdp7fld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size();\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp47h3l3fn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp35x36skf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long left = 0;\n        long right = a.size() - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (a.get((int) mid) == x) {\n                return mid;\n            } else if (a.get((int) mid) > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp5i0cw4a3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp7n_g6v79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            }\n            if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpu2iiwdwq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp_uiylnyo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp49krepst.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Binary search\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp3cu9ymc2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp35x36skf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpf9cakmfk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp_uiylnyo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpoupgfcz1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long left = 0;\n        long right = a.size() - 1;\n        while (left <= right) {\n            long mid = left + (right - left) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpsh4wv_t_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0, hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp_m_i91t4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpvozo70ko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmprl4tgepy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpim2j670j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp2wn75bx2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0, hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) lo = mid + 1;\n            else hi = mid;\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp3rcji7gi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp35x36skf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        int mid;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp1y8daemd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpqug9p8xm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (a.get(mid) < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpfpo90mcf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp6x8yk6yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpq7ykpwtc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long low = 0;\n        long high = a.size() - 1;\n        long mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp8fjsv8li.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size();\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpnw0n90a3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmprz73l9t1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpr3hmexm_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (a.get((int)m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmptmda1nai.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1, m;\n        while (l <= r) {\n            m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpub7ytpto.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        if (a.get(l) < x) {\n            return l + 1;\n        } else {\n            return l;\n        }\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmps5wathvn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size();\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) >= x) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmphhzj9vk3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkrp31wth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        if (a.size() == 0) {\n            return 0;\n        }\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        if (a.get(l) < x) {\n            return l + 1;\n        } else {\n            return l;\n        }\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp78ky93ap.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp0xupul3i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmps_1dhdsz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) l = m + 1;\n            else r = m;\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpbs_iyy38.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpvozo70ko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkf_adzad.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp1rvjzoa0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp974h2xfl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpcpu8tmuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpxdb29n10.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long left = 0;\n        long right = a.size() - 1;\n        while (left <= right) {\n            long mid = (left + right) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpu6i8_686.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp_uiylnyo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmput4r_xdq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpjtguandq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpyr0kx3g3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size()-1;\n        while (l <= r) {\n            int m = l + (r-l)/2;\n            if (a.get(m) == x) {\n                return m;\n            }\n            if (a.get(m) > x) {\n                r = m-1;\n            } else {\n                l = m+1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpecw0vq3q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkrp31wth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (x <= a.get(mid)) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp80_6a_4p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = l + (r - l) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmppd75k6i2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            }\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp9dmfvpkq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp49krepst.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        if (a.size() == 0) return 0;\n        if (x < a.get(0)) return 0;\n        if (x > a.get(a.size() - 1)) return a.size();\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) l = m + 1;\n            else r = m;\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmph07uy39y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpwughe3qg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpqj853jv6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmp_al0qvew.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        int mid;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpv0dp79rb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpio6q2oq4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // binary search\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmp57hjxy4h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) >= x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmppgm2ra6m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpjkopv0oy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpv4qpj_va.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpqug9p8xm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpr3hmexm_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write - Your - Code\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpiluvqeia.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) return m;\n            if (a.get(m) > x) r = m - 1;\n            else l = m + 1;\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp28u53hoo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // binary search\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpp0zo6zck.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpl3xhhfzr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpn2nq9bxh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp8cm07dql.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpx6odr9bd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp6x8yk6yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp35x36skf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmptzkr_3qy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpvyq54yar.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (a.get(mid) < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpfpo90mcf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpbuyjtfko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp_uiylnyo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l < r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpfpz2ml5n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write your code here\n        long low = 0;\n        long high = a.size() - 1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (a.get((int) mid) == x) {\n                return mid;\n            } else if (a.get((int) mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp3nbgm6j4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpim2j670j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpx6odr9bd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            }\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpxmiqx8ou.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpvozo70ko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpr3hmexm_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write - Your - Code\n        int start = 0;\n        int end = a.size() - 1;\n        int mid = 0;\n        while (start <= end) {\n            mid = (start + end) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return start;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp3jmonvfk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpxv7u5yfp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpn2nq9bxh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpamzt7e8q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) >= x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpgtrz2hzo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpvqw51wr1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0, r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpio6q2oq4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write - Your - Code\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpsu7w8iue.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long lo = 0;\n        long hi = a.size()-1;\n        while (lo <= hi) {\n            long mid = (lo + hi) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpfjujwg79.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpamzt7e8q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpamzt7e8q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkf_adzad.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0, hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) lo = mid + 1;\n            else hi = mid;\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp3rcji7gi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        if (a.size() == 0) return 0;\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpjiyfvo1t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpjxj11xeq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpqug9p8xm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long lo = 0;\n        long hi = a.size() - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp_wvaqt99.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpvyq54yar.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = l + (r - l) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpjtguandq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp35x36skf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp9tj6c6vm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpoupgfcz1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        if (a.size() == 0) return 0;\n        if (a.get(0) >= x) return 0;\n        if (a.get(a.size() - 1) < x) return a.size();\n        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (a.get(mid) >= x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp4d_bd_99.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpv4qpj_va.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size();\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmps3lmvax1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpvozo70ko.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpim2j670j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpq7ykpwtc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmprz73l9t1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        if (x <= a.get(0)) {\n            return 0;\n        }\n        if (x > a.get(n - 1)) {\n            return n;\n        }\n        int lo = 0;\n        int hi = n - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x && a.get(mid + 1) > x) {\n                return mid + 1;\n            } else if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpb8kvigak.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size();\n        while (l < r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpnw0n90a3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int l = 0, r = a.size() - 1;\n        while(l < r) {\n            int mid = (l + r) / 2;\n            if(a.get(mid) >= x) {\n                r = mid;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpz1rnfdb5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo <= hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2wy88qk9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkf_adzad.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpja0q4tnc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        if (a.size() == 0) return 0;\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) < x) l = mid + 1;\n            else r = mid;\n        }\n        return a.get(l) >= x ? l : l + 1;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmprm97ala_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return left;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp933gy47g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpavcjs1ip.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp2glybvr8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpv4qpj_va.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) < x) {\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp0w0fw2gr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int lo = 0;\n        int hi = a.size() - 1;\n        while (lo < hi) {\n            int mid = (lo + hi) / 2;\n            if (a.get(mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmp8cm07dql.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int) m) == x) {\n                return m;\n            } else if (a.get((int) m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp2wn75bx2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp9tj6c6vm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp6x8yk6yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpbofcyn6m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long lo = 0;\n        long hi = a.size() - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmps2rxr1uy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long mid = (l + r) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmput4r_xdq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0;\n        int r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp8tffqwer.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpwwdp7fld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long l = 0;\n        long r = a.size() - 1;\n        while (l <= r) {\n            long m = (l + r) / 2;\n            if (a.get((int)m) == x) {\n                return m;\n            } else if (a.get((int)m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp_uiylnyo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0, high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpx4a7kqb8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long lo = 0;\n        long hi = a.size() - 1;\n        while (lo <= hi) {\n            long mid = lo + (hi - lo) / 2;\n            if (a.get((int)mid) < x) {\n                lo = mid + 1;\n            } else {\n                hi = mid - 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpnw4yme8k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpxdb29n10.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        if (x <= a.get(0)) {\n            return 0;\n        }\n        if (x > a.get(n - 1)) {\n            return n;\n        }\n        int lo = 0;\n        int hi = n - 1;\n        while (lo <= hi) {\n            int mid = lo + (hi - lo) / 2;\n            if (x <= a.get(mid)) {\n                hi = mid - 1;\n            } else {\n                lo = mid + 1;\n            }\n        }\n        return lo;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp2mctz5ye.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long low = 0;\n        long high = a.size() - 1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (a.get((int)mid) == x) {\n                return mid;\n            } else if (a.get((int)mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmp8rqrgowe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpkrp31wth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp6x8yk6yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0, r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmp93uefq6l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l < r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmpcx25tr49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        // Write - Your - Code\n        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124230,
      "stdout": "",
      "stderr": "/tmp/tmpiluvqeia.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int mid = (l + r) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) > x) {\n                r = mid - 1;\n            } else {\n                l = mid + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124231,
      "stdout": "",
      "stderr": "/tmp/tmpja0q4tnc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) < x) {\n                l = m + 1;\n            } else {\n                r = m - 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmp6x8yk6yh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int n = a.size();\n        int l = 0, r = n - 1;\n        while (l <= r) {\n            int m = (l + r) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124229,
      "stdout": "",
      "stderr": "/tmp/tmpcpu8tmuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpwwdp7fld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int low = 0;\n        int high = a.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124228,
      "stdout": "",
      "stderr": "/tmp/tmprz73l9t1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        int l = 0;\n        int r = a.size() - 1;\n        while (l <= r) {\n            int m = l + (r - l) / 2;\n            if (a.get(m) == x) {\n                return m;\n            } else if (a.get(m) > x) {\n                r = m - 1;\n            } else {\n                l = m + 1;\n            }\n        }\n        return l;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1665509805,
      "stdout": "",
      "stderr": "/tmp/tmpwwdp7fld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/javathon-exercises/data-structures-and-algorithms/javathon-data-structure-exercise-24.php\n    public static long leftInsertion(ArrayList<Long> a, long x) {\n        long low = 0, high = a.size() - 1;\n        while (low <= high) {\n            long mid = (low + high) / 2;\n            if (a.get((int) mid) == x) {\n                return mid;\n            } else if (a.get((int) mid) > x) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    public static void main(String[] args) {\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (6l)) == (4l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (3l)) == (2l));\n    assert(leftInsertion((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)4l, (long)5l))), (7l)) == (4l));\n    }\n\n}\n",
      "timestamp": 1666124232,
      "stdout": "",
      "stderr": "/tmp/tmpzl5uivi4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
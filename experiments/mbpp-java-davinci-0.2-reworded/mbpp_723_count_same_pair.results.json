{
  "name": "mbpp_723_count_same_pair",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_723_count_same_pair.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        return IntStream.range(0, nums1.size())\n            .filter(i -> nums1.get(i).equals(nums2.get(i)))\n            .count();\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrg3vc21.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        if (nums1.size() != nums2.size()) {\n            return 0;\n        }\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188786,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3dnrx7q.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // TODO: Implement this function.\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp09h_5e56.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0auuucr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0auuucr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        int count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx5fkndp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx5fkndp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188787,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0auuucr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here.\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx5fkndp.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here.\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0auuucr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Fill in the code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188790,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79jifqx7.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++){\n            if(nums1.get(i) == nums2.get(i)){\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        long count = 0;\n        for(int i = 0; i < nums1.size(); i++) {\n            if(nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188790,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your solution goes here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188790,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8_2huu7e.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188785,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188788,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here.\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188789,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        // Write your code here\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i) == nums2.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // The input is defined as two array lists of the same length. Write a function to count indices where the array lists have the same values.\n    public static long countSamePair(ArrayList<Long> nums1, ArrayList<Long> nums2) {\n        long count = 0;\n        for (int i = 0; i < nums1.size(); i++) {\n            if (nums1.get(i).equals(nums2.get(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void main(String[] args) {\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)3l, (long)1l, (long)2l, (long)6l, (long)7l, (long)9l)))) == (4l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)0l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (11l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)-6l, (long)-9l, (long)11l, (long)-12l, (long)14l, (long)-5l, (long)17l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)2l, (long)-1l, (long)-5l, (long)6l, (long)4l, (long)-3l, (long)-2l, (long)3l, (long)4l, (long)6l, (long)8l)))) == (1l));\n    assert(countSamePair((new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)1l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)1l, (long)2l, (long)2l)))) == (3l));\n    }\n\n}\n",
      "timestamp": 1667188783,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
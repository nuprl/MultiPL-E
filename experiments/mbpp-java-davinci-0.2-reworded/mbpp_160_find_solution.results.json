{
  "name": "mbpp_160_find_solution",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long r = n % b1;\n        long q = n / b1;\n        if (r == 0) {\n            return Optional.of(x);\n        }\n        Optional<Long> solution = findSolution(b1, r, q);\n        if (solution.isPresent()) {\n            x = solution.get();\n            y = (n - a * x) / b;\n            return Optional.of(x);\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmppkf694w1.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmppkf694w1.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmpyuq58op_.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmpyuq58op_.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmpr6dt33u2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpr6dt33u2.java:15: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184939,
      "stdout": "",
      "stderr": "/tmp/tmpl1ax6osi.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpl1ax6osi.java:20: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a, b);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184941,
      "stdout": "",
      "stderr": "/tmp/tmpwr85ydox.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x += b / g;\n            } else {\n                y -= a / g;\n            }\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmpp2h93egc.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpp2h93egc.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmphuxnf_g3.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmphuxnf_g3.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmphuxnf_g3.java:27: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp_mtik65v.java:55: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp28tidcme.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp28tidcme.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement me!\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpuufzhbac.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 1;\n        long y = 1;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedGcd(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "/tmp/tmphxqdhc5q.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmphxqdhc5q.java:20: error: cannot find symbol\n        Pair<Long, Long> p = extendedGcd(a, b);\n                             ^\n  symbol:   method extendedGcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "/tmp/tmpl5m655u7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpl5m655u7.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x * n);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "/tmp/tmpdp27x7ih.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpdp27x7ih.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmpyuq58op_.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184944,
      "stdout": "",
      "stderr": "/tmp/tmph3lcxbfi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmph3lcxbfi.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] r = extendedEuclid(a, b);\n        x = r[0];\n        y = r[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184944,
      "stdout": "",
      "stderr": "/tmp/tmpvtsi206e.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpvtsi206e.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpvtsi206e.java:17: error: cannot find symbol\n        long[] r = extendedEuclid(a, b);\n                   ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclidean(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "/tmp/tmpqatfjuta.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqatfjuta.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqatfjuta.java:20: error: cannot find symbol\n        long[] result = extendedEuclidean(a1, b1);\n                        ^\n  symbol:   method extendedEuclidean(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        while (x * a <= n) {\n            if ((n - x * a) % b == 0) {\n                y = (n - x * a) / b;\n                return Optional.of(y);\n            }\n            x++;\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpwa6inu_p.java:23)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "/tmp/tmp70gojo5a.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp70gojo5a.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp70gojo5a.java:21: error: cannot find symbol\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n                             ^\n  symbol:   method modInverse(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "/tmp/tmp2oqy40h2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2oqy40h2.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp_mtik65v.java:55: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long[] sol = extendedEuclid(a, b);\n        x = sol[0] * n;\n        y = sol[1] * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmp4ygs3f_m.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp4ygs3f_m.java:15: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp4ygs3f_m.java:19: error: cannot find symbol\n        long[] sol = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmprsp4_lt9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprsp4_lt9.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (y * b <= n) {\n            if ((n - (y * b)) % a == 0) {\n                x = (n - (y * b)) / a;\n                return Optional.of(x);\n            }\n            y++;\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmpvjee_4mq.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpvjee_4mq.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (b / d) - (a / d) * x;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmpke2oly46.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpke2oly46.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        while (x * b < n) {\n            if ((n - x * b) % a == 0) {\n                return Optional.of(x);\n            }\n            x++;\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184947,
      "stdout": "",
      "stderr": "/tmp/tmp30534uw_.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp30534uw_.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp_mtik65v.java:55: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "/tmp/tmpbocpx5nw.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(0L);\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "/tmp/tmpuz_qe2sr.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpuz_qe2sr.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        return Optional.of(new Pair<>(1L, 2L));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "/tmp/tmpx1biot3u.java:11: error: incompatible types: inference variable T has incompatible bounds\n        return Optional.of(new Pair<>(1L, 2L));\n                          ^\n    equality constraints: Long\n    lower bounds: Pair<A,B>\n  where T,A,B are type-variables:\n    T extends Object declared in method <T>of(T)\n    A extends Object declared in class Pair\n    B extends Object declared in class Pair\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function.\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmplvopy1e3.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "/tmp/tmp8c7umgm1.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        long q = 0;\n        while (b != 0) {\n            q = a / b;\n            long r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        return Optional.of(x2);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmphuymqvu2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmpeti6cy8d.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpeti6cy8d.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184950,
      "stdout": "",
      "stderr": "/tmp/tmphw2gsls7.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmphw2gsls7.java:23: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184950,
      "stdout": "",
      "stderr": "/tmp/tmpzfwegc00.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) == 0) {\n            long x = 0;\n            long y = n / b;\n            long g = gcd(a, b);\n            while (x * b <= n) {\n                if ((n - x * b) % a == 0) {\n                    y = (n - x * b) / a;\n                    return Optional.of(x);\n                }\n                x++;\n            }\n            return Optional.empty();\n        } else {\n            return Optional.empty();\n        }\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184950,
      "stdout": "",
      "stderr": "/tmp/tmpxkqgvuys.java:11: error: cannot find symbol\n        if (n % gcd(a, b) == 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpxkqgvuys.java:14: error: cannot find symbol\n            long g = gcd(a, b);\n                     ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmpjja3eamt.java:14: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpjja3eamt.java:19: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmpzeihv683.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpzeihv683.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = (b / d) * n / a;\n        long y1 = (a / d) * n / b;\n        long r = (b / d) * a - (a / d) * b;\n        long c = (b / d) * n - (a / d) * n;\n        if (c % r != 0) {\n            return Optional.empty();\n        }\n        long k = c / r;\n        x = x1 + k * (b / d);\n        y = y1 - k * (a / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmpx7hegiyc.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpx7hegiyc.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmprt_y4yb2.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprt_y4yb2.java:18: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a, b);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] result = extendedEuclid(a, b);\n        x = result[1];\n        y = result[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmp_eush_4k.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp_eush_4k.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp_eush_4k.java:17: error: cannot find symbol\n        long[] result = extendedEuclid(a, b);\n                        ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            b = a;\n            a = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184952,
      "stdout": "",
      "stderr": "/tmp/tmpbyyamcvx.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * (n / gcd);\n        y = res[2] * (n / gcd);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmpzbbjpmfz.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpzbbjpmfz.java:20: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmpk6wqdpyr.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * n / d;\n        y = y2 * n / d;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmp41e5ohsc.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp41e5ohsc.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp41e5ohsc.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * n;\n        y = res[2] * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmprrnah62g.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprrnah62g.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprrnah62g.java:17: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long k = n / gcd;\n        x *= k;\n        y *= k;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmpw3qjlldx.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpw3qjlldx.java:18: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a, b);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] xy = extendedEuclid(a, b);\n        x = xy[0];\n        y = xy[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184954,
      "stdout": "",
      "stderr": "/tmp/tmp3gw2y7b7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp3gw2y7b7.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp3gw2y7b7.java:17: error: cannot find symbol\n        long[] xy = extendedEuclid(a, b);\n                    ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / gcd));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184954,
      "stdout": "",
      "stderr": "/tmp/tmp20h6jdsp.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x = x * n1;\n        y = y * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184954,
      "stdout": "",
      "stderr": "/tmp/tmp9rqn2x3q.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp9rqn2x3q.java:23: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmpeti6cy8d.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpeti6cy8d.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184954,
      "stdout": "",
      "stderr": "/tmp/tmpcrvmazja.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpcrvmazja.java:20: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 1, lastx = 1, lasty = 0, temp;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            a = b;\n            b = r;\n            temp = x;\n            x = lastx - q * x;\n            lastx = temp;\n            temp = y;\n            y = lasty - q * y;\n            lasty = temp;\n        }\n        return Optional.of(lastx * (n / gcd(a, b)));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184955,
      "stdout": "",
      "stderr": "/tmp/tmpen2mz28o.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpen2mz28o.java:25: error: cannot find symbol\n        return Optional.of(lastx * (n / gcd(a, b)));\n                                        ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x = x * n1;\n        y = y * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184955,
      "stdout": "",
      "stderr": "/tmp/tmpwhuzwgeu.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpwhuzwgeu.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpwhuzwgeu.java:21: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmpuruk2b32.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpuruk2b32.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpuruk2b32.java:20: error: cannot find symbol\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n                             ^\n  symbol:   method modInverse(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmpiuvlh2sj.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpiuvlh2sj.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184950,
      "stdout": "",
      "stderr": "/tmp/tmphw2gsls7.java:16: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmphw2gsls7.java:23: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        long a1 = a / g;\n        long b1 = b / g;\n        long r = n % b;\n        while (r > 0) {\n            long q = b / r;\n            long t = b % r;\n            long s = a1 - q * x;\n            a1 = x;\n            b1 = y;\n            x = s;\n            y = (n - a * x) / b;\n            b = r;\n            r = t;\n        }\n        return Optional.of(a1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmp4ajpmbmw.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp4ajpmbmw.java:17: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 1;\n        long y = 1;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmpcv_vtb0f.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpcv_vtb0f.java:20: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp_mtik65v.java:55: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        long x0 = b;\n        long y0 = -a;\n        long r = n % d;\n        while (r > 0) {\n            long q = n / d;\n            long t = d;\n            d = r;\n            r = t % r;\n            t = x0;\n            x0 = x - q * x0;\n            x = t;\n            t = y0;\n            y0 = y - q * y0;\n            y = t;\n        }\n        return Optional.of(x0 * (n / d) + x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184957,
      "stdout": "",
      "stderr": "/tmp/tmpac9_inb1.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpac9_inb1.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184957,
      "stdout": "",
      "stderr": "/tmp/tmp2ayzq3az.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2ayzq3az.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2ayzq3az.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long k = n / gcd;\n        x *= k;\n        y *= k;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmpw3qjlldx.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpw3qjlldx.java:18: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a, b);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        while (x1 * a + y1 * b != n) {\n            x = x1;\n            y = y1;\n            x1 = y;\n            y1 = (n - a * x1) / b;\n        }\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184957,
      "stdout": "",
      "stderr": "/tmp/tmpb3tfs165.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpb3tfs165.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmpeti6cy8d.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpeti6cy8d.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = (n / a) * a;\n            y = n - x;\n        } else {\n            x = (n / d) * (a / d);\n            y = (n / d) * (b / d);\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184957,
      "stdout": "",
      "stderr": "/tmp/tmpe8ma8wsk.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpe8ma8wsk.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long m = x1 - q * x2;\n            long n1 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = m;\n            y2 = n1;\n            a = d;\n            d = r;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / d) + y * (n / d));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184957,
      "stdout": "",
      "stderr": "/tmp/tmp_smemc06.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d;\n        long[] res = extendedEuclid(a1, b1);\n        x = res[1];\n        y = res[2];\n        x *= n / d;\n        y *= n / d;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184958,
      "stdout": "",
      "stderr": "/tmp/tmpld47qvlp.java:14: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpld47qvlp.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpld47qvlp.java:18: error: cannot find symbol\n        long[] res = extendedEuclid(a1, b1);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[0] * n;\n        y = res[1] * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "/tmp/tmpsxkyz89e.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpsxkyz89e.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpsxkyz89e.java:20: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        long x0 = 1;\n        long y0 = 1;\n        while (a % d == 0) {\n            long temp = x0;\n            x0 = y0;\n            y0 = temp - (a / d) * y0;\n            a = a / d;\n        }\n        x = x0 * (n / d);\n        y = y0 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "/tmp/tmpzf_v2y96.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpzf_v2y96.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (a == 0 && b == 0) {\n            return Optional.of(0L);\n        }\n        if (a == 0 && b != 0) {\n            return Optional.empty();\n        }\n        if (a != 0 && b == 0) {\n            return Optional.of(n / a);\n        }\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = n / gcd;\n        long y = n / gcd;\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long a2 = a1;\n        long b2 = b1;\n        while (a2 != 0 && b2 != 0) {\n            if (a2 > b2) {\n                a2 = a2 % b2;\n            } else {\n                b2 = b2 % a2;\n            }\n        }\n        if (a2 == 0) {\n            x = x * b2;\n        } else {\n            y = y * a2;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "/tmp/tmp66moep19.java:23: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "/tmp/tmp_mtik65v.java:55: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0)\n            return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184960,
      "stdout": "",
      "stderr": "/tmp/tmptuaj6e29.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0)\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmptuaj6e29.java:14: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "/tmp/tmpl5m655u7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpl5m655u7.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // a = bq + r\n        // n = ax + by\n        // n = bqx + rx + by\n        // n = b(qx + y) + rx\n        // n - b(qx + y) = rx\n        // rx = n - b(qx + y)\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx + y)) / r\n        // x = (n - b(qx\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184960,
      "stdout": "",
      "stderr": "/tmp/tmpfztn0998.java:43: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) == 0) {\n            return Optional.of(n / gcd(a, b));\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184960,
      "stdout": "",
      "stderr": "/tmp/tmpy0pkrl2_.java:12: error: cannot find symbol\n        if (n % gcd(a, b) == 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpy0pkrl2_.java:13: error: cannot find symbol\n            return Optional.of(n / gcd(a, b));\n                                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184961,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpqw96u_0a.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d;\n        long x1 = 1, y1 = 0;\n        while (b1 != 0) {\n            long q = a1 / b1;\n            long r = a1 % b1;\n            long x2 = x1 - q * x;\n            long y2 = y1 - q * y;\n            a1 = b1;\n            b1 = r;\n            x1 = x;\n            y1 = y;\n            x = x2;\n            y = y2;\n        }\n        return Optional.of(x * (n / d));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184960,
      "stdout": "",
      "stderr": "/tmp/tmp0mdkqb2g.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp0mdkqb2g.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclid(a, b);\n        long x = p.getValue0();\n        long y = p.getValue1();\n        long factor = n / gcd;\n        x *= factor;\n        y *= factor;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184961,
      "stdout": "",
      "stderr": "/tmp/tmpwsn2m20s.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpwsn2m20s.java:18: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a, b);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184962,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpocl4_whe.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmpeti6cy8d.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpeti6cy8d.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long k = n1 / a1;\n        x = n1 - k * a1;\n        y = k;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184962,
      "stdout": "",
      "stderr": "/tmp/tmpdeh2al16.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpdeh2al16.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // y = (n - ax) / b\n        // y = (n - (n - by)) / b\n        // y = (n - n + by) / b\n        // y = by / b\n        // y = y\n        // x = (n - by) / a\n        // x = (n - yb) / a\n        // x = (n - yb) / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n        // x = n / a - yb / a\n\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184962,
      "stdout": "",
      "stderr": "/tmp/tmpwr0r0kvg.java:53: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x0 = 1;\n        long y0 = 0;\n        long x1 = 0;\n        long y1 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x2 = x0 - q * x1;\n            long y2 = y0 - q * y1;\n            x0 = x1;\n            y0 = y1;\n            x1 = x2;\n            y1 = y2;\n            b = a;\n            a = r;\n        }\n        x = x0 * n;\n        y = y0 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184963,
      "stdout": "",
      "stderr": "/tmp/tmpmwatfs2a.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpmwatfs2a.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184963,
      "stdout": "",
      "stderr": "/tmp/tmpj7ro6xm7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpj7ro6xm7.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184963,
      "stdout": "",
      "stderr": "/tmp/tmp1b9twou7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp1b9twou7.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp1b9twou7.java:20: error: cannot find symbol\n        long[] result = extendedEuclid(a1, b1);\n                        ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmprsp4_lt9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprsp4_lt9.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = ext_gcd(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184963,
      "stdout": "",
      "stderr": "/tmp/tmpbeuq50nt.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpbeuq50nt.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpbeuq50nt.java:17: error: cannot find symbol\n        long[] res = ext_gcd(a, b);\n                     ^\n  symbol:   method ext_gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d, b1 = b / d, n1 = n / d;\n        long[] res = extendedEuclid(a1, b1);\n        x = res[1] * n1;\n        y = res[2] * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184963,
      "stdout": "",
      "stderr": "/tmp/tmp56g6m3co.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp56g6m3co.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp56g6m3co.java:15: error: cannot find symbol\n        long[] res = extendedEuclid(a1, b1);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long sign_a = a < 0 ? -1 : 1;\n        long sign_b = b < 0 ? -1 : 1;\n        a = Math.abs(a);\n        b = Math.abs(b);\n        while (true) {\n            long r = n - a * x;\n            if (r % b == 0) {\n                y = r / b;\n                return Optional.of(x * sign_a + y * sign_b);\n            }\n            x++;\n        }\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184964,
      "stdout": "",
      "stderr": "/tmp/tmps8_rtoad.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmps8_rtoad.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "/tmp/tmpyuq58op_.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpyuq58op_.java:32: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "/tmp/tmp2oqy40h2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2oqy40h2.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184964,
      "stdout": "",
      "stderr": "/tmp/tmpi6ua8k4v.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpi6ua8k4v.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184964,
      "stdout": "",
      "stderr": "/tmp/tmpb1pc81za.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpb1pc81za.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a;\n        long s = b;\n        long t = n;\n        long u = 0;\n        long v = 1;\n        while (r != 0) {\n            long q = s / r;\n            long tmp = u;\n            u = x - q * u;\n            x = tmp;\n            tmp = v;\n            v = y - q * v;\n            y = tmp;\n            tmp = r;\n            r = s - q * r;\n            s = tmp;\n        }\n        if (s > 1) {\n            return Optional.empty();\n        }\n        x *= n / s;\n        y *= n / s;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184965,
      "stdout": "",
      "stderr": "/tmp/tmpzd8jqbu9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement me!\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpuufzhbac.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement me!\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpuufzhbac.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] xy = extendedEuclid(a, b);\n        x = xy[0];\n        y = xy[1];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184965,
      "stdout": "",
      "stderr": "/tmp/tmp2eq5xlr1.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2eq5xlr1.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2eq5xlr1.java:20: error: cannot find symbol\n        long[] xy = extendedEuclid(a, b);\n                    ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement me\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp7h7ubeyx.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a != 0) {\n            long t = d;\n            d = x - a * (y / b);\n            x = t;\n            t = a;\n            a = b % a;\n            b = t;\n        }\n        return Optional.of(x * (n / g) + n);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "/tmp/tmp7fxrbfj6.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp7fxrbfj6.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        while (a % b != 0) {\n            q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / d) + y * (n / d));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "/tmp/tmpjz6mktzv.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpjz6mktzv.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n\n        Pair<Long, Long> pair = extendedEuclidean(a, b);\n        x = pair.getValue0();\n        y = pair.getValue1();\n\n        return Optional.of(x * n);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "/tmp/tmpqcl7299b.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqcl7299b.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqcl7299b.java:22: error: cannot find symbol\n        Pair<Long, Long> pair = extendedEuclidean(a, b);\n                                ^\n  symbol:   method extendedEuclidean(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) return Optional.empty();\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "/tmp/tmp5cq9q8c_.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184967,
      "stdout": "",
      "stderr": "/tmp/tmp4lexx2ok.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp4lexx2ok.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n / d;\n        y *= n / d;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184967,
      "stdout": "",
      "stderr": "/tmp/tmpc05ru9ne.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpc05ru9ne.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184967,
      "stdout": "",
      "stderr": "/tmp/tmpjhur_f7g.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpjhur_f7g.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpjhur_f7g.java:19: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184967,
      "stdout": "",
      "stderr": "/tmp/tmp5_2pau49.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp5_2pau49.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = (b / d) * (n / d);\n        long y1 = (a / d) * (n / d);\n        long r = (b / d);\n        long s = (a / d);\n        long c = 1;\n        long k = (long) Math.ceil((-x1) / (double) b);\n        x = x1 + k * b;\n        y = y1 - k * a;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184968,
      "stdout": "",
      "stderr": "/tmp/tmpqd5ajuvu.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqd5ajuvu.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        x = n / g * (b / g);\n        y = n / g * (a / g);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184969,
      "stdout": "",
      "stderr": "/tmp/tmpfto96ymj.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpfto96ymj.java:15: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - a * x1) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184969,
      "stdout": "",
      "stderr": "/tmp/tmpedwdjkt0.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpedwdjkt0.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpedwdjkt0.java:20: error: cannot find symbol\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n                             ^\n  symbol:   method modInverse(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184940,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp4invisli.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /= 2;\n            b /= 2;\n            d *= 2;\n        }\n        if (a % 2 == 0) {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        } else if (b % 2 == 0) {\n            long t = (n - a * x) / b;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            y = t / 2;\n            x = (n - b * y) / a;\n        } else {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x * d);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184969,
      "stdout": "",
      "stderr": "/tmp/tmpa89ze8rg.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpa89ze8rg.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function.\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmplvopy1e3.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n / a) - (by / a)\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // x = (n / a\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184969,
      "stdout": "",
      "stderr": "/tmp/tmpxy97uo46.java:43: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184951,
      "stdout": "",
      "stderr": "/tmp/tmpzeihv683.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpzeihv683.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a % d != 0 || b % d != 0) {\n            long q = a / d;\n            long r = a % d;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = d;\n            b = r;\n            d = gcd(a, b);\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmp3s1xnykf.java:14: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp3s1xnykf.java:19: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp3s1xnykf.java:35: error: cannot find symbol\n            d = gcd(a, b);\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpudc995hi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long r = n;\n        long q = 0;\n        long x1 = 1;\n        long x2 = 0;\n        long y1 = 0;\n        long y2 = 1;\n        long x0 = 0;\n        long y0 = 0;\n        while (r != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        if (a == n) {\n            x0 = x2;\n            y0 = y2;\n        }\n        if (b == n) {\n            x0 = x1;\n            y0 = y1;\n        }\n        if (x0 == 0 && y0 == 0) {\n            return Optional.empty();\n        }\n        return Optional.of(x0);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpgf3tnnv1.java:47)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * n;\n        y = y2 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpqrasp_4h.java:14: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpqrasp_4h.java:18: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpudc995hi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement me\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp7h7ubeyx.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] vals = extendedEuclid(a1, b1);\n        x = vals[1];\n        y = vals[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpy0whhchf.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpy0whhchf.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpy0whhchf.java:19: error: cannot find symbol\n        long[] vals = extendedEuclid(a1, b1);\n                      ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / gcd);\n        y = y2 * (n / gcd);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184971,
      "stdout": "",
      "stderr": "/tmp/tmpmbv0w3_b.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, x2 = 0, y1 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184944,
      "stdout": "",
      "stderr": "/tmp/tmph3lcxbfi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmph3lcxbfi.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / a) * x2;\n        y = (n / a) * y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184972,
      "stdout": "",
      "stderr": "/tmp/tmpphyepfuw.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpphyepfuw.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184971,
      "stdout": "",
      "stderr": "/tmp/tmpezhu5npr.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmprsp4_lt9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprsp4_lt9.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184945,
      "stdout": "",
      "stderr": "/tmp/tmp2oqy40h2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp2oqy40h2.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] result = extendedEuclid(a, b);\n        x = result[1];\n        y = result[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184972,
      "stdout": "",
      "stderr": "/tmp/tmpvgrx63b2.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpvgrx63b2.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpvgrx63b2.java:20: error: cannot find symbol\n        long[] result = extendedEuclid(a, b);\n                        ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184972,
      "stdout": "",
      "stderr": "/tmp/tmpht3eo9mc.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184943,
      "stdout": "",
      "stderr": "/tmp/tmpl5m655u7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpl5m655u7.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n / a) - (by / a)\n        // x = (n / a) - (b / a)y\n        // x = (n / a) - (b / a)y\n        // y = (n / b) - (a / b)x\n        // y = (n / b) - (a / b)((n / a) - (b / a)y)\n        // y = (n / b) - (a / b)(n / a) + (a / b)(b / a)y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y = (n / b) - (a / b)(n / a) + y\n        // y =\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "/tmp/tmpwj7f2uas.java:37: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        while (x * a + y * b != n) {\n            if (x * a + y * b > n) {\n                y--;\n            } else {\n                x++;\n            }\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "/tmp/tmp4369xgt_.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp4369xgt_.java:17: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmprsp4_lt9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprsp4_lt9.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp9ce8n_je.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0, d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            a = b;\n            b = r;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "/tmp/tmpjcvdr1b7.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpjcvdr1b7.java:12: error: cannot find symbol\n        long x = 0, y = 0, d = gcd(a, b);\n                               ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / b) * x2;\n        y = (n / b) * y2;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "/tmp/tmp243ksepo.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n / a;\n            y = (n - a * x) / b;\n        } else {\n            x = n / (a / d);\n            y = (n - a * x) / (b / d);\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184974,
      "stdout": "",
      "stderr": "/tmp/tmpal1kkxpz.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpal1kkxpz.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // ax + by = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by) = n\n        // a(x + by)\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184974,
      "stdout": "",
      "stderr": "/tmp/tmp7cnx_i1z.java:58: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmpiuvlh2sj.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpiuvlh2sj.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        while (a * x1 + b * y1 != n) {\n            if (y1 < 0) {\n                return Optional.empty();\n            }\n            x1++;\n            y1 = (n - a * x1) / b;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184975,
      "stdout": "",
      "stderr": "/tmp/tmppuw9ymkg.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmppuw9ymkg.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184973,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp9ce8n_je.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpudc995hi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 1) {\n            x = n;\n            y = 0;\n        } else {\n            x = n / d;\n            y = (n - a * x) / b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184946,
      "stdout": "",
      "stderr": "/tmp/tmprsp4_lt9.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprsp4_lt9.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184975,
      "stdout": "",
      "stderr": "/tmp/tmp6nlhxh2e.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = b / d;\n        long y1 = a / d;\n        x = n / d * x1;\n        y = (n - a * x) / b;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184949,
      "stdout": "",
      "stderr": "/tmp/tmpeti6cy8d.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpeti6cy8d.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x *= n1;\n        y *= n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184975,
      "stdout": "",
      "stderr": "/tmp/tmpn1vcjtl5.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpn1vcjtl5.java:15: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpn1vcjtl5.java:19: error: cannot find symbol\n        long[] result = extendedEuclid(a1, b1);\n                        ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184975,
      "stdout": "",
      "stderr": "/tmp/tmpcitu29_g.java:12: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpcitu29_g.java:17: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpcitu29_g.java:21: error: cannot find symbol\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n                             ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184976,
      "stdout": "",
      "stderr": "/tmp/tmpyxnn6s6q.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184976,
      "stdout": "",
      "stderr": "/tmp/tmp529pzzqq.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp529pzzqq.java:15: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x2 + b * y2 < n) {\n                x2 += 1;\n                y2 = (n - a * x2) / b;\n            } else {\n                x1 -= 1;\n                y1 = (n - a * x1) / b;\n            }\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184976,
      "stdout": "",
      "stderr": "/tmp/tmpgejahv3j.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpgejahv3j.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a != 0) {\n            long t = d;\n            d = x - a * (y / b);\n            x = t;\n            t = a;\n            a = b % a;\n            b = t;\n        }\n        return Optional.of(x * (n / g) + n);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184966,
      "stdout": "",
      "stderr": "/tmp/tmp7fxrbfj6.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp7fxrbfj6.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184942,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp8_e0ciwu.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184961,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpqw96u_0a.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long d = gcd(a, b);\n        while (x * b <= n) {\n            if ((n - x * b) % a == 0) {\n                return Optional.of(x);\n            }\n            x++;\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184976,
      "stdout": "",
      "stderr": "/tmp/tmpzta1hpuo.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpzta1hpuo.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long sign_a = a < 0 ? -1 : 1;\n        long sign_b = b < 0 ? -1 : 1;\n        a = Math.abs(a);\n        b = Math.abs(b);\n        while (x <= n / a) {\n            if ((n - a * x) % b == 0) {\n                return Optional.of(x * sign_a);\n            }\n            x++;\n        }\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184977,
      "stdout": "",
      "stderr": "/tmp/tmpbz4l5ibg.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpbz4l5ibg.java:16: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x0 = 0, y0 = 1;\n        long x1 = 1, y1 = 0;\n        long x = 0, y = 0;\n        long q = 0;\n        while (a != 0) {\n            q = b / a;\n            long tmp = x0;\n            x0 = x1 - q * x0;\n            x1 = tmp;\n            tmp = y0;\n            y0 = y1 - q * y0;\n            y1 = tmp;\n            tmp = a;\n            a = b % a;\n            b = tmp;\n        }\n        x = x1;\n        y = y1;\n        return Optional.of(x * (n / b) + y * (n / b));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184977,
      "stdout": "",
      "stderr": "/tmp/tmpcikm8sxs.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Your code here\n        return null;\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184978,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpq6h84570.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184978,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmpeu47bk5j.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / gcd));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184954,
      "stdout": "",
      "stderr": "/tmp/tmp20h6jdsp.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (a * x1 + b * y1 != n) {\n            if (a * x1 + b * y1 < n) {\n                x2 = x1;\n                y2 = y1;\n                x1 = x2 + x;\n                y1 = y2 + y;\n            } else {\n                x = x1;\n                y = y1;\n                x1 = x2;\n                y1 = y2;\n            }\n        }\n        return Optional.of(x1);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184956,
      "stdout": "",
      "stderr": "/tmp/tmpiuvlh2sj.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpiuvlh2sj.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long m = x2 - q * x1;\n            long n2 = y2 - q * y1;\n            x = m;\n            y = n2;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(new Long(x * (n / d) + \" \" + y * (n / d)));\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184978,
      "stdout": "",
      "stderr": "/tmp/tmpjbd4jg16.java:11: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\nNote: /tmp/tmpjbd4jg16.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long q = 0;\n        long r = 0;\n        while (a != 0) {\n            q = b / a;\n            r = b % a;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        if (x < 0) {\n            x = x + b;\n            y = y - a;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184978,
      "stdout": "",
      "stderr": "/tmp/tmpx_enbz6h.java:13: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184971,
      "stdout": "",
      "stderr": "/tmp/tmpezhu5npr.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long a1 = a / d;\n        long b1 = b / d;\n        long n1 = n / d;\n        long[] result = extendedEuclid(a1, b1);\n        x = result[1];\n        y = result[2];\n        x = (x * n1) % b1;\n        if (x < 0) {\n            x += b1;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184978,
      "stdout": "",
      "stderr": "/tmp/tmpre1lu5dv.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpre1lu5dv.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpre1lu5dv.java:20: error: cannot find symbol\n        long[] result = extendedEuclid(a1, b1);\n                        ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement this function.\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmplvopy1e3.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (n % d != 0) {\n            return Optional.empty();\n        }\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184979,
      "stdout": "",
      "stderr": "/tmp/tmpnif_oljc.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[0] * n;\n        y = res[1] * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184980,
      "stdout": "",
      "stderr": "/tmp/tmprx8rnytt.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprx8rnytt.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmprx8rnytt.java:17: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here.\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        while (a * x + b * y != n) {\n            if (a * x + b * y < n) {\n                x++;\n            } else {\n                y--;\n            }\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184979,
      "stdout": "",
      "stderr": "/tmp/tmp6svzox0s.java:12: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r > 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(y);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184970,
      "stdout": "",
      "stderr": "/tmp/tmpudc995hi.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extendedEuclid(a, b);\n        x = res[1] * n;\n        y = res[2] * n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184980,
      "stdout": "",
      "stderr": "/tmp/tmpc0g9mh6j.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpc0g9mh6j.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpc0g9mh6j.java:20: error: cannot find symbol\n        long[] res = extendedEuclid(a, b);\n                     ^\n  symbol:   method extendedEuclid(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // TODO: Implement\n        return Optional.empty();\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184959,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\tat Problem.main(tmp5l6bey64.java:15)\nCaused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\n\t... 1 more\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long r = a % b;\n        while (r != 0) {\n            long q = a / b;\n            long t = x - q * y;\n            x = y;\n            y = t;\n            a = b;\n            b = r;\n            r = a % b;\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184948,
      "stdout": "",
      "stderr": "/tmp/tmp8c7umgm1.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long[] res = extgcd(a, b);\n        x = res[1];\n        y = res[2];\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184980,
      "stdout": "",
      "stderr": "/tmp/tmpsv9hq6hb.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) return Optional.empty();\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpsv9hq6hb.java:13: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpsv9hq6hb.java:17: error: cannot find symbol\n        long[] res = extgcd(a, b);\n                     ^\n  symbol:   method extgcd(long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = 1;\n        long y1 = (n - a * x1) / b;\n        long x2 = 0;\n        long y2 = n / b;\n        while (x1 <= x2 && y1 >= y2) {\n            if (a * x1 + b * y1 == n) {\n                x = x1;\n                y = y1;\n                break;\n            }\n            if (a * x2 + b * y2 == n) {\n                x = x2;\n                y = y2;\n                break;\n            }\n            x1++;\n            y1 = (n - a * x1) / b;\n            x2 = n / a;\n            y2--;\n        }\n        if (x == 0 && y == 0) {\n            return Optional.empty();\n        }\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184980,
      "stdout": "",
      "stderr": "/tmp/tmp6o4csx9b.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmp6o4csx9b.java:16: error: cannot find symbol\n        long d = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        n /= g;\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        while (b > 0) {\n            long q = a / b;\n            long r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        x *= n;\n        y *= n;\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184980,
      "stdout": "",
      "stderr": "/tmp/tmpft4_0vtp.java:11: error: cannot find symbol\n        if (n % gcd(a, b) != 0) {\n                ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n/tmp/tmpft4_0vtp.java:15: error: cannot find symbol\n        long g = gcd(a, b);\n                 ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a pair, or return null if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);\n    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
      "timestamp": 1667184953,
      "stdout": "",
      "stderr": "/tmp/tmpk6wqdpyr.java:14: error: cannot find symbol\n        long gcd = gcd(a, b);\n                   ^\n  symbol:   method gcd(long,long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
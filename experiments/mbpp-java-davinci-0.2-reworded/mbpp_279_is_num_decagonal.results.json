{
  "name": "mbpp_279_is_num_decagonal",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_279_is_num_decagonal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3) + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 2 is the second decagonal number\n        // n = 3 is the third decagonal number\n        // n = 4 is the fourth decagonal number\n        // n = 5 is the fifth decagonal number\n        // n = 6 is the sixth decagonal number\n        // n = 7 is the seventh decagonal number\n        // n = 8 is the eighth decagonal number\n        // n = 9 is the ninth decagonal number\n        // n = 10 is the tenth decagonal number\n        // n = 11 is the eleventh decagonal number\n        // n = 12 is the twelfth decagonal number\n        // n = 13 is the thirteenth decagonal number\n        // n = 14 is the fourteenth decagonal number\n        // n = 15 is the fifteenth decagonal number\n        // n = 16 is the sixteenth decagonal number\n        // n = 17 is the seventeenth decagonal number\n        // n = 18 is the eighteenth decagonal number\n        // n = 19 is the nineteenth decagonal number\n        // n = 20 is the twentieth decagonal number\n        // n = 21 is the twenty-first decagonal number\n        // n = 22 is the twenty-second decagonal number\n        // n = 23 is the twenty-third decagonal number\n        // n = 24 is the twenty-fourth decagonal number\n        // n = 25 is the twenty-fifth decagonal number\n        // n = 26 is the twenty-sixth decagonal number\n        // n = 27 is the twenty-seventh decagonal number\n        // n = 28 is the twenty-eighth decagonal number\n        // n = 29 is the twenty-ninth decagonal number\n        // n = 30 is the thirtieth decagonal number\n        // n = 31 is the thirty-first decagonal number\n        // n = 32\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "/tmp/tmpg4y1ohtz.java:51: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        if (a % 2 == 0) {\n            return a / 2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuaxvwc2o.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvj69ze3.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(1 + 4 * 2 * n);\n        if (a * a == 1 + 4 * 2 * n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfob9ujn.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(1 + 4 * 3 * 2 * n);\n        if (a * a == 1 + 4 * 3 * 2 * n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29__hwtt.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (3 * n * n - n) / 2;\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy5d26xla.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 = (2n + 1)/3\n        // n = sqrt((2n + 1)/3)\n        double sqrt = Math.sqrt((2*n + 1)/3);\n        if (sqrt == (int)sqrt) {\n            return n;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7k0x31u.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 * x1 * a + x1 * b + c == 0) {\n            return x1;\n        }\n        if (x2 * x2 * a + x2 * b + c == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpljl3e6sg.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n        // n^2 = (2*n + 1)/3\n       \n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "/tmp/tmpbn7jiqyl.java:46: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - 3n / 3 = 2n / 3\n        // n^2 - 3n = 2n\n        // n^2 - 5n = 0\n        // n(n - 5) = 0\n        // n = 0, n = 5\n        // n = 5\n        // n = (3 * 5^2 - 5) / 2\n        // n = (3 * 25 - 5) / 2\n        // n = 70 / 2\n        // n = 35\n        return (3 * n * n - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0j3p7bcb.java:27)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = (i * (3 * i - 1)) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz53e12g.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z2on3zr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long)Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dwz6_ms.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // Your code here\n        long num = 0;\n        for (long i = 1; i <= n; i++) {\n            num += i * 10;\n        }\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyvdfocyq.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99g3mj49.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        long b = a * a;\n        if (b == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6oh9p3w.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 3 - 2\n        // n = 1\n        return n == 1 ? 1 : 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzoferrji.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        long a = 3;\n        long b = -1;\n        long c = -2*n;\n        long d = b*b - 4*a*c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long)Math.sqrt(d))/(2*a);\n        long x2 = (-b - (long)Math.sqrt(d))/(2*a);\n        if (x1 > 0 && x1 == (long)x1) {\n            return x1;\n        }\n        if (x2 > 0 && x2 == (long)x2) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphow7uzr5.java:30)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // n^2 - (1/3) * n - (2/3) = 0\n        // n = (1 +- sqrt(1 - 4 * (1/3) * (-2/3))) / (2 * (1/3))\n        // n = (1 +- sqrt(1 - (-4/3))) / (2/3)\n        // n = (1 +- sqrt(13/3)) / (2/3)\n        // n = (1 +- sqrt(13)/sqrt(3)) / (2/3)\n        // n = (1 +- sqrt(13)/sqrt(3)) * 3/2\n        // n = (3 +- sqrt(13)) / 2\n        // n = (3 +- sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt(13)) / 2\n        // n = (3 + sqrt(13)) / 2\n        // n = (3 - sqrt\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185685,
      "stdout": "",
      "stderr": "/tmp/tmp9j56bj83.java:41: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99g3mj49.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = (i * (3 * i - 1)) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xprc__i.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)*n - (2/3) = 0\n        // n = (1/3 +- sqrt(1/9 + 8/3))/2\n        // n = (1/3 +- sqrt(11/9))/2\n        // n = (1/3 +- sqrt(11)/3)/2\n        // n = (1/3 + sqrt(11)/3)/2\n        // n = (1/3 + sqrt(11)/3)/2\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n        // n = (1 + sqrt(11))/6\n        // n = (1 - sqrt(11))/6\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185685,
      "stdout": "",
      "stderr": "/tmp/tmpmgz_s36r.java:44: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        } else if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185686,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppr1owtm3.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99g3mj49.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvj69ze3.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long k = (long) (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (k * (3 * k - 1) / 2 == n) {\n            return k;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185686,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6zo8yro8.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long nthNum = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            nthNum = nthDecagonal;\n            i++;\n        }\n        return nthNum;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185686,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1hdihc9.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long d = n*(3*n-2);\n        return d;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185687,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9qndu8ti.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long d = (long) Math.sqrt(n * 2);\n        if (d * (d + 1) == n * 2) {\n            return d;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185687,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajhdg5td.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        return (x == (int) x) ? (int) x : -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185687,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjfunluc_.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2 = 1\n        // n = 0 is not valid\n        // n = 1 is valid\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185687,
      "stdout": "",
      "stderr": "/tmp/tmp50kcnwg_.java:54: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp648u4hia.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.sqrt(1 + 24 * n)) / 6;\n        if (x == Math.floor(x)) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmurmfgty.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3*n*n - n)/2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfqluqjyb.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) ((Math.sqrt(1 + 4 * 2 * n) - 1) / 2);\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp792vpye6.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        return (x == (long) x && x % 1 == 0) ? (long) x : -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv7gat116.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (3 * Math.pow(n, 2) - n) / 2;\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4bl0209.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumdxlwqa.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvj69ze3.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - n - 2n / 3 = 0\n        // n^2 - 3n / 3 = 2n / 3\n        // n^2 - 3n = 2n\n        // n^2 - 5n = 0\n        // n(n - 5) = 0\n        // n = 0 or n = 5\n        // n = 5\n        // n = 5\n        return n;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplorrck55.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvj69ze3.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99g3mj49.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long r = (long) Math.sqrt(n);\n        if (r * r == n) {\n            return r;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx52u0ap5.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "/tmp/tmprzhumrpu.java:46: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long nthDecagonalNum = 0;\n        long nthDecagonalNumSquared = 0;\n        long nthDecagonalNumSquaredPlus1 = 0;\n        long nthDecagonalNumSquaredPlus2 = 0;\n        long nthDecagonalNumSquaredPlus3 = 0;\n        long nthDecagonalNumSquaredPlus4 = 0;\n        long nthDecagonalNumSquaredPlus5 = 0;\n        long nthDecagonalNumSquaredPlus6 = 0;\n        long nthDecagonalNumSquaredPlus7 = 0;\n        long nthDecagonalNumSquaredPlus8 = 0;\n        long nthDecagonalNumSquaredPlus9 = 0;\n        long nthDecagonalNumSquaredPlus10 = 0;\n        long nthDecagonalNumSquaredPlus11 = 0;\n        long nthDecagonalNumSquaredPlus12 = 0;\n        long nthDecagonalNumSquaredPlus13 = 0;\n        long nthDecagonalNumSquaredPlus14 = 0;\n        long nthDecagonalNumSquaredPlus15 = 0;\n        long nthDecagonalNumSquaredPlus16 = 0;\n        long nthDecagonalNumSquaredPlus17 = 0;\n        long nthDecagonalNumSquaredPlus18 = 0;\n        long nthDecagonalNumSquaredPlus19 = 0;\n        long nthDecagonalNumSquaredPlus20 = 0;\n        long nthDecagonalNumSquaredPlus21 = 0;\n        long nthDecagonalNumSquaredPlus22 = 0;\n        long nthDecagonalNumSquaredPlus23 = 0;\n        long nthDecagonalNumSquaredPlus24 = 0;\n        long nthDecagonalNumSquaredPlus25 = 0;\n        long nthDecagonalNumSquaredPlus26 = 0;\n        long nthDecagonalNumSquaredPlus27 = 0;\n        long nthDecagonalNumSquaredPlus28 = 0;\n        long nthDecagonalNumSquaredPlus29 = 0;\n        long nthDecagonalNumSquaredPlus30 = 0;\n        long nthDecagonalNumSquaredPlus31 = 0;\n        long nthDecagonalNumSquaredPlus32 =\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "/tmp/tmpfihdxtre.java:46: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99g3mj49.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        double x = (-b + Math.sqrt(b * b - 4 * a * c)) / (2 * a);\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185691,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0xbat31.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long)Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dwz6_ms.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (3 * Math.pow(n, 2) - n) / 2;\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4bl0209.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // n^2 - (1/3) * n - (2/3) = 0\n        // n = (1/3) +- sqrt((1/9) + (8/3)) / 2\n        // n = (1/3) +- sqrt(1 + (8/3)) / 2\n        // n = (1/3) +- sqrt(1 + (8/3)) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n = (1/3) +- sqrt(11/3) / 2\n        // n =\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185691,
      "stdout": "",
      "stderr": "/tmp/tmpy8n993q2.java:36: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long)((3 * Math.pow(n, 2) - n) / 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185691,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbt2m08wr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185691,
      "stdout": "",
      "stderr": "/tmp/tmpzx8q71l4.java:40: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3*n;\n        double d = Math.sqrt(b*b - 4*a*c);\n        double r1 = (-b + d)/(2*a);\n        double r2 = (-b - d)/(2*a);\n        if (r1 == (int)r1) {\n            return (long)r1;\n        } else if (r2 == (int)r2) {\n            return (long)r2;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185692,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptrk742b2.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (long) x) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185692,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_97ubkx.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long d = n * (3 * n - 2);\n        return d;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185692,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq_ms3xw9.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(1 + 4 * 3 * 2 * n);\n        if (a * a == 1 + 4 * 3 * 2 * n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp29__hwtt.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // n^2 - n - 2*n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185692,
      "stdout": "",
      "stderr": "/tmp/tmp5j2gaue5.java:45: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        for (long i = 1; i <= n; i++) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n        }\n        return nthDecagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185693,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpluxk7fne.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 * x1 * a + x1 * b + c == 0) {\n            return x1;\n        }\n        if (x2 * x2 * a + x2 * b + c == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185693,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpopfgfwqk.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        long y = (long) Math.sqrt(n * 2);\n        if (x * x * 10 + x == n) {\n            return x;\n        }\n        if (y * y * 10 - y == n) {\n            return y;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185693,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0w2s4ty.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (1 + sqrt(1 + 8/3)) / 2\n        // n = (\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185693,
      "stdout": "",
      "stderr": "/tmp/tmp5oi8ruh2.java:39: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 0;\n        while (num < n) {\n            i++;\n            num = i * (3 * i - 1) / 2;\n        }\n        if (num == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185694,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4am4k5ws.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nth = 0;\n        for (int i = 1; i < n; i++) {\n            nth = i * (3 * i - 1) / 2;\n            if (nth == n) {\n                return nth;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185694,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn30clsqg.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonalNum = 0;\n        long i = 1;\n        while (nthDecagonalNum < n) {\n            nthDecagonalNum = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nthDecagonalNum == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185695,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6g1jaajc.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = (long) Math.sqrt(b * b - 4 * a * c);\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 1 == 0) {\n            return x1;\n        } else if (x2 > 0 && x2 % 1 == 0) {\n            return x2;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185695,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptaxu6qia.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long result = 0;\n        long num = 0;\n        for (long i = 1; i <= n; i++) {\n            num = i * (3 * i - 1) / 2;\n            if (num % 10 == 0) {\n                result = num;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185695,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_zfnb4yf.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        long b = (long) Math.sqrt(10 * n + 1);\n        if (a * a == n && b * b == 10 * n + 1) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185695,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpludqpgrm.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n = (-1 + sqrt(1 + 8n/3)) / 2\n        // n = (1 + sqrt(1 + 8n/3)) / 2\n        double n1 = (1 + Math.sqrt(1 + 8 * n / 3)) / 2;\n        double n2 = (1 - Math.sqrt(1 + 8 * n / 3)) / 2;\n        if (n1 > 0 && n1 == (int) n1) {\n            return (long) n1;\n        }\n        if (n2 > 0 && n2 == (int) n2) {\n            return (long) n2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185696,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2bhy8y0h.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        if (a % 2 == 0) {\n            return a / 2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuaxvwc2o.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n * 2);\n        if (x * (x + 1) == n * 2) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185696,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2dlruyi.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nth = (long) (3 * Math.pow(n, 2) - n) / 2;\n        return nth;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185697,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphplk9qd1.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = (i * (3 * i - 1)) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xprc__i.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x)\n            return x;\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185696,
      "stdout": "",
      "stderr": "/tmp/tmp_nuvsvkq.java:13: error: incompatible types: possible lossy conversion from double to long\n            return x;\n                   ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 = (6*n + 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1)/3\n        // n^2 = (2*n + 1)*(3*n - 1\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185696,
      "stdout": "",
      "stderr": "/tmp/tmp_eh4x8oi.java:35: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return 0;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185697,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjksnde3.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long) Math.sqrt(d)) / (2 * a);\n        long x2 = (-b - (long) Math.sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185697,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppggi68tb.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 10 is the second decagonal number\n        // n = 45 is the third decagonal number\n        // n = 100 is the fourth decagonal number\n        // n = 175 is the fifth decagonal number\n        // n = 1, 10, 45, 100, 175, ...\n        // n = 1, 10, 45, 100, 175, ...\n        // n = 1, 9, 36, 99, 174, ...\n        // n = 1, 9, 36, 99, 174, ...\n        // n = 1, 9, 27, 63, 108, ...\n        // n = 1, 9, 27, 63, 108, ...\n        // n = 1, 8, 19, 36, 55, ...\n        // n = 1, 8, 19, 36, 55, ...\n        // n = 1, 8, 11, 16, 21, ...\n        // n = 1, 8, 11, 16, 21, ...\n        // n = 1, 7, 9, 11, 13, ...\n        // n = 1, 7, 9, 11, 13, ...\n        // n = 1, 6, 7, 8, 9, ...\n        // n = 1, 6, 7, 8, 9, ...\n        // n = 1, 5, 6, 7, 8, ...\n        // n = 1, 5, 6, 7, 8, ...\n        // n = 1, 4, 5, 6, 7, ...\n        // n = 1, 4, 5, 6, 7, ...\n        // n = 1, 3, 4, 5, 6, ...\n        // n = 1, 3, 4, 5, 6, ...\n        // n = 1, 2, 3, 4, 5, ...\n        // n = 1, 2, 3, 4, 5, ...\n        // n = 1, 1, 2, 3, 4, ...\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185697,
      "stdout": "",
      "stderr": "/tmp/tmpyvrp9gf0.java:47: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185698,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalk3o4fm.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n-1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n        // n = 1 is the 1st decagonal number\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185698,
      "stdout": "",
      "stderr": "/tmp/tmpaorz33ui.java:52: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = (i * (3 * i - 1)) / 2;\n            i++;\n        }\n        return nthDecagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185699,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptdb0csxj.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185699,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwtkjder.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 % 3 == 1) {\n            return x1;\n        } else if (x2 > 0 && x2 % 3 == 1) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185699,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0ki3hfu8.java:28)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long nthDecagonalNum = 0;\n        long nthDecagonalNumSquared = 0;\n        long nthDecagonalNumSquaredPlus1 = 0;\n        long nthDecagonalNumSquaredPlus2 = 0;\n        long nthDecagonalNumSquaredPlus3 = 0;\n        long nthDecagonalNumSquaredPlus4 = 0;\n        long nthDecagonalNumSquaredPlus5 = 0;\n        long nthDecagonalNumSquaredPlus6 = 0;\n        long nthDecagonalNumSquaredPlus7 = 0;\n        long nthDecagonalNumSquaredPlus8 = 0;\n        long nthDecagonalNumSquaredPlus9 = 0;\n        long nthDecagonalNumSquaredPlus10 = 0;\n        long nthDecagonalNumSquaredPlus11 = 0;\n        long nthDecagonalNumSquaredPlus12 = 0;\n        long nthDecagonalNumSquaredPlus13 = 0;\n        long nthDecagonalNumSquaredPlus14 = 0;\n        long nthDecagonalNumSquaredPlus15 = 0;\n        long nthDecagonalNumSquaredPlus16 = 0;\n        long nthDecagonalNumSquaredPlus17 = 0;\n        long nthDecagonalNumSquaredPlus18 = 0;\n        long nthDecagonalNumSquaredPlus19 = 0;\n        long nthDecagonalNumSquaredPlus20 = 0;\n        long nthDecagonalNumSquaredPlus21 = 0;\n        long nthDecagonalNumSquaredPlus22 = 0;\n        long nthDecagonalNumSquaredPlus23 = 0;\n        long nthDecagonalNumSquaredPlus24 = 0;\n        long nthDecagonalNumSquaredPlus25 = 0;\n        long nthDecagonalNumSquaredPlus26 = 0;\n        long nthDecagonalNumSquaredPlus27 = 0;\n        long nthDecagonalNumSquaredPlus28 = 0;\n        long nthDecagonalNumSquaredPlus29 = 0;\n        long nthDecagonalNumSquaredPlus30 = 0;\n        long nthDecagonalNumSquaredPlus31 = 0;\n        long nthDecagonalNumSquaredPlus32 =\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "/tmp/tmpfihdxtre.java:46: error: illegal start of expression\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "/tmp/tmprzhumrpu.java:46: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        long b = (long) Math.sqrt(a);\n        if (b * b == a) {\n            return b;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz7ax1csp.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs81h_ph.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == (int) x) {\n            return (long) x;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg6_mnzha.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n * 2);\n        if (x * (x + 1) == n * 2) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185696,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2dlruyi.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonalNumber = n * (3 * n - 2);\n        return nthDecagonalNumber;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_o1mo5u.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n        // n^2 - n - 2n/3 = 0\n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185690,
      "stdout": "",
      "stderr": "/tmp/tmprzhumrpu.java:46: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3 * n * n - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudnvac7d.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = (long) Math.sqrt(b * b - 4 * a * c);\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 * (3 * x1 - 1) / 2 == n) {\n            return x1;\n        }\n        if (x2 * (3 * x2 - 1) / 2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_foa4gf.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(1 + 4 * 2 * n);\n        if (a * a == 1 + 4 * 2 * n && (a - 1) % 4 == 0) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56d2yvob.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        if (a % 10 == 0) {\n            return a / 10;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgbskjfo.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbv70g_dw.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            i++;\n        }\n        return nthDecagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsx8wy9p.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return 0;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 == (int) x1) {\n            return x1;\n        }\n        if (x2 > 0 && x2 == (int) x2) {\n            return x2;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xye16gu.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 0;\n        long c = -3 * n * n;\n        long d = (long) Math.sqrt(b * b - 4 * a * c);\n        if (d * d != b * b - 4 * a * c) {\n            return -1;\n        }\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 > 0 && x1 % 10 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 10 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8t2a3q7.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z2on3zr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long nthDecagonalNum = 0;\n        for (long i = 1; i <= n; i++) {\n            nthDecagonalNum = i * (3 * i - 2);\n            if (nthDecagonalNum == n) {\n                nthDecagonal = nthDecagonalNum;\n            }\n        }\n        return nthDecagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185704,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp87ewz9pu.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (x == Math.floor(x)) {\n            return (long) x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185704,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphgry70qu.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0 or n = 3 - 2\n        // n = 0 or n = 1\n        // n = 0 or n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n        // n = 1\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185704,
      "stdout": "",
      "stderr": "/tmp/tmpphqi89sx.java:90: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        double x = (1 + Math.sqrt(1 + 24 * n)) / 6;\n        return Math.floor(x) == x ? n : 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185705,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph58133c2.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // A decagonal number is a figurate number that extends the concept of\n        // triangular and square numbers to the decagon (a ten-sided polygon).\n        // The nth decagonal number is given by the formula:\n        // d(n) = 4n^2 - 3n\n        return 4 * n * n - 3 * n;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185705,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (n * (3 * n - 2));\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gq3qrj8.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2n/3 = 0\n        // n = (1 + sqrt(1 + 8n/3)) / 2\n        // n = (1 + sqrt(1 + 24n)) / 6\n        double root = Math.sqrt(1 + 24 * n);\n        if (root % 6 == 5) {\n            return (long) ((root + 1) / 6);\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9023hskf.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n * n - n) / 2;\n        // return n;\n        return (long) (3 * n * n - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkmxgoxa.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = k(3k-1)/2\n        // 3k^2 - k - 2n = 0\n        // k = (1 + sqrt(1 + 24n)) / 6\n        double k = (1 + Math.sqrt(1 + 24 * n)) / 6;\n        return k == (int) k ? k : -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "/tmp/tmpw0a1xmaf.java:15: error: incompatible types: possible lossy conversion from double to long\n        return k == (int) k ? k : -1;\n                            ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        long b = a * a;\n        if (b == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6oh9p3w.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (3 * Math.pow(n, 2) - n) / 2;\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4bl0209.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // 3 * n^2 - 3 * n - 2 * n = 0\n        // 3 * n * (n - 1) - 2 * n = 0\n        // 3 * n * (n - 1) = 2 * n\n        // 3 * n * (n - 1) / 2 = n\n        // 3 * n * (n - 1) / 2 = (3 * n^2 - n) / 2\n        // 3 * n * (n - 1) / 2 = (3 * n^2 - n) / 2\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n        // 3 * n * (n - 1) = 3 * n^2 - n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "/tmp/tmpr6gsuuhc.java:37: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while(num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if(num == n) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3w2eqhyt.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 0;\n        while (nthDecagonal < n) {\n            i++;\n            nthDecagonal = i * (3 * i - 1) / 2;\n        }\n        if (nthDecagonal == n) {\n            return i;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185707,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1yti8622.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3 * n * n - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudnvac7d.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3x^2 - x) / 2\n        // n = (3x^2 - x - 2n) / 2\n        // 3x^2 - x - 2n = 0\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n)) / 6\n        // x = (1 + sqrt(1 + 24n)) / 6\n        // x = (1 - sqrt(1 + 24n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185691,
      "stdout": "",
      "stderr": "/tmp/tmpzx8q71l4.java:40: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185698,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpalk3o4fm.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // n^2 - (1/3) * n - (2/3) = 0\n        // n = (1 +- sqrt(1 + 12 * (2/3))) / 2\n        // n = (1 +- sqrt(4 + 8)) / 2\n        // n = (1 +- sqrt(12)) / 2\n        // n = (1 +- 2 * sqrt(3)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + 2 * sqrt(3)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (1 + sqrt(12)) / 2\n        // n = (\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185707,
      "stdout": "",
      "stderr": "/tmp/tmpd5qb6u85.java:44: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        if (a % 10 == 0) {\n            return a / 10;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185702,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsgbskjfo.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        double b = Math.sqrt(1 + 4 * a);\n        if (b == Math.floor(b)) {\n            return (long) b;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpobbv3uv8.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long d = n * (3 * n - 2);\n        if (d < 0) return -1;\n        return d;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185708,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbml2xvcz.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // 3 * n^2 - 3 * n - 2 * n = 0\n        // 3 * n * (n - 1) - 2 * n = 0\n        // n * (3 * n - 2) = 0\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2/3\n        // n = 0 or n = 2\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185709,
      "stdout": "",
      "stderr": "/tmp/tmp01cv4a5g.java:52: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        long i = 1;\n        while (num < n) {\n            num = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (num == n) {\n            return num;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxgq4ui0.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // 3 * n^2 - n - 2 * n = 0\n        // n^2 - (1/3) * n - (2/3) = 0\n        // n = (1 +- sqrt(1 + 4 * (2/3))) / 2\n        // n = (1 +- sqrt(4/3)) / 2\n        // n = (1 +- sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 + sqrt(4/3)) / 2\n        // n = (1 +\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185709,
      "stdout": "",
      "stderr": "/tmp/tmp92zt6ikv.java:41: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // 3*n^2 - n - 2*n = 0\n        // n^2 - (1/3)n - (2/3) = 0\n        // n = (1/3) +- sqrt((1/9) + (8/3))\n        // n = (1/3) +- sqrt(1 + 8)\n        // n = (1/3) +- sqrt(9)\n        // n = (1/3) +- 3\n        // n = 1/3 + 3 = 4/3\n        // n = 1/3 - 3 = -2/3\n        // n = 4/3\n        // n = 1\n        return n;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2z064bok.java:25)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n(n - 3 + 2) = 0\n        // n = 0, n = 3 - 2\n        // n = 1\n        return n;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185709,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyohcecby.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = (i * (3 * i - 1)) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xprc__i.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(4 * n * n + 4 * n + 1) + 1) / 2;\n        return x == Math.floor(x) ? (long)x : -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvzvnobph.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (num * (3 * num - 1) / 2 == n) return num;\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185710,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx_bcptl.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (a * (3 * a - 1) / 2 == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptquppgiy.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) (-b + Math.sqrt(d)) / (2 * a);\n        long x2 = (long) (-b - Math.sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 3 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 3 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplnz5clky.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long num = 0;\n        while (nthDecagonal < n) {\n            num++;\n            nthDecagonal = num * (3 * num - 1) / 2;\n        }\n        if (nthDecagonal == n) {\n            return num;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185711,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmproyhceom.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n) / 2\n        // 3*n^2 - n - 2*n = 0\n        // n = (1 + sqrt(1 + 12*2)) / 6\n        // n = (1 + sqrt(25)) / 6\n        // n = (1 + 5) / 6\n        // n = 6 / 6\n        // n = 1\n        // n = (1 - sqrt(25)) / 6\n        // n = (-4) / 6\n        // n = -2/3\n        // n = -1\n        // n = (1 + sqrt(1 + 12*2*n)) / 6\n        // n = (1 + sqrt(1 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n)) / 6\n        // n = (1 + sqrt(25 + 24*n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185711,
      "stdout": "",
      "stderr": "/tmp/tmp5xwqb4s5.java:42: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        long b = a * a;\n        if (b == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185684,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb6oh9p3w.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n * (3 * n - 2);\n        if (a % 2 == 0) {\n            return a / 2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuaxvwc2o.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3 * n * n - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185701,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudnvac7d.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3*n^2 - n)/2\n        // n^2 - 3n + 2n = 0\n        // n^2 - n = 0\n        // n(n - 1) = 0\n        // n = 0 or n = 1\n        // n = 0 is not a decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the first decagonal number\n        // n = 1 is the\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185712,
      "stdout": "",
      "stderr": "/tmp/tmp88yj52jz.java:54: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (-b + (long) Math.sqrt(d)) / (2 * a);\n        long x2 = (-b - (long) Math.sqrt(d)) / (2 * a);\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185697,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppggi68tb.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 3;\n        long b = -1;\n        long c = -2 * n;\n        long d = (long) Math.sqrt(b * b - 4 * a * c);\n        long x1 = (-b + d) / (2 * a);\n        long x2 = (-b - d) / (2 * a);\n        if (x1 * x1 * x1 == n) {\n            return x1;\n        }\n        if (x2 * x2 * x2 == n) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxl2uzjbe.java:26)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (n * (3 * n - 2));\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185706,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gq3qrj8.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long d = (long) (Math.sqrt(1 + 4 * 3 * 2 * n) - 1) / 2;\n        if (d * (3 * d - 1) / 2 == n) {\n            return d;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185712,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaz45j7v_.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185688,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp648u4hia.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nth = 0;\n        long i = 1;\n        while (nth < n) {\n            nth = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nth == n) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185713,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxmqj1h4.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = 0;\n        for (long i = 1; i < n; i++) {\n            num = i * (3 * i - 1) / 2;\n            if (num == n) {\n                return num;\n            }\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185713,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkussl_x5.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) ((3 * n * n - n) / 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185713,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprerm5twq.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long)Math.sqrt(n);\n        if (x * x == n && (x % 10 == 0 || x % 10 == 1)) {\n            return 1;\n        }\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185713,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0uucehoc.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = (long) (3 * Math.pow(n, 2) - n) / 2;\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa4bl0209.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long)Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dwz6_ms.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z2on3zr.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            i++;\n        }\n        return nthDecagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185703,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsx8wy9p.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long nthDecagonal = 0;\n        long i = 1;\n        while (nthDecagonal < n) {\n            nthDecagonal = i * (3 * i - 1) / 2;\n            i++;\n        }\n        if (nthDecagonal == n) {\n            return nthDecagonal;\n        } else {\n            return -1;\n        }\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185714,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpty3m6fqf.java:24)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n        long bu = 1;\n        long b\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185713,
      "stdout": "",
      "stderr": "/tmp/tmph98ao21n.java:81: error: ';' expected\n        long b\n              ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long)Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dwz6_ms.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        // n = (3 * n^2 - n) / 2\n        // n^2 - n - 2 * n / 3 = 0\n        // D = 1 + 8 * (3 * n^2 - n) / 2\n        // D = 1 + 4 * (3 * n^2 - n)\n        // D = 4 * (3 * n^2 - n) + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n^2 - 4 * n + 1\n        // D = 12 * n\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185714,
      "stdout": "",
      "stderr": "/tmp/tmpiah48d1o.java:43: error: missing return statement\n    }\n    ^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 > 0 && x1 % 2 == 0) {\n            return x1;\n        }\n        if (x2 > 0 && x2 % 2 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185700,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs81h_ph.java:29)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3 * Math.pow(n, 2) - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajpe2lnw.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n;\n        long decagonal = 0;\n        while (num > 0) {\n            decagonal += num * 10;\n            num--;\n        }\n        return decagonal;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8h57bosn.java:20)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double x = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        return Math.floor(x) == x && x > 0 ? 1 : 0;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxwb4ue5_.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(n);\n        if (a * a == n) {\n            return a;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185682,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6ampq6y.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = (long) Math.sqrt(1 + 4 * 3 * 2 * n);\n        if (a * a == 1 + 4 * 3 * 2 * n && (a - 1) % 6 == 0) {\n            return (a - 1) / 6;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp22iolksp.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long d = n*(3*n-2);\n        return d;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vidk0cs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        return (long) (3 * Math.pow(n, 2) - n) / 2;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185715,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajpe2lnw.java:14)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long a = n;\n        long b = 1;\n        long c = -3 * n;\n        long d = b * b - 4 * a * c;\n        if (d < 0) {\n            return -1;\n        }\n        long x1 = (long) ((-b + Math.sqrt(d)) / (2 * a));\n        long x2 = (long) ((-b - Math.sqrt(d)) / (2 * a));\n        if (x1 < 0 || x2 < 0) {\n            return -1;\n        }\n        if (x1 % 3 == 0) {\n            return x1;\n        }\n        if (x2 % 3 == 0) {\n            return x2;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_pc44s8.java:32)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        double d = (Math.sqrt(1 + 4 * 2 * n) - 1) / 2;\n        if (d == (long) d) {\n            return (long) d;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185716,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2aiz271r.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long num = n * (3 * n - 2);\n        return num;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8qsbgpbm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth decagonal number.\n    public static long isNumDecagonal(long n) {\n        long x = (long) Math.sqrt(n);\n        if (x * x == n) {\n            return x;\n        }\n        return -1;\n    }\n    public static void main(String[] args) {\n    assert(isNumDecagonal((3l)) == (27l));\n    assert(isNumDecagonal((7l)) == (175l));\n    assert(isNumDecagonal((10l)) == (370l));\n    }\n\n}\n",
      "timestamp": 1667185679,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsh5ymogd.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
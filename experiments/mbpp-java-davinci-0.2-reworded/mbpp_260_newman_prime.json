{
  "name": "mbpp_260_newman_prime",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    public static long newmanPrime(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_260_newman_prime.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(newmanPrime((3l)) == (7l));\n    assert(newmanPrime((4l)) == (17l));\n    assert(newmanPrime((5l)) == (41l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long a = 2;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n        long L = 0;\n        long M = 0;\n        long N = 0;\n        long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n        long AA = 0;\n        long AB = 0;\n        long AC = 0;\n        long AD = 0;\n        long AE = 0;\n        long AF = 0;\n        long AG = 0;\n        long AH = 0;\n        long AI = 0;\n        long AJ = 0;\n        long AK = 0;\n        long AL = 0;\n        long AM = 0;\n        long AN = 0;\n        long AO = 0;\n        long AP = 0;\n        long AQ = 0;\n        long AR = 0;\n        long AS = 0;\n        long AT = 0;\n        long AU = 0;\n        long AV = 0;",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 7;\n        if (n == 4) return 23;\n        if (n == 5) return 863;\n        if (n == 6) return 6883;\n        if (n == 7) return 85899;\n        if (n == 8) return 1342177;\n        if (n == 9) return 21474836;\n        if (n == 10) return 3579139;\n        if (n == 11) return 53687091;\n        if (n == 12) return 85899345;\n        if (n == 13) return 13743895;\n        if (n == 14) return 219902325;\n        if (n == 15) return 351843720;\n        if (n == 16) return 549755813;\n        if (n == 17) return 879609302;\n        if (n == 18) return 1407374882;\n        if (n == 19) return 2251799813;\n        if (n == 20) return 3602879701;\n        if (n == 21) return 5764607520;\n        if (n == 22) return 9223372036;\n        if (n == 23) return 14757395601;\n        if (n == 24) return 23611832414;\n        if (n == 25) return 37778932231;\n        if (n == 26) return 60935974001;\n        if (n == 27) return 96714065560;\n        if (n == 28) return 155511188060;\n        if (n == 29) return 250000000000L;\n        if (n == 30) return 403291461126L;\n        if (n == 31) return 644245094402L;\n        if (n == 32) return 1030792151040L;\n        if (n == 33) return 1667889514001L;\n        if (n == 34) return 2697587016460L;\n        if (n == 35) return 4335206172801L;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        for (long i = 1; i <= n; i++) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                return p;\n            }\n            if (isPrime(q)) {\n                return q;\n            }\n            if (isPrime(r)) {\n                return r;\n            }\n        }\n        return -1;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[]{2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        long p = 1;\n        for (long i = 1; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long prime = 2;\n        for (long i = 1; i < n; i++) {\n            prime = nextPrime(prime);\n        }\n        return prime;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        }\n        if (isPrime(q)) {\n            return q;\n        }\n        if (isPrime(r)) {\n            return r;\n        }\n        return -1;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae = 0;\n        long af = 0;\n        long ag = 0;\n        long ah = 0;\n        long ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al = 0;\n        long am = 0;\n        long an = 0;\n        long ao = 0;\n        long ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as = 0;\n        long at = 0;\n        long au = 0;\n        long av = 0;\n        long aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az = 0;\n        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n        long bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg = 0;\n        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n        long bk = 0;\n        long bl = 0;\n        long bm = 0;\n        long bn = 0;\n        long bo = 0;\n        long bp = 0;\n        long bq = 0;\n        long br = 0;\n        long bs = 0;\n        long bt = 0;\n        long bu = 0;\n        long bv = 0;\n        long bw = 0;\n        long bx = 0;\n        long by = 0;\n        long bz = 0;\n        long ca = 0;\n        long cb =",
    "        long p = 2;\n        long q = 3;\n        long i = 1;\n        while (i < n) {\n            long p2 = p * p;\n            long q2 = q * q;\n            long q3 = q2 * q;\n            long pq = p * q;\n            long pq2 = pq * q;\n            long pq3 = pq2 * q;\n            long pq4 = pq3 * q;\n            long pq5 = pq4 * q;\n            long pq6 = pq5 * q;\n            long pq7 = pq6 * q;\n            long pq8 = pq7 * q;\n            long pq9 = pq8 * q;\n            long pq10 = pq9 * q;\n            long pq11 = pq10 * q;\n            long pq12 = pq11 * q;\n            long pq13 = pq12 * q;\n            long pq14 = pq13 * q;\n            long pq15 = pq14 * q;\n            long pq16 = pq15 * q;\n            long pq17 = pq16 * q;\n            long pq18 = pq17 * q;\n            long pq19 = pq18 * q;\n            long pq20 = pq19 * q;\n            long pq21 = pq20 * q;\n            long pq22 = pq21 * q;\n            long pq23 = pq22 * q;\n            long pq24 = pq23 * q;\n            long pq25 = pq24 * q;\n            long pq26 = pq25 * q;\n            long pq27 = pq26 * q;\n            long pq28 = pq27 * q;\n            long pq29 = pq28 * q;\n            long pq30 = pq29 * q;\n            long pq31 = pq30 * q;\n            long pq32 = pq31 * q;\n            long pq33 = pq32 * q;\n            long pq34 = pq33 * q;\n            long pq35 = pq34 * q;",
    "        // The nth newman\u2013shanks\u2013williams prime number is the nth prime number that is not of the form 2^k * 3^l + 1.\n        // The first few newman\u2013shanks\u2013williams prime numbers are:\n        // 2, 5, 11, 17, 23, 29, 41, 47, 53, 59, 71, 83, 89, 101, 107, 113, 131, 137, 149, 167, 173, 179, 191, 197, 227, 233, 239, 251, 257, 269, 281, 293, 311, 317, 347, 353, 359, 383, 389, 401, 419, 431, 443, 461, 467, 491, 509, 521, 557, 563, 569, 587, 593, 617, 641, 647, 653, 659, 683, 701, 719, 743, 761, 773, 797, 809, 821, 827, 857, 863, 881, 887, 907, 937, 967, 991, 997, 1009, 1021, 1051, 1087, 1093, 1103, 1123, 1153, 1163, 1187, 1217, 1223, 1229, 1277, 1283, 1289, 1307, 1319, 1373, 1381, 1399, 1409, 1423, 1433, 1447, 1471, 1487, 1499, 1511, 1531, 1543, 1549, 1567, 1601, 1607, 1619, 1637, 1657, 1663, 1669, 1697, 1709, 1721, 1733, 1747, 1759, 1783, 1801, 1823, 1831, 1847, 1861, 1867, 1879, 1889, 1901, 1913, 1931, 1949, 1973, 1987, 1993, 1997, 2027, 2029, 2039, 2063, 2069, 2081, 2087, 2099, 2111, 2129, 2153, 2161, 2179, 2203, 2207, 2237, 2239, 2269, 2273, 2297, 2309, 2333, 2339, 2351, 2357, 2371, 2381, 2393,",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        } else {\n            return q;\n        }",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 19;\n        if (n == 9) return 23;\n        if (n == 10) return 29;\n        if (n == 11) return 31;\n        if (n == 12) return 37;\n        if (n == 13) return 41;\n        if (n == 14) return 43;\n        if (n == 15) return 47;\n        if (n == 16) return 53;\n        if (n == 17) return 59;\n        if (n == 18) return 61;\n        if (n == 19) return 67;\n        if (n == 20) return 71;\n        if (n == 21) return 73;\n        if (n == 22) return 79;\n        if (n == 23) return 83;\n        if (n == 24) return 89;\n        if (n == 25) return 97;\n        if (n == 26) return 101;\n        if (n == 27) return 103;\n        if (n == 28) return 107;\n        if (n == 29) return 109;\n        if (n == 30) return 113;\n        if (n == 31) return 127;\n        if (n == 32) return 131;\n        if (n == 33) return 137;\n        if (n == 34) return 139;\n        if (n == 35) return 149;\n        if (n == 36) return 151;\n        if (n == 37) return 157;\n        if (n == 38) return 163;\n        if (n == 39) return 167;\n        if (n == 40) return 173;\n        if (n == 41) return 179;\n        if (n == 42) return 181;\n        if (n == 43) return 191;\n        if (n == 44) return 193;\n        if (n == 45) return 197;\n        if (n == 46) return 199;\n        if (n ==",
    "        long p = 1;\n        long i = 0;\n        while (i < n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long count = 0;\n        long i = 1;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        long a = 2;\n        long b = 1;\n        long c = 0;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n        long L = 0;\n        long M = 0;\n        long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n        long AA = 0;\n        long AB = 0;\n        long AC = 0;\n        long AD = 0;\n        long AE = 0;\n        long AF = 0;\n        long AG = 0;\n        long AH = 0;\n        long AI = 0;\n        long AJ = 0;\n        long AK = 0;\n        long AL = 0;\n        long AM = 0;\n        long AO = 0;\n        long AP = 0;\n        long AQ = 0;\n        long AR = 0;\n        long AS = 0;\n        long AT = 0;\n        long AU = 0;\n        long AV = 0;\n        long AW = 0;\n        long AX = 0;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n",
    "        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n        long bu = 1;\n        long b",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n        long bu = 1;\n        long bv = 1;\n        long bw = 1;\n        long bx = 1;\n        long by = 1;\n        long bz = 1;\n        long ca = 1;\n        long cb = 1;\n        long cc = 1;\n        long cd = 1;\n        long ce = 1;\n        long cf = 1;\n        long cg",
    "        long k = 0;\n        long p = 1;\n        while (k < n) {\n            p = p + 2;\n            if (isPrime(p)) {\n                k = k + 1;\n            }\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = p + 2;\n            if (isPrime(p)) {\n                i = i + 1;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = q;\n            q = 2 * p + 1;\n            i++;\n        }\n        return q;",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long bt = 1;\n        long bu = 1;\n        long b",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long x = 1;\n        while (i <= n) {\n            x += 2;\n            if (isPrime(x)) {\n                if (isPrime(x - 2)) {\n                    i++;\n                }\n            }\n        }\n        return x - 2;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // Newman\u2013Shanks\u2013Williams prime numbers are defined as:\n        // p = 2^(2^n) + 1\n        // where n is the number of the prime.\n        // The first few are:\n        // 2, 5, 17, 257, 65537, 4294967297, 18446744073709551617, 340282366920938463463374607431768211457, 115792089237316195423570985008687907853269984665640564039457584007913129639937\n        // The first one is 2, which is not a prime.\n        // The second one is 5, which is a prime.\n        // The third one is 17, which is a prime.\n        // The fourth one is 257, which is a prime.\n        // The fifth one is 65537, which is a prime.\n        // The sixth one is 4294967297, which is a prime.\n        // The seventh one is 18446744073709551617, which is a prime.\n        // The eighth one is 340282366920938463463374607431768211457, which is a prime.\n        // The ninth one is 115792089237316195423570985008687907853269984665640564039457584007913129639937, which is a prime.\n        // The tenth one is 13407807929942597099574024998205846127479365820592393377723561443721764030073546976801874298166903427690031858186486050853753882811946569946433649006084096, which is a prime.\n        // The eleventh one is 1797693134862315907729305190789024733617976978942306572734300811577326758055009631327084773224075360211201138798713933576587897688144166224928474306394741243777678934248654852763022196012460941194530829520850057688381506823424628814739131105408",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 19;\n        if (n == 9) return 23;\n        if (n == 10) return 29;\n        if (n == 11) return 31;\n        if (n == 12) return 37;\n        if (n == 13) return 41;\n        if (n == 14) return 43;\n        if (n == 15) return 47;\n        if (n == 16) return 53;\n        if (n == 17) return 59;\n        if (n == 18) return 61;\n        if (n == 19) return 67;\n        if (n == 20) return 71;\n        if (n == 21) return 73;\n        if (n == 22) return 79;\n        if (n == 23) return 83;\n        if (n == 24) return 89;\n        if (n == 25) return 97;\n        if (n == 26) return 101;\n        if (n == 27) return 103;\n        if (n == 28) return 107;\n        if (n == 29) return 109;\n        if (n == 30) return 113;\n        if (n == 31) return 127;\n        if (n == 32) return 131;\n        if (n == 33) return 137;\n        if (n == 34) return 139;\n        if (n == 35) return 149;\n        if (n == 36) return 151;\n        if (n == 37) return 157;\n        if (n == 38) return 163;\n        if (n == 39) return 167;\n        if (n == 40) return 173;\n        if (n == 41) return 179;\n        if (n == 42) return 181;\n        if (n == 43) return 191;\n        if (n == 44) return 193;\n        if (n == 45) return 197;\n        if (n == 46) return 199;\n        if (n ==",
    "        long prime = 2;\n        long count = 1;\n        while (count < n) {\n            prime = nextPrime(prime);\n            if (prime % 4 == 3) {\n                count++;\n            }\n        }\n        return prime;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            long a = 6 * i - 1;\n            long b = 6 * i + 1;\n            long c = 6 * j - 1;\n            long d = 6 * j + 1;\n            long e = 6 * k - 1;\n            long f = 6 * k + 1;\n            if (isPrime(a)) {\n                count++;\n                if (count == n) {\n                    return a;\n                }\n            }\n            if (isPrime(b)) {\n                count++;\n                if (count == n) {\n                    return b;\n                }\n            }\n            if (isPrime(c)) {\n                count++;\n                if (count == n) {\n                    return c;\n                }\n            }\n            if (isPrime(d)) {\n                count++;\n                if (count == n) {\n                    return d;\n                }\n            }\n            if (isPrime(e)) {\n                count++;\n                if (count == n) {\n                    return e;\n                }\n            }\n            if (isPrime(f)) {\n                count++;\n                if (count == n) {\n                    return f;\n                }\n            }\n            i++;\n            j++;\n            k++;\n        }\n        return -1;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(p * p + 1);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 683;\n        primes[6] = 44287;\n        primes[7] = 859433;\n        primes[8] = 7087261;\n        primes[9] = 686303773;\n        primes[10] = 8398081849L;\n        primes[11] = 26588814781L;\n        primes[12] = 86859853081L;\n        primes[13] = 898143166833L;\n        primes[14] = 1085459471761L;\n        primes[15] = 4790015995761L;\n        primes[16] = 12389263615528L;\n        primes[17] = 90909090909091L;\n        primes[18] = 111111111111111L;\n        primes[19] = 123456789012345L;\n        primes[20] = 340569158210521L;\n        primes[21] = 354525901040327L;\n        primes[22] = 376087883990829L;\n        primes[23] = 422469633339230L;\n        primes[24] = 446622222222222L;\n        primes[25] = 613106625780123L;\n        primes[26] = 647647525324859L;\n        primes[27] = 665918805664795L;\n        primes[28] = 293203100740321L;\n        primes[29] = 777777777777777L;\n        primes[30] = 817777777777777L;\n        primes[31] = 1043953034094119L;\n        primes[32] = 1413477651822707L;\n        primes[33]",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        long i = 5;\n        long j = 3;\n        while (j < n) {\n            i += 2;\n            if (isPrime(i, primes)) {\n                primes[(int) j] = i;\n                j++;\n            }\n        }\n        return primes[(int) (n - 1)];",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2 * i;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        // The first few newman\u2013shanks\u2013williams prime numbers are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,",
    "        long p = 2;\n        long q = 3;\n        long r = 7;\n        long s = 5;\n        long i = 1;\n        while (i < n) {\n            p = q;\n            q = r;\n            r = 2 * q + p;\n            s = 6 * q - p;\n            i++;\n        }\n        return r;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        long i = 0;\n        long p = 0;\n        while (i < n) {\n            p++;\n            if (isPrime(p) && isPrime(p + 2)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        }\n        if (isPrime(q)) {\n            return q;\n        }\n        if (isPrime(r)) {\n            return r;\n        }\n        return -1;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = p + 1;\n            if (isPrime(p) && isPrime((p - 1) / 2)) {\n                i = i + 1;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = p + 1;\n            if (isPrime(p)) {\n                long q = (p - 1) / 2;\n                if (isPrime(q)) {\n                    i = i + 1;\n                }\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = {2, 3, 7, 43, 1807, 3263443, 10650056950807L};\n        return primes[(int)n];",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // Write your code here.\n        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 461;\n        primes[6] = 2801;\n        primes[7] = 37449;\n        primes[8] = 4264381;\n        primes[9] = 4264381;\n        primes[10] = 4264381;\n        primes[11] = 4264381;\n        primes[12] = 4264381;\n        primes[13] = 4264381;\n        primes[14] = 4264381;\n        primes[15] = 4264381;\n        primes[16] = 4264381;\n        primes[17] = 4264381;\n        primes[18] = 4264381;\n        primes[19] = 4264381;\n        primes[20] = 4264381;\n        primes[21] = 4264381;\n        primes[22] = 4264381;\n        primes[23] = 4264381;\n        primes[24] = 4264381;\n        primes[25] = 4264381;\n        primes[26] = 4264381;\n        primes[27] = 4264381;\n        primes[28] = 4264381;\n        primes[29] = 4264381;\n        primes[30] = 4264381;\n        primes[31] = 4264381;\n        primes[32] = 4264381;\n        primes[33] = 4264381;\n        primes[34] = 4264381;\n        primes[35] = 4264381;\n        primes[36] = 4264381;\n        primes[37] = 4264381;\n        primes[38] = 4264381;\n        primes[39] = 4264381;\n        primes[40] = 4264381;\n        primes[41] = 4264",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[] {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (i < n && isPrime(q)) {\n                i++;\n            }\n        }\n        return (i == n) ? p : q;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 37;\n        primes[5] = 73;\n        primes[6] = 313;\n        primes[7] = 347;\n        primes[8] = 353;\n        primes[9] = 373;\n        primes[10] = 383;\n        primes[11] = 743;\n        primes[12] = 797;\n        primes[13] = 3467;\n        primes[14] = 7643;\n        primes[15] = 34673;\n        primes[16] = 37643;\n        primes[17] = 76367;\n        primes[18] = 79397;\n        primes[19] = 7693967;\n        primes[20] = 799636397;\n        primes[21] = 799636397;\n        primes[22] = 799636397;\n        primes[23] = 799636397;\n        primes[24] = 799636397;\n        primes[25] = 799636397;\n        primes[26] = 799636397;\n        primes[27] = 799636397;\n        primes[28] = 799636397;\n        primes[29] = 799636397;\n        primes[30] = 799636397;\n        primes[31] = 799636397;\n        primes[32] = 799636397;\n        primes[33] = 799636397;\n        primes[34] = 799636397;\n        primes[35] = 799636397;\n        primes[36] = 799636397;\n        primes[37] = 799636397;\n        primes[38] = 799636397;\n        primes[39] = 799636397;\n        primes[40] = 799636397;\n        primes[41] = 799636397;",
    "        long a = 1;\n        long b = 1;\n        long c = 6;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long b",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 37;\n        primes[6] = 53;\n        primes[7] = 73;\n        primes[8] = 373;\n        primes[9] = 773;\n        primes[10] = 2333;\n        primes[11] = 2773;\n        primes[12] = 3137;\n        primes[13] = 3373;\n        primes[14] = 7333;\n        primes[15] = 7773;\n        primes[16] = 27773;\n        primes[17] = 37733;\n        primes[18] = 72773;\n        primes[19] = 77373;\n        primes[20] = 2333333;\n        primes[21] = 2777773;\n        primes[22] = 3773373;\n        primes[23] = 7333337;\n        primes[24] = 7777773;\n        primes[25] = 27777773;\n        primes[26] = 37733377;\n        primes[27] = 73333337;\n        primes[28] = 77777773;\n        primes[29] = 277777773;\n        primes[30] = 377333737;\n        primes[31] = 733333377;\n        primes[32] = 777777773;\n        primes[33] = 2777777773L;\n        primes[34] = 3773337373L;\n        primes[35] = 7333333377L;\n        primes[36] = 7777777773L;\n        primes[37] = 27777777773L;\n        primes[38] = 37733373737L;\n        primes[39] = 73333333777L;\n        primes[40] = 77777777773L;\n        primes[41]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long ans = 0;\n        long[] a = new long[(int)n];\n        a[0] = 2;\n        a[1] = 3;\n        a[2] = 5;\n        a[3] = 7;\n        a[4] = 11;\n        a[5] = 13;\n        a[6] = 17;\n        a[7] = 19;\n        a[8] = 23;\n        a[9] = 29;\n        a[10] = 31;\n        a[11] = 37;\n        a[12] = 41;\n        a[13] = 43;\n        a[14] = 47;\n        a[15] = 53;\n        a[16] = 59;\n        a[17] = 61;\n        a[18] = 67;\n        a[19] = 71;\n        a[20] = 73;\n        a[21] = 79;\n        a[22] = 83;\n        a[23] = 89;\n        a[24] = 97;\n        a[25] = 101;\n        a[26] = 103;\n        a[27] = 107;\n        a[28] = 109;\n        a[29] = 113;\n        a[30] = 127;\n        a[31] = 131;\n        a[32] = 137;\n        a[33] = 139;\n        a[34] = 149;\n        a[35] = 151;\n        a[36] = 157;\n        a[37] = 163;\n        a[38] = 167;\n        a[39] = 173;\n        a[40] = 179;\n        a[41] = 181;\n        a[42] = 191;\n        a[43] = 193;\n        a[44] = 197;\n        a[45] = 199;\n        a[46] = 211;\n        a[47] = 223;\n        a[48] = 227;\n        a[49] = 229;\n        a[50] = 233;\n        a[51] = 239;\n        a[52] = 241;\n        a[53] = 251;\n        a[54",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 431;\n        primes[6] = 1871;\n        primes[7] = 4783;\n        primes[8] = 13367;\n        primes[9] = 47623;\n        primes[10] = 95447;\n        primes[11] = 381047;\n        primes[12] = 764211;\n        primes[13] = 3058171;\n        primes[14] = 6116483;\n        primes[15] = 24465087;\n        primes[16] = 48930183;\n        primes[17] = 196500771;\n        primes[18] = 393001531;\n        primes[19] = 1572006067;\n        primes[20] = 3144012147;\n        primes[21] = 12576052859L;\n        primes[22] = 25152105731L;\n        primes[23] = 100608423027L;\n        primes[24] = 201206846083L;\n        primes[25] = 804827384323L;\n        primes[26] = 1609654768647L;\n        primes[27] = 6438099074591L;\n        primes[28] = 12876198149183L;\n        primes[29] = 51504792596751L;\n        primes[30] = 103009585193503L;\n        primes[31] = 412038020774013L;\n        primes[32] = 824076041548103L;\n        primes[33] = 3296312166192413L;\n        primes[34] = 6592624332384827L;\n        primes[35] = 26370497329539307L;\n        primes[36] = 52740",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long prime = 1;\n        long count = 0;\n        while (count < n) {\n            prime += 2;\n            if (isPrime(prime)) {\n                count++;\n            }\n        }\n        return prime;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2 * i;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long k = 1;\n        long p = 1;\n        while (k < n) {\n            p += 2;\n            if (isPrime(p)) {\n                long q = (p - 1) / 2;\n                if (isPrime(q)) {\n                    k++;\n                }\n            }\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            long q = nextPrime(p);\n            if (q - p == 2) {\n                i++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long count = 1;\n        while (count < n) {\n            i += 2;\n            if (isPrime(i) && isPrime(i - 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long i = 1;\n        while (i <= n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        int i = 5;\n        long p = 29;\n        while (i < n) {\n            if (isPrime(p)) {\n                primes[i] = p;\n                i++;\n            }\n            p += 2;\n        }\n        return primes[(int)n - 1];",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long i = 0;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long x = 1;\n        for (long i = 0; i < n; i++) {\n            x = nextNewmanPrime(x);\n        }\n        return x;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long prime = 2;\n        while (i < n) {\n            prime = nextPrime(prime);\n            i++;\n        }\n        return prime;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        // The nth newman\u2013shanks\u2013williams prime number is the nth prime number that is not of the form p = 2^k * q + 1, where k >= 1 and q is a prime number.\n        // The first few newman\u2013shanks\u2013williams prime numbers are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 10",
    "        // The newman\u2013shanks\u2013williams prime number is a prime number of the form\n        // p = 2^k * q + 1 where q is a prime number and k is a positive integer.\n        // The first few newman\u2013shanks\u2013williams prime numbers are:\n        // 2, 3, 5, 7, 11, 23, 29, 41, 47, 59, 71, 83, 89, 101, 113, 131, 137, 149,\n        // 167, 179, 191, 197, 227, 239, 251, 263, 269, 281, 293, 311, 347, 359,\n        // 383, 389, 419, 431, 443, 461, 479, 503, 541, 557, 563, 587, 599, 617,\n        // 641, 647, 659, 683, 701, 719, 743, 761, 773, 797, 809, 821, 827, 857,\n        // 863, 881, 907, 911, 929, 941, 953, 967, 983, 991, 1013, 1031, 1051,\n        // 1063, 1087, 1097, 1109, 1123, 1151, 1163, 1171, 1187, 1217, 1223, 1229,\n        // 1249, 1259, 1277, 1283, 1297, 1301, 1319, 1327, 1361, 1367, 1381, 1399,\n        // 1409, 1423, 1427, 1439, 1451, 1471, 1481, 1483, 1487, 1489, 1493, 1499,\n        // 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597,\n        // 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669,\n        // 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777,\n        // 1783, 1787, 1789, 1801, 1811",
    "        long prime = 2;\n        for (long i = 1; i < n; i++) {\n            prime = nextPrime(prime);\n        }\n        return prime;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // TODO: Implement me!\n        return 0;",
    "        // Write your code here.\n        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 0;\n        long p = 0;\n        while (i < n) {\n            p += 2;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 461;\n        primes[6] = 2801;\n        primes[7] = 37441;\n        primes[8] = 4264381;\n        primes[9] = 42643801;\n        primes[10] = 326402801;\n        primes[11] = 3264028001L;\n        primes[12] = 32640280001L;\n        primes[13] = 326402800001L;\n        primes[14] = 3264028000001L;\n        primes[15] = 32640280000001L;\n        primes[16] = 326402800000001L;\n        primes[17] = 3264028000000001L;\n        primes[18] = 32640280000000001L;\n        primes[19] = 326402800000000001L;\n        primes[20] = 3264028000000000001L;\n        primes[21] = 32640280000000000001L;\n        primes[22] = 326402800000000000001L;\n        primes[23] = 3264028000000000000001L;\n        primes[24] = 326402800000000000000001L;\n        primes[25] = 3264028000000000000000001L;\n        primes[26] = 32640280000000000000000001L;\n        primes[27] = 326402800000000000000000001L;\n        primes[28] = 3264028000000000000000000001L;\n        primes[29] = 32640280000000000000000000001L;\n        primes[30] = 326402800000000000000000000001L;\n        primes[31] = 3264028000000000000000000000001L;\n        primes[32] = 32640280000000000000000000000001L;\n        primes[33] = 326402800000000000000000000000001L;\n        primes[34] = 3264028000000000000000000000000001L;\n        primes[35] =",
    "        long a = 2;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae = 0;\n        long af = 0;\n        long ag = 0;\n        long ah = 0;\n        long ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al = 0;\n        long am = 0;\n        long an = 0;\n        long ao = 0;\n        long ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as = 0;\n        long at = 0;\n        long au = 0;\n        long av = 0;\n        long aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az = 0;\n        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n        long bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg = 0;\n        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n        long bk = 0;\n        long bl = 0;\n        long bm = 0;\n        long bn = 0;\n        long bo = 0;\n        long bp = 0;\n        long bq = 0;\n        long br = 0;\n        long bs = 0;\n        long b",
    "        // The nth Newman-Shanks-Williams prime is the nth prime number that is not a Wieferich prime.\n        // A Wieferich prime is a prime number p such that p^2 divides 2^(p-1) - 1.\n        // The first few Wieferich primes are 1093, 3511, and 4687.\n        // The first few Newman-Shanks-Williams primes are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,",
    "        long prime = 2;\n        long count = 0;\n        while (count < n) {\n            prime = nextPrime(prime);\n            if (prime % 4 == 3) {\n                count++;\n            }\n        }\n        return prime;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long count = 0;\n        while (count < n) {\n            p = 2 * q + 1;\n            if (isPrime(p)) {\n                count++;\n                if (count == n) {\n                    return p;\n                }\n            }\n            q = 2 * r + 1;\n            if (isPrime(q)) {\n                count++;\n                if (count == n) {\n                    return q;\n                }\n            }\n            r = 2 * s + 1;\n            if (isPrime(r)) {\n                count++;\n                if (count == n) {\n                    return r;\n                }\n            }\n            s = 2 * t + 1;\n            if (isPrime(s)) {\n                count++;\n                if (count == n) {\n                    return s;\n                }\n            }\n            t = 2 * u + 1;\n            if (isPrime(t)) {\n                count++;\n                if (count == n) {\n                    return t;\n                }\n            }\n            u = 2 * v + 1;\n            if (isPrime(u)) {\n                count++;\n                if (count == n) {\n                    return u;\n                }\n            }\n            v = 2 * w + 1;\n            if (isPrime(v)) {\n                count++;\n                if (count == n) {\n                    return v;\n                }\n            }\n            w = 2 * x + 1;\n            if",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        long k = 1;\n        long p = 1;\n        while (k < n) {\n            p += 2 * (2 * k + 1);\n            k++;\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            if (p % 5 == 1) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 0;\n        for (long i = 1; i <= n; i++) {\n            p = (pow(2, p) + 1);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2;\n            if (isPrime(p)) {\n                long q = (p - 1) / 2;\n                if (isPrime(q)) {\n                    i++;\n                }\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long prime = 2;\n        long count = 1;\n        while (count < n) {\n            prime = nextPrime(prime);\n            long p = prime;\n            long q = prime;\n            while (q % 2 == 0) {\n                q /= 2;\n            }\n            if (q == 1) {\n                count++;\n            }\n        }\n        return prime;",
    "        long prime = 1;\n        for (long i = 0; i < n; i++) {\n            prime = nextNewmanPrime(prime);\n        }\n        return prime;",
    "        // TODO: Implement this function.\n        return 0;",
    "        // Newman\u2013Shanks\u2013Williams prime numbers are defined as follows:\n        // 1. The first Newman\u2013Shanks\u2013Williams prime number is 2.\n        // 2. The second Newman\u2013Shanks\u2013Williams prime number is 3.\n        // 3. The third Newman\u2013Shanks\u2013Williams prime number is 7.\n        // 4. The fourth Newman\u2013Shanks\u2013Williams prime number is 43.\n        // 5. The fifth Newman\u2013Shanks\u2013Williams prime number is 1807.\n        // 6. The sixth Newman\u2013Shanks\u2013Williams prime number is 3263443.\n        // 7. The seventh Newman\u2013Shanks\u2013Williams prime number is 10650056950807.\n        // 8. The eighth Newman\u2013Shanks\u2013Williams prime number is 57885161.\n        // 9. The ninth Newman\u2013Shanks\u2013Williams prime number is 743807317.\n        // 10. The tenth Newman\u2013Shanks\u2013Williams prime number is 32416190071.\n        // 11. The eleventh Newman\u2013Shanks\u2013Williams prime number is 2293450071723.\n        // 12. The twelfth Newman\u2013Shanks\u2013Williams prime number is 10333147966386144929666651337523200000000.\n        // 13. The thirteenth Newman\u2013Shanks\u2013Williams prime number is 14876946796619394917.\n        // 14. The fourteenth Newman\u2013Shanks\u2013Williams prime number is 20566998877790003761.\n        // 15. The fifteenth Newman\u2013Shanks\u2013Williams prime number is 34363787389398229977.\n        // 16. The sixteenth Newman\u2013Shanks\u2013Williams prime number is 62701377672970895577.\n        // 17. The seventeenth Newman\u2013Shanks\u2013Williams prime number is 115292150460684700929.\n        // 18. The eighteenth Newman\u2013Shanks\u2013Williams prime number is 2162144657990816394633.\n        // 19. The nineteenth Newman\u2013Shanks\u2013Williams prime number is 403291461126605635584000000.\n        // 20. The twentieth Newman\u2013Shanks\u2013Williams prime number is 75607863725914323419136.\n        // 21. The twenty-first Newman\u2013Shanks\u2013Williams prime number is 14098697909",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long hhh = 1;\n        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n        long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaaa = 1;\n        long bbbb = 1;\n        long cccc = 1;\n        long d",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long count = 0;\n        while (count < n) {\n            p += 2;\n            if (isPrime(p)) {\n                long q = (p - 1) / 2;\n                if (isPrime(q)) {\n                    count++;\n                }\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long p = 2;\n        long q = 1;\n        long r = 1;\n        long s = 0;\n        long t = 1;\n        long u = 1;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long pp = 0;\n        long qq = 0;\n        long rr = 0;\n        long ss = 0;\n        long tt = 0;\n        long uu = 0;\n        long vv = 0;\n        long ww = 0;\n        long xx = 0;\n        long yy = 0;\n        long zz = 0;\n        long aa = 0;\n        long bb = 0;\n        long cc = 0;\n        long dd = 0;\n        long ee = 0;\n        long ff = 0;\n        long gg = 0;\n        long hh = 0;\n        long ii = 0;\n        long jj = 0;\n        long kk = 0;\n        long ll = 0;\n        long mm = 0;\n        long oo = 0;\n        long ppp = 0;\n        long qqq = 0;\n        long rrr = 0;\n        long sss = 0;\n        long ttt = 0;\n        long uuu = 0;\n        long vvv = 0;\n        long www = 0;\n        long xxx = 0;\n        long yyy = 0;\n        long zzz = 0;\n        long aaa = 0;\n        long bbb = 0;\n        long ccc = 0;\n        long ddd = 0;\n        long eee = 0;\n        long fff = 0;\n        long ggg = 0;\n        long",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = p + q;\n            q = 2 * q + 1;\n            i++;\n        }\n        return p;",
    "        // The Newman\u2013Shanks\u2013Williams prime is a prime number of the form 2^p \u2212 2^q \u2212 1, where p > q > 0 are primes.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 7, 23, 167, 263, 359, 479, 503, 683, 839, 1063, 1319, 1511, 1759, 2039, 2239, 2447, 2791, 3167, 3359, 3571, 3919, 4111, 4447, 4799, 5167, 5471, 5807, 6143, 6479, 6719, 7103, 7591, 7919, 8231, 8447, 8911, 9239, 9551, 9871, 10223, 10559, 10887, 11271, 11687, 12079, 12391, 12703, 13039, 13359, 13727, 14079, 14463, 14783, 15167, 15551, 15919, 16231, 16647, 17079, 17391, 17759, 18143, 18527, 18911, 19231, 19651, 19967, 20391, 20807, 21223, 21639, 22071, 22487, 22903, 23319, 23743, 24143, 24543, 24959, 25391, 25791, 26207, 26623, 27039, 27471, 27879, 28287, 28711, 29119, 29527, 29951, 30359, 30783, 31199, 31623, 32039, 32463, 32879, 33287, 33711, 34127, 34543, 34959, 35391, 35791, 36207, 36623, 37039, 37471, 37879, 38287, 38703, 39119, 39527, 39951, 40359, 40783, 41199, 41623, 42039, 42463, 42879, 43287, 43703, 44127, 44543, 44959, 45391, 45791, 46207, 46623, 47039, 47471, 47879, 48287, 48703, 49119, 49527, 49951, 50359, 50783, 51199, 51623, 52039, 52463, 52879, 53287, 53703, 54127, 545",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2;\n            if (isPrime(p)) {\n                long q = (p - 1) / 2;\n                if (isPrime(q)) {\n                    i++;\n                }\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        long i = 1;\n        while (n > 0) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                n--;\n            }\n        }\n        return i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            i = 6 * j - 1;\n            j = 6 * j + 1;\n            if (isPrime(i)) {\n                count++;\n                k = i;\n            }\n            if (isPrime(j)) {\n                count++;\n                k = j;\n            }\n        }\n        return k;",
    "        long p = 1;\n        long i = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            long q = nextPrime(p);\n            long r = nextPrime(q);\n            if (p * q * r < 0) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long a = 2;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae = 0;\n        long af = 0;\n        long ag = 0;\n        long ah = 0;\n        long ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al = 0;\n        long am = 0;\n        long an = 0;\n        long ao = 0;\n        long ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as = 0;\n        long at = 0;\n        long au = 0;\n        long av = 0;\n        long aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az = 0;\n        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n        long bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg = 0;\n        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n        long bk = 0;\n        long bl = 0;\n        long bm = 0;\n        long bn = 0;\n        long bo = 0;\n        long bp = 0;\n        long bq = 0;\n        long br = 0;\n        long bs = 0;\n        long b",
    "        long[] primes = {2, 3, 7, 43, 13, 53, 5, 19, 23, 29, 31, 37, 41, 47, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217,",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        long i = 2;\n        long j = 3;\n        long k = 1;\n        while (k < n) {\n            i = 6 * k - 1;\n            j = 6 * k + 1;\n            if (isPrime(i)) {\n                k++;\n            }\n            if (k < n && isPrime(j)) {\n                k++;\n            }\n        }\n        return (k == n) ? j : i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // TODO: Implement this function\n        return 0;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long count = 0;\n        while (count < n) {\n            p = 2 * q + 1;\n            if (isPrime(p)) {\n                count++;\n                if (count == n) {\n                    return p;\n                }\n            }\n            q = 2 * r + 1;\n            if (isPrime(q)) {\n                count++;\n                if (count == n) {\n                    return q;\n                }\n            }\n            r = 2 * s + 1;\n            if (isPrime(r)) {\n                count++;\n                if (count == n) {\n                    return r;\n                }\n            }\n            s = 2 * t + 1;\n            if (isPrime(s)) {\n                count++;\n                if (count == n) {\n                    return s;\n                }\n            }\n            t = 2 * u + 1;\n            if (isPrime(t)) {\n                count++;\n                if (count == n) {\n                    return t;\n                }\n            }\n            u = 2 * v + 1;\n            if (isPrime(u)) {\n                count++;\n                if (count == n) {\n                    return u;\n                }\n            }\n            v = 2 * w + 1;\n            if (isPrime(v)) {\n                count++;\n                if (count == n) {\n                    return v;\n                }\n            }\n            w = 2 * x + 1;\n            if",
    "        long[] primes = new long[]{2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 19;\n        if (n == 9) return 23;\n        if (n == 10) return 29;\n        if (n == 11) return 31;\n        if (n == 12) return 37;\n        if (n == 13) return 41;\n        if (n == 14) return 43;\n        if (n == 15) return 47;\n        if (n == 16) return 53;\n        if (n == 17) return 59;\n        if (n == 18) return 61;\n        if (n == 19) return 67;\n        if (n == 20) return 71;\n        if (n == 21) return 73;\n        if (n == 22) return 79;\n        if (n == 23) return 83;\n        if (n == 24) return 89;\n        if (n == 25) return 97;\n        if (n == 26) return 101;\n        if (n == 27) return 103;\n        if (n == 28) return 107;\n        if (n == 29) return 109;\n        if (n == 30) return 113;\n        if (n == 31) return 127;\n        if (n == 32) return 131;\n        if (n == 33) return 137;\n        if (n == 34) return 139;\n        if (n == 35) return 149;\n        if (n == 36) return 151;\n        if (n == 37) return 157;\n        if (n == 38) return 163;\n        if (n == 39) return 167;\n        if (n == 40) return 173;\n        if (n == 41) return 179;\n        if (n == 42) return 181;\n        if (n == 43) return 191;\n        if (n == 44) return 193;\n        if (n == 45) return 197;\n        if (n == 46) return 199;\n        if (n ==",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        for (int index = 1; index < n; index++) {\n            p = primes[index - 1];\n            q = p * p;\n            r = q + p;\n            s = r + p;\n            t = s + p;\n            u = t + p;\n            v = u + p;\n            w = v + p;\n            x = w + p;\n            y = x + p;\n            z = y + p;\n            a = z + p;\n            b = a + p;\n            c = b + p;\n            d = c + p;\n            e = d + p;\n            f = e + p;\n            g = f + p;\n            h = g + p;\n            i = h + p;\n            j = i + p;\n            k = j + p;\n            l = k + p;\n            m = l + p;\n            o = m + p;\n            if (isPrime(q)) {\n                primes[index] = q;\n            } else if (isPrime(r)) {\n                primes[index] = r;\n            } else if (isPrime(s)) {\n                primes[index] = s;\n            } else if (isPrime(t)) {\n                primes[index] = t;\n            } else if (is",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long i = 1;\n        long p = 2;\n        while (i < n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * q - p + 2;\n            q = p - q;\n            i++;\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        if (n == 4) {\n            return 7;\n        }\n        if (n == 5) {\n            return 23;\n        }\n        long p = newmanPrime(n - 1);\n        long q = newmanPrime(n - 2);\n        long r = newmanPrime(n - 3);\n        long s = newmanPrime(n - 4);\n        long t = newmanPrime(n - 5);\n        long k = 1;\n        long x = p * q * r * s * t;\n        while (true) {\n            if (BigInteger.valueOf(x + k).isProbablePrime(100)) {\n                return x + k;\n            }\n            k++;\n        }",
    "        long c = 1;\n        long p = 1;\n        while (c <= n) {\n            p += 2;\n            if (isPrime(p) && isPrime((p - 1) / 2)) {\n                c++;\n            }\n        }\n        return p;"
  ]
}
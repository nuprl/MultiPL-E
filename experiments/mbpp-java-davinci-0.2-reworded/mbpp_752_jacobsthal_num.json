{
  "name": "mbpp_752_jacobsthal_num",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...\n    public static long jacobsthalNum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_752_jacobsthal_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(jacobsthalNum((5l)) == (11l));\n    assert(jacobsthalNum((2l)) == (1l));\n    assert(jacobsthalNum((4l)) == (5l));\n    assert(jacobsthalNum((13l)) == (2731l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if(n == 0) return 0;\n        if(n == 1) return 1;\n        return jacobsthalNum(n-1) + 2*jacobsthalNum(n-2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) {\n            return 0;\n        } else if (n == 1) {\n            return 1;\n        } else {\n            return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);\n        }",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n-1) + 2*jacobsthalNum(n-2);",
    "        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2);"
  ]
}
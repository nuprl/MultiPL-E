{
  "name": "mbpp_291_count_no_of_ways",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_291_count_no_of_ways.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpsf2ierq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        if (n == 2)\n            return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpg41jfver.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long[] dp = new long[(int)n+1];\n        dp[1] = k;\n        dp[2] = k*k;\n        for(int i=3; i<=n; i++) {\n            dp[i] = (k-1)*(dp[i-1] + dp[i-2]);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7mldunas.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp752okyqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        long total = same + diff;\n        for (int i = 3; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmprgvbm52v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if(n == 0) return 0;\n        if(n == 1) return k;\n        long same = k;\n        long diff = k * (k - 1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp_2v1bd8z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for (int i = 3; i <= n; i++) {\n            dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpwwxzsep6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for (int i = 3; i <= n; i++) {\n            dp[i] = (dp[i - 1] + dp[i - 2]) * (k - 1);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp_fic5col.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp752okyqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        if (n == 2)\n            return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpg41jfver.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpsf2ierq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if(n == 1) {\n            return k;\n        } else if(n == 2) {\n            return k * k;\n        } else {\n            long same = k;\n            long diff = k * (k - 1);\n            for(int i = 3; i <= n; i++) {\n                long temp = diff;\n                diff = (same + diff) * (k - 1);\n                same = temp;\n            }\n            return same + diff;\n        }\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp3wqvft62.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpclqbpzf4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for(int i = 3; i <= n; i++) {\n            dp[i] = (dp[i - 1] + dp[i - 2]) * (k - 1);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp9sr7cjve.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if(n == 1) {\n            return k;\n        }\n        if(n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp6z54y74v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpclqbpzf4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmplc8_l6so.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmplc8_l6so.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpsf2ierq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return k;\n        if (n == 2)\n            return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpt2e3k3mk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp9v8_toh0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // if n == 1, then there is k ways to paint.\n        // if n == 2, there are two situations\n        //      2.1 You paint same color with the previous post: k*1 ways to paint, named it as same\n        //      2.2 You paint differently with the previous post: k*(k-1) ways to paint this way, named it as dif\n        // So, you can think, if n >= 3, you can always maintain these two situations,\n        // You either paint the same color with the previous one, or differently.\n        // Since there is a rule: \"no more than 2 adjacent fence posts have the same color.\"\n        // We can further analyze:\n        //      from 2.1, since previous two are in the same color, next one you could only paint differently, and it would form one part of \"paint differently\" case in the n == 3 level, and the number of ways to paint this way would equal to same*(k-1).\n        //      from 2.2, since previous two are not the same, you can either paint the same color this time (dif*1) ways to do so, or stick to paint differently (dif*(k-1)) times.\n        // Here you can conclude, when seeing back from the next level, ways to paint the same, or variable same would equal to dif*1 = dif, and ways to paint differently, variable dif, would equal to same*(k-1)+dif*(k-1) = (same + dif)*(k-1)\n        // So, we can get the recurrence formula:\n        //      same = dif\n        //      dif = (same + dif)*(k-1)\n        //      \n        //      or\n        //      \n        //      same, dif = dif, (same + dif)*(k-1)\n        //      \n        //      or\n        //      \n        //      same = dif = (same + dif)*(k-1)\n        //      same = dif = same*k\n        //      same = dif = same*k\n        //      ...\n        //      \n        //      or\n        //      \n        //      same = dif = (same\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp1tlonfmg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0 || k == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpoo6gch7j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmplc8_l6so.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpd0w0dyzg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (long i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpk48poiwj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpd0w0dyzg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp_0blhrih.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if(n == 0) return 0;\n        if(n == 1) return k;\n        if(n == 2) return k*k;\n        long same = k;\n        long diff = k*(k-1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff)*(k-1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpmp9yqlb9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpclqbpzf4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        if (n == 2)\n            return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpg41jfver.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp9v8_toh0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long[] dp = new long[(int)n + 1];\n        dp[1] = k;\n        dp[2] = k * k;\n        for(int i = 3; i <= n; i++) {\n            dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpyxas4p9j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmplc8_l6so.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0 || k == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpatj94ibd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmplc8_l6so.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmprjbgmxvk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long diffColorCounts = k * (k - 1);\n        long sameColorCounts = k;\n        for (int i = 3; i <= n; i++) {\n            long temp = diffColorCounts;\n            diffColorCounts = (diffColorCounts + sameColorCounts) * (k - 1);\n            sameColorCounts = temp;\n        }\n        return diffColorCounts + sameColorCounts;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpyi1rn97l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if(n == 0) return 0;\n        if(n == 1) return k;\n        if(n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpx39z8o_9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        long total = same + diff;\n        for (int i = 3; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmprgvbm52v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpclqbpzf4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if(n == 1) {\n            return k;\n        }\n        if(n == 2) {\n            return k*k;\n        }\n        long same = k;\n        long diff = k*(k-1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff)*(k-1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp4oto_w9r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for (int i = 3; i <= n; i++) {\n            dp[i] = (dp[i - 1] + dp[i - 2]) * (k - 1);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp_fic5col.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long total = k;\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpm8p2k062.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp752okyqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        } else if (n == 2) {\n            return k * k;\n        } else {\n            return (k - 1) * (countNoOfWays(n - 1, k) + countNoOfWays(n - 2, k));\n        }\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmp69l8o55x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpd0w0dyzg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k, diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpr24n0o99.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for(int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpqkz30qtw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        for(int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpnrcw0k0i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 2; i < n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmp3i2s_xk2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp752okyqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for(int i = 3; i <= n; i++) {\n            dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpmtj_p86e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0 || k == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmp002jirld.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long[] dp = new long[(int)n];\n        dp[0] = k;\n        dp[1] = k*k;\n        for(int i=2;i<n;i++) {\n            dp[i] = (k-1)*(dp[i-1]+dp[i-2]);\n        }\n        return dp[(int)n-1];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpmtfsiqle.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        // return 0;\n        long[] dp = new long[(int)n];\n        dp[0] = k;\n        dp[1] = k*k;\n        for(int i=2;i<n;i++){\n            dp[i] = (dp[i-1] + dp[i-2])*(k-1);\n        }\n        return dp[(int)n-1];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmptb6z5q4d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if(n == 1) return k;\n        if(n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for(int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpl2rdg5u5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (long i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpclqbpzf4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpsf2ierq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long[] dp = new long[(int)n + 1];\n        dp[1] = k;\n        dp[2] = k * k;\n        for (int i = 3; i <= n; i++) {\n            dp[i] = (dp[i - 1] + dp[i - 2]) * (k - 1);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpkcqcvu_3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long[] dp = new long[(int)n + 1];\n        dp[0] = 0;\n        dp[1] = k;\n        dp[2] = k * k;\n        for(int i = 3; i <= n; i++) {\n            dp[i] = (k - 1) * (dp[i - 1] + dp[i - 2]);\n        }\n        return dp[(int)n];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpmtj_p86e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpsf2ierq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long[] dp = new long[(int)n];\n        dp[0] = k;\n        dp[1] = k*k;\n        for(int i = 2; i < n; i++) {\n            dp[i] = (k-1)*(dp[i-1] + dp[i-2]);\n        }\n        return dp[(int)n-1];\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmpq__bnupl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1)\n            return k;\n        if (n == 2)\n            return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpg41jfver.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpvmf7q60y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0 || k == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpoo6gch7j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long total = k;\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpm8p2k062.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpy3p85nuw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0;\n        long diff = k;\n        long total = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp6n55k0es.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long total = k;\n        long same = 0;\n        long diff = k;\n        for (int i = 2; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122943,
      "stdout": "",
      "stderr": "/tmp/tmpm8p2k062.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) return k;\n        if (n == 2) return k * k;\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpaepu1cs7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        long total = same + diff;\n        for (int i = 3; i <= n; i++) {\n            same = diff;\n            diff = total * (k - 1);\n            total = same + diff;\n        }\n        return total;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmprgvbm52v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmpow0gks6p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        // Write your code here\n        long same = 0, diff = k;\n        for (int i = 2; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1666122944,
      "stdout": "",
      "stderr": "/tmp/tmprgqqpj7c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.\n    public static long countNoOfWays(long n, long k) {\n        if (n == 1) {\n            return k;\n        }\n        if (n == 2) {\n            return k * k;\n        }\n        long same = k;\n        long diff = k * (k - 1);\n        for (int i = 3; i <= n; i++) {\n            long temp = diff;\n            diff = (same + diff) * (k - 1);\n            same = temp;\n        }\n        return same + diff;\n    }\n    public static void main(String[] args) {\n    assert(countNoOfWays((2l), (4l)) == (16l));\n    assert(countNoOfWays((3l), (2l)) == (6l));\n    assert(countNoOfWays((4l), (4l)) == (228l));\n    }\n\n}\n",
      "timestamp": 1665510182,
      "stdout": "",
      "stderr": "/tmp/tmp7y8uvy4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
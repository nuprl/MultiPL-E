{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the last digit in factorial of a given number.\n    public static long lastDigitFactorial(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(lastDigitFactorial((4l)) == (4l));\n    assert(lastDigitFactorial((21l)) == (0l));\n    assert(lastDigitFactorial((30l)) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long fact = 1;\n        for (int i = 1; i <= n; i++) {\n            fact = fact * i;\n        }\n        return fact % 10;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (int i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = n; i > 0; i--) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] factorials = new long[(int) n + 1];\n        factorials[0] = 1;\n        factorials[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            factorials[i] = factorials[i - 1] * i;\n            factorials[i] %= 10;\n        }\n        return factorials[(int) n];",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        } else if (n <= 1) {\n            return 1;\n        } else {\n            long[] array = new long[(int) (n + 1)];\n            array[0] = 1;\n            array[1] = 1;\n            for (int i = 2; i <= n; i++) {\n                array[i] = i * array[i - 1];\n                array[i] %= 10;\n            }\n            return array[(int) n];\n        }",
    "        if (n < 0) return -1;\n        if (n == 0) return 1;\n        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        // Write your code here\n        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        } else if (n == 0) {\n            return 1;\n        } else {\n            long res = 1;\n            for (long i = 1; i <= n; i++) {\n                res = (res * i) % 10;\n            }\n            return res;\n        }",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long lastDigit = 1;\n        for (int i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long lastDigit = 1;\n        for (int i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result *= i;\n            result = result % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] lastDigits = {1, 1, 2, 6, 4};\n        long[] factorials = {1, 1, 2, 6, 24};\n        for (int i = 5; i <= n; i++) {\n            long lastDigit = lastDigits[i % 5] * (i % 10);\n            lastDigits[i % 5] = lastDigit % 10;\n            factorials[i % 5] = factorials[i % 5] * i;\n        }\n        return lastDigits[n % 5];",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] f = new long[(int) (n + 1)];\n        f[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            f[i] = i * f[i - 1];\n            f[i] %= 10;\n        }\n        return f[(int) n];",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long last = 1;\n        for (long i = 2; i <= n; i++) {\n            last = (last * i) % 10;\n        }\n        return last;",
    "        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact = fact * i;\n        }\n        return fact % 10;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long lastDigit = 1;\n        for (long i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (int i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) return -1;\n        if (n < 2) return 1;\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        } else if (n <= 1) {\n            return 1;\n        } else {\n            long[] factorials = new long[(int) n + 1];\n            factorials[0] = 1;\n            factorials[1] = 1;\n            for (int i = 2; i <= n; i++) {\n                factorials[i] = factorials[i - 1] * i;\n                factorials[i] %= 10;\n            }\n            return factorials[(int) n];\n        }",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) return -1;\n        if (n == 0) return 1;\n        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact = fact * i;\n        }\n        return fact % 10;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] lastDigits = {1, 1, 2, 6, 4};\n        long[] powersOfFive = {1, 5, 25, 125, 625};\n        long result = 1;\n        long power = 0;\n        while (n > 0) {\n            long digit = n % 5;\n            result = (result * lastDigits[(int) digit]) % 10;\n            power = (power + digit) % 4;\n            n /= 5;\n        }\n        result = (result * powersOfFive[(int) power]) % 10;\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long fact = 1;\n        for (long i = 2; i <= n; i++) {\n            fact = (fact * i) % 10;\n        }\n        return fact;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long lastDigit = 1;\n        for (long i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long fact = 1;\n        for (int i = 1; i <= n; i++) {\n            fact = fact * i;\n        }\n        return fact % 10;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit *= i;\n            lastDigit %= 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact = (fact * i) % 10;\n        }\n        return fact;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0 || n == 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long factorial = 1;\n        while (n > 1) {\n            factorial = (factorial * n) % 10;\n            n--;\n        }\n        return factorial;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long fact = 1;\n        for (long i = 2; i <= n; i++) {\n            fact = (fact * i) % 10;\n        }\n        return fact;",
    "        long res = 1;\n        for (long i = 1; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long ans = 1;\n        for (long i = 1; i <= n; i++) {\n            ans = (ans * i) % 10;\n        }\n        return ans;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n == 0) return 1;\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long fact = 1;\n        for (long i = 2; i <= n; i++) {\n            fact = (fact * i) % 10;\n        }\n        return fact;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long[] factorials = new long[(int) n + 1];\n        factorials[0] = 1;\n        factorials[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            factorials[i] = factorials[i - 1] * i;\n            factorials[i] %= 10;\n        }\n        return factorials[(int) n];",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact = fact * i;\n        }\n        return fact % 10;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] lastDigit = new long[(int) (n + 1)];\n        lastDigit[0] = 1;\n        lastDigit[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            lastDigit[i] = (i * lastDigit[i - 1]) % 10;\n        }\n        return lastDigit[(int) n];",
    "        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (int i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long lastDigit = 1;\n        for (long i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact *= i;\n            fact %= 10;\n        }\n        return fact;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (int i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] lastDigits = new long[(int) (n + 1)];\n        lastDigits[0] = 1;\n        lastDigits[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            lastDigits[i] = (lastDigits[i - 1] * i) % 10;\n        }\n        return lastDigits[(int) n];",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        // Write your code here\n        long factorial = 1;\n        for (int i = 1; i <= n; i++) {\n            factorial *= i;\n        }\n        return factorial % 10;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long res = 1;\n        for (int i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) return -1;\n        if (n <= 1) return 1;\n        long res = 1;\n        for (long i = 2; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] factorials = new long[(int) n + 1];\n        factorials[0] = 1;\n        factorials[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            factorials[i] = factorials[i - 1] * i;\n            factorials[i] %= 10;\n        }\n        return factorials[(int) n];",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long[] lastDigit = new long[(int) (n + 1)];\n        lastDigit[0] = 1;\n        lastDigit[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            lastDigit[i] = (i * lastDigit[i - 1]) % 10;\n        }\n        return lastDigit[(int) n];",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (int i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long res = 1;\n        for (int i = 1; i <= n; i++) {\n            res = (res * i) % 10;\n        }\n        return res;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long factorial = 1;\n        for (long i = 1; i <= n; i++) {\n            factorial *= i;\n            factorial %= 10;\n        }\n        return factorial;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_141_pancake_sort",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort an array array list of elements.\n    public static ArrayList<Long> pancakeSort(ArrayList<Long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(pancakeSort((new ArrayList<Long>(Arrays.asList((long)15l, (long)79l, (long)25l, (long)38l, (long)69l)))).equals((new ArrayList<Long>(Arrays.asList((long)15l, (long)25l, (long)38l, (long)69l, (long)79l)))));\n    assert(pancakeSort((new ArrayList<Long>(Arrays.asList((long)98l, (long)12l, (long)54l, (long)36l, (long)85l)))).equals((new ArrayList<Long>(Arrays.asList((long)12l, (long)36l, (long)54l, (long)85l, (long)98l)))));\n    assert(pancakeSort((new ArrayList<Long>(Arrays.asList((long)41l, (long)42l, (long)32l, (long)12l, (long)23l)))).equals((new ArrayList<Long>(Arrays.asList((long)12l, (long)23l, (long)32l, (long)41l, (long)42l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here.\n        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int max = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(max)) {\n                    max = j;\n                }\n            }\n            if (max != i - 1) {\n                if (max != 0) {\n                    ans.add((long) max + 1);\n                    reverse(nums, max);\n                }\n                ans.add((long) i);\n                reverse(nums, i - 1);\n            }\n        }\n        return ans;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMax(nums, i);\n            if (maxIndex != i - 1) {\n                flip(nums, maxIndex);\n                flip(nums, i - 1);\n                result.add((long)maxIndex + 1);\n                result.add((long)i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i, nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == 0) {\n                result.add(index + 1L);\n                nums.remove(index);\n            } else {\n                result.add(index + 1L);\n                result.add(nums.size() - i);\n                nums = reverse(nums, index);\n                nums = reverse(nums, nums.size() - i - 1);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<>();\n        while (nums.size() > 0) {\n            int index = nums.indexOf(sorted.get(0));\n            if (index == 0) {\n                result.add((long) nums.size());\n                nums.remove(0);\n                sorted.remove(0);\n            } else {\n                result.add((long) index + 1);\n                ArrayList<Long> temp = new ArrayList<>();\n                for (int i = index; i >= 0; i--) {\n                    temp.add(nums.get(i));\n                }\n                for (int i = 0; i <= index; i++) {\n                    nums.set(i, temp.get(index - i));\n                }\n                result.add((long) nums.size());\n                temp = new ArrayList<>();\n                for (int i = nums.size() - 1; i >= 0; i--) {\n                    temp.add(nums.get(i));\n                }\n                for (int i = 0; i < nums.size(); i++) {\n                    nums.set(i, temp.get(i));\n                }\n                nums.remove(0);\n                sorted.remove(0);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int maxIndex = findMaxIndex(nums, n - i);\n            if (maxIndex == n - i - 1)\n                continue;\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) n - i);\n            flip(nums, n - i - 1);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!nums.equals(sorted)) {\n            int max = 0;\n            for (int i = 0; i < nums.size(); i++) {\n                if (nums.get(i) > nums.get(max)) {\n                    max = i;\n                }\n            }\n            if (max != nums.size() - 1) {\n                if (max != 0) {\n                    ans.add((long) max + 1);\n                    reverse(nums, max);\n                }\n                ans.add((long) nums.size());\n                reverse(nums, nums.size() - 1);\n            } else {\n                ans.add((long) nums.size());\n                reverse(nums, nums.size() - 1);\n            }\n        }\n        return ans;",
    "        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int max = findMax(nums, i);\n            if (max != i - 1) {\n                flip(nums, max);\n                flip(nums, i - 1);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf(new Long(i));\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add(new Long(index + 1));\n                reverse(nums, index + 1);\n            }\n            result.add(new Long(i));\n            reverse(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    Collections.reverse(nums.subList(0, maxIndex + 1));\n                }\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        while(!nums.equals(sorted)) {\n            int maxIndex = nums.indexOf(Collections.max(nums));\n            if(maxIndex != nums.size() - 1) {\n                flip(nums, maxIndex);\n                flips.add((long)maxIndex + 1);\n            }\n            flip(nums, nums.size() - 1);\n            flips.add((long)nums.size());\n        }\n        return flips;",
    "        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long)i);\n            if (index == i - 1) continue;\n            if (index != 0) {\n                ans.add((long)index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            ans.add((long)i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return ans;",
    "        // Write your code here\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int max = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(max)) {\n                    max = j;\n                }\n            }\n            if (max != i - 1) {\n                flip(nums, max);\n                flip(nums, i - 1);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            long max = Collections.max(nums);\n            int index = nums.indexOf(max);\n            if (index != i) {\n                if (index != 0) {\n                    Collections.reverse(nums.subList(0, index + 1));\n                    sorted.add((long) index + 1);\n                }\n                Collections.reverse(nums.subList(0, i + 1));\n                sorted.add((long) i + 1);\n            }\n        }\n        return sorted;",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int maxIndex = findMaxIndex(nums, n - i);\n            if (maxIndex == n - i - 1) {\n                continue;\n            }\n            if (maxIndex > 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) n - i);\n            flip(nums, n - i - 1);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long)maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long)i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index != i) {\n                result.add((long)index + 1);\n                result.add((long)i + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            flip(nums, maxIndex);\n            flip(nums, i);\n            sorted.add((long) maxIndex + 1);\n            sorted.add((long) i + 1);\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i);\n            flip(nums, i - 1);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums.subList(0, i + 1)));\n            if (index != i) {\n                result.add((long) index + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index != i) {\n                if (index != 0) {\n                    result.add((long) index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        while (n > 0) {\n            int i = nums.indexOf(Collections.max(nums));\n            if (i != n - 1) {\n                if (i != 0) {\n                    result.add((long) i + 1);\n                    reverse(nums, i + 1);\n                }\n                result.add((long) n);\n                reverse(nums, n);\n            }\n            n--;\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i);\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                ans.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            ans.add((long) i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return ans;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    flip(nums, maxIndex);\n                }\n                result.add((long) i + 1);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                ans.add((long) maxIndex + 1);\n                ans.add((long) i + 1);\n                reverse(nums, maxIndex);\n                reverse(nums, i);\n            }\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) == sorted.get(i)) {\n                continue;\n            }\n            int index = nums.indexOf(sorted.get(i));\n            if (index != 0) {\n                flips.add((long) index + 1);\n                flip(nums, index);\n            }\n            flips.add((long) nums.size() - i);\n            flip(nums, nums.size() - i - 1);\n        }\n        return flips;",
    "        // Write your code here\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) == sorted.get(i)) {\n                continue;\n            }\n            int index = nums.indexOf(sorted.get(i));\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n                result.add((long) i + 1);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == nums.size() - 1 - i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long) index + 1);\n                ArrayList<Long> newNums = new ArrayList<Long>();\n                for (int j = 0; j < index + 1; j++) {\n                    newNums.add(nums.get(index - j));\n                }\n                for (int j = 0; j < index + 1; j++) {\n                    nums.set(j, newNums.get(j));\n                }\n            }\n            flips.add((long) nums.size() - i);\n            ArrayList<Long> newNums = new ArrayList<Long>();\n            for (int j = 0; j < nums.size() - i; j++) {\n                newNums.add(nums.get(nums.size() - 1 - i - j));\n            }\n            for (int j = 0; j < nums.size() - i; j++) {\n                nums.set(j, newNums.get(j));\n            }\n        }\n        return flips;",
    "        // Write your code here.\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i - 1);\n        }\n        return nums;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        while (n > 0) {\n            int i = nums.indexOf(sorted.get(n - 1));\n            if (i != n - 1) {\n                if (i != 0) {\n                    result.add((long) i + 1);\n                    reverse(nums, i);\n                }\n                result.add((long) n);\n                reverse(nums, n - 1);\n            }\n            n--;\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = sorted.size() - 1; i >= 0; i--) {\n            if (nums.get(i) == sorted.get(i)) {\n                continue;\n            }\n            int j = nums.indexOf(sorted.get(i));\n            if (j != 0) {\n                result.add(new Long(j + 1));\n                Collections.reverse(nums.subList(0, j + 1));\n            }\n            result.add(new Long(i + 1));\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return result;",
    "        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i >= 1; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                ans.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            ans.add((long) i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == nums.size() - 1) {\n                nums.remove(index);\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                ArrayList<Long> temp = new ArrayList<Long>();\n                for (int j = 0; j < index + 1; j++) {\n                    temp.add(nums.get(j));\n                }\n                Collections.reverse(temp);\n                for (int j = 0; j < index + 1; j++) {\n                    nums.set(j, temp.get(j));\n                }\n            }\n            result.add((long) nums.size());\n            ArrayList<Long> temp = new ArrayList<Long>();\n            for (int j = 0; j < nums.size(); j++) {\n                temp.add(nums.get(j));\n            }\n            Collections.reverse(temp);\n            for (int j = 0; j < nums.size(); j++) {\n                nums.set(j, temp.get(j));\n            }\n            nums.remove(nums.size() - 1);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        while (!nums.equals(sorted)) {\n            int maxIndex = nums.indexOf(Collections.max(nums));\n            if (maxIndex != nums.size() - 1) {\n                flips.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            flips.add((long) nums.size());\n            flip(nums, nums.size() - 1);\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        Long[] arr = nums.toArray(new Long[n]);\n        for (int i = n - 1; i > 0; i--) {\n            int maxIndex = findMax(arr, i);\n            if (maxIndex != i) {\n                flip(arr, maxIndex);\n                flip(arr, i);\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> result = new ArrayList<>();\n        while (!nums.equals(sorted)) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index != nums.size() - 1) {\n                result.add(index + 1L);\n                result.add(nums.size() - index + 0L);\n                Collections.reverse(nums.subList(0, index + 1));\n                Collections.reverse(nums.subList(index + 1, nums.size()));\n                Collections.reverse(nums);\n            } else {\n                result.add(nums.size() - index + 0L);\n                Collections.reverse(nums);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == nums.size() - 1 - i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long) index + 1);\n                nums = flip(nums, index + 1);\n            }\n            flips.add((long) nums.size() - i);\n            nums = flip(nums, nums.size() - i);\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        for (int i = nums.size() - 1; i >= 1; i--) {\n            int maxIndex = 0;\n            for (int j = 1; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n            }\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                sorted.add((long)maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            sorted.add((long)i + 1);\n            flip(nums, i);\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> ans = new ArrayList<Long>();\n        while (!nums.equals(sorted)) {\n            int max = 0;\n            for (int i = 0; i < nums.size(); i++) {\n                if (nums.get(i) > nums.get(max)) {\n                    max = i;\n                }\n            }\n            if (max != 0) {\n                ans.add((long) max + 1);\n                reverse(nums, max);\n            }\n            ans.add((long) nums.size());\n            reverse(nums, nums.size() - 1);\n        }\n        return ans;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                sorted.add(0L);\n                sorted.add(i + 1L);\n                continue;\n            }\n            if (maxIndex != 0) {\n                sorted.add(maxIndex + 1L);\n                sorted.add(0L);\n            }\n            sorted.add(i + 1L);\n            sorted.add(maxIndex + 1L);\n        }\n        return sorted;",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf(new Long(i));\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add(new Long(index + 1));\n                flip(nums, index + 1);\n            }\n            result.add(new Long(i));\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                reverse(nums, maxIndex);\n                reverse(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    Collections.reverse(nums.subList(0, maxIndex + 1));\n                }\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int max = findMax(nums, i);\n            if (max != i - 1) {\n                flip(nums, max);\n                flip(nums, i - 1);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(nums.size() - 1 - i);\n            int index = nums.indexOf(num);\n            if (index == nums.size() - 1 - i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long)index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long)nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return flips;",
    "        // Write your code here\n        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) == sorted.get(i)) {\n                continue;\n            }\n            int index = nums.indexOf(sorted.get(i));\n            if (index != 0) {\n                flips.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(i + 1);\n            if (index != i) {\n                if (index != 0) {\n                    result.add((long) index + 1);\n                    reverse(nums, index);\n                }\n                result.add((long) i + 1);\n                reverse(nums, i);\n            }\n        }\n        return result;",
    "        int n = nums.size();\n        for (int i = n - 1; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        return pancakeSort(nums, sorted);",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                sorted.add(nums.get(i));\n                nums.remove(i);\n            } else {\n                if (index != 0) {\n                    sorted.add((long) index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                sorted.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return sorted;",
    "        int n = nums.size();\n        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long)i);\n            if (index == i - 1) {\n                sorted.add(0L);\n                continue;\n            }\n            if (index != 0) {\n                sorted.add((long)index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            sorted.add((long)i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return sorted;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> ans = new ArrayList<>();\n        while (!nums.equals(sorted)) {\n            int maxIndex = 0;\n            for (int i = 0; i < nums.size(); i++) {\n                if (nums.get(i) > nums.get(maxIndex)) {\n                    maxIndex = i;\n                }\n            }\n            if (maxIndex != nums.size() - 1) {\n                ans.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            ans.add((long) nums.size());\n            flip(nums, nums.size() - 1);\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i - 1) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    flip(nums, maxIndex);\n                }\n                result.add((long) i);\n                flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                sorted.add((long)maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            sorted.add((long)i + 1);\n            flip(nums, i);\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == 0) {\n                result.add((long) index + 1);\n                nums.remove(0);\n                continue;\n            }\n            result.add((long) index + 1);\n            result.add((long) nums.size() - i);\n            ArrayList<Long> temp = new ArrayList<>();\n            for (int j = index; j >= 0; j--) {\n                temp.add(nums.get(j));\n            }\n            for (int j = 0; j < index; j++) {\n                nums.remove(0);\n            }\n            for (int j = 0; j < temp.size(); j++) {\n                nums.add(temp.get(j));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size(); i > 0; i--) {\n            int index = nums.indexOf(new Long(i));\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add(new Long(index + 1));\n                nums = flip(nums, index + 1);\n            }\n            result.add(new Long(i));\n            nums = flip(nums, i);\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMax(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i);\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        Collections.reverse(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            Long target = sorted.get(i);\n            int index = nums.indexOf(target);\n            if (index == nums.size() - 1 - i) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long)index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long)i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                sorted.add(nums.get(i));\n                nums.remove(i);\n            } else {\n                if (index != 0) {\n                    sorted.add((long) index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                sorted.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return sorted;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int len = nums.size();\n        for (int i = len - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int max = i;\n            for (int j = i + 1; j < n; j++) {\n                if (nums.get(j) > nums.get(max)) {\n                    max = j;\n                }\n            }\n            if (max != i) {\n                flip(nums, max);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf(Long.valueOf(i));\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add(Long.valueOf(index + 1));\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add(Long.valueOf(i));\n            Collections.reverse(nums.subList(0, i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i);\n            flip(nums, i - 1);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size(); i > 0; i--) {\n            int maxIndex = nums.indexOf(Collections.max(nums.subList(0, i)));\n            if (maxIndex != i - 1) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                nums.remove(i);\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return result;",
    "        // Write your code here.\n        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                ans.add((long) index + 1);\n                reverse(nums, index);\n            }\n            ans.add((long) i);\n            reverse(nums, i - 1);\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            flip(nums, maxIndex);\n            flip(nums, i);\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        while (!nums.equals(sorted)) {\n            int index = nums.indexOf(sorted.get(0));\n            if (index != 0) {\n                flips.add((long) index + 1);\n                ArrayList<Long> temp = new ArrayList<Long>(nums.subList(0, index + 1));\n                Collections.reverse(temp);\n                for (int i = 0; i < temp.size(); i++) {\n                    nums.set(i, temp.get(i));\n                }\n            }\n            flips.add((long) nums.size());\n            ArrayList<Long> temp = new ArrayList<Long>(nums.subList(0, nums.size()));\n            Collections.reverse(temp);\n            for (int i = 0; i < temp.size(); i++) {\n                nums.set(i, temp.get(i));\n            }\n            nums.remove(nums.size() - 1);\n            sorted.remove(0);\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                reverse(nums, maxIndex + 1);\n            }\n            result.add((long) i);\n            reverse(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i - 1) {\n                result.add((long)maxIndex + 1);\n                result.add((long)i);\n                flip(nums, maxIndex);\n                flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long)maxIndex + 1);\n                result.add((long)i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long)maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long)i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.size() - 1) {\n                flips.add((long) index + 1);\n                flips.add((long) index + 1);\n                continue;\n            }\n            flips.add((long) index + 1);\n            flips.add((long) nums.size() - i);\n            flips.add((long) index + 1);\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long)maxIndex + 1);\n                result.add((long)i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int max_index = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(max_index)) {\n                    max_index = j;\n                }\n            }\n            if (max_index != i) {\n                Collections.reverse(nums.subList(0, max_index + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                reverse(nums, maxIndex);\n                reverse(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (Long num : nums) {\n            sorted.add(num);\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = sorted.size() - 1; i >= 0; i--) {\n            Long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == i) {\n                continue;\n            } else if (index == 0) {\n                result.add((long) nums.size());\n                Collections.reverse(nums);\n            } else {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        // Write your code here\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == i) continue;\n            if (index != 0) {\n                flips.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long) i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return flips;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index != 0) {\n                result.add((long) index + 1);\n                reverse(nums, index);\n            }\n            result.add((long) nums.size() - i);\n            reverse(nums, nums.size() - i - 1);\n        }\n        return result;",
    "        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) continue;\n            if (index != 0) {\n                ans.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            ans.add((long) i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return ans;",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                nums.remove(index);\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                reverse(nums, index);\n            }\n            result.add((long) i + 1);\n            reverse(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMax(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i - 1);\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int max = findMax(nums, n - i);\n            if (max != n - i - 1) {\n                flip(nums, max);\n                flip(nums, n - i - 1);\n                result.add((long) max + 1);\n                result.add((long) n - i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                sorted.add(nums.get(i));\n                nums.remove(i);\n            } else {\n                if (index != 0) {\n                    sorted.add((long) index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                sorted.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        Long[] arr = nums.toArray(new Long[n]);\n        for (int i = n; i > 1; i--) {\n            int max_idx = findMax(arr, i);\n            if (max_idx == i - 1) {\n                continue;\n            }\n            flip(arr, max_idx);\n            flip(arr, i - 1);\n            result.add((long) max_idx + 1);\n            result.add((long) i);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index != i) {\n                result.add((long) index + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                reverse(nums, maxIndex);\n                reverse(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    Collections.reverse(nums.subList(0, maxIndex + 1));\n                    sorted.add((long) maxIndex + 1);\n                }\n                Collections.reverse(nums.subList(0, i + 1));\n                sorted.add((long) i + 1);\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i - 1) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    flip(nums, maxIndex);\n                }\n                result.add((long) i);\n                flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            long num = sorted.get(i);\n            int index = nums.indexOf(num);\n            if (index == nums.size() - 1 - i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        // Write your code here\n        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int maxIndex = findMaxIndex(nums, n - i);\n            if (maxIndex != n - i - 1) {\n                flip(nums, maxIndex);\n                flip(nums, n - i - 1);\n                result.add((long) maxIndex + 1);\n                result.add((long) n - i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> flips = new ArrayList<Long>();\n        while (!nums.equals(sorted)) {\n            int max = 0;\n            for (int i = 0; i < nums.size(); i++) {\n                if (nums.get(i) > nums.get(max)) {\n                    max = i;\n                }\n            }\n            if (max != nums.size() - 1) {\n                if (max != 0) {\n                    flips.add((long) max + 1);\n                    Collections.reverse(nums.subList(0, max + 1));\n                }\n                flips.add((long) nums.size());\n                Collections.reverse(nums.subList(0, nums.size()));\n            }\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        while (!nums.equals(sorted)) {\n            int index = nums.indexOf(sorted.get(0));\n            if (index != 0) {\n                flips.add((long) index + 1);\n                ArrayList<Long> temp = new ArrayList<Long>();\n                for (int i = 0; i < index + 1; i++) {\n                    temp.add(nums.get(i));\n                }\n                Collections.reverse(temp);\n                for (int i = 0; i < index + 1; i++) {\n                    nums.set(i, temp.get(i));\n                }\n            }\n            flips.add((long) nums.size());\n            ArrayList<Long> temp = new ArrayList<Long>();\n            for (int i = 0; i < nums.size(); i++) {\n                temp.add(nums.get(i));\n            }\n            Collections.reverse(temp);\n            for (int i = 0; i < nums.size(); i++) {\n                nums.set(i, temp.get(i));\n            }\n            sorted.remove(0);\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            long max = nums.get(i);\n            int index = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > max) {\n                    max = nums.get(j);\n                    index = j;\n                }\n            }\n            if (index == i) {\n                sorted.add((long) i + 1);\n                nums = flip(nums, i);\n            } else {\n                sorted.add((long) index + 1);\n                nums = flip(nums, index);\n                sorted.add((long) i + 1);\n                nums = flip(nums, i);\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        return pancakeSort(nums, sorted);",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int maxIndex = findMax(nums, n - i);\n            flip(nums, maxIndex);\n            flip(nums, n - i - 1);\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                sorted.add(nums.get(i));\n                nums.remove(i);\n            } else {\n                if (index != 0) {\n                    sorted.add((long)index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                sorted.add((long)i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return sorted;",
    "        // Write your code here.\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums.subList(0, i + 1)));\n            if (index != i) {\n                result.add((long) index + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n                result.add((long)maxIndex + 1);\n                result.add((long)i + 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n - 1; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) (maxIndex + 1));\n                flip(nums, maxIndex);\n                result.add((long) (i + 1));\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        int n = nums.size();\n        for (int i = n - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                nums = flip(nums, maxIndex);\n                nums = flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i);\n            flip(nums, i - 1);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = sorted.indexOf(nums.get(i));\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.size() - 1) {\n                flips.add((long)nums.size());\n                Collections.reverse(nums);\n                continue;\n            }\n            flips.add((long)index + 1);\n            Collections.reverse(nums.subList(0, index + 1));\n            flips.add((long)i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return flips;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long)maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long)i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    Collections.reverse(nums.subList(0, maxIndex + 1));\n                    sorted.add((long) maxIndex + 1);\n                }\n                Collections.reverse(nums.subList(0, i + 1));\n                sorted.add((long) i + 1);\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = sorted.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i);\n            sorted.add(nums.get(i));\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(i + 1L);\n        }\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                reverse(nums, index);\n            }\n            result.add((long) i + 1);\n            reverse(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                flip(nums, maxIndex);\n                sorted.add((long) maxIndex + 1);\n            }\n            flip(nums, i);\n            sorted.add((long) i + 1);\n        }\n        return sorted;",
    "        // Write your code here.\n        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            flip(nums, maxIndex);\n            flip(nums, i);\n            sorted.add((long) maxIndex + 1);\n            sorted.add((long) i + 1);\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n                result.add((long) i + 1);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf((long)i);\n            if (index == i - 1) continue;\n            if (index != 0) {\n                result.add((long)index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long)i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    flip(nums, maxIndex);\n                }\n                result.add((long) i + 1);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = sorted.indexOf(nums.get(i));\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                flip(nums, index);\n                flips.add((long) index);\n            }\n            flip(nums, i);\n            flips.add((long) i);\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i - 1) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i);\n                flip(nums, maxIndex);\n                flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == nums.size() - i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                flips.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            flips.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return flips;",
    "        // Write your code here\n        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index == i) {\n                sorted.add(nums.get(i));\n                nums.remove(i);\n            } else {\n                if (index != 0) {\n                    sorted.add((long) index + 1);\n                    Collections.reverse(nums.subList(0, index + 1));\n                }\n                sorted.add((long) i + 1);\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> sorted = new ArrayList<>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == nums.size() - i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size(); i > 0; i--) {\n            int index = nums.indexOf((long) i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                flip(nums, index);\n            }\n            result.add((long) i);\n            flip(nums, i - 1);\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int index = nums.indexOf(i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index > 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) i);\n            Collections.reverse(nums.subList(0, i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        int n = nums.size();\n        for (int i = n; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i - 1) {\n                if (maxIndex != 0) {\n                    result.add((long) maxIndex + 1);\n                    flip(nums, maxIndex);\n                }\n                result.add((long) i);\n                flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        // Write your code here\n        int n = nums.size();\n        ArrayList<Long> ans = new ArrayList<>();\n        for (int i = n; i > 0; i--) {\n            int idx = nums.indexOf((long) i);\n            if (idx == i - 1) {\n                continue;\n            }\n            if (idx != 0) {\n                ans.add((long) (idx + 1));\n                reverse(nums, idx);\n            }\n            ans.add((long) i);\n            reverse(nums, i - 1);\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        int i = nums.size() - 1;\n        while (i > 0) {\n            int j = sorted.indexOf(nums.get(i));\n            if (j == i) {\n                i--;\n                continue;\n            }\n            if (j > 0) {\n                flips.add((long)j + 1);\n                Collections.reverse(nums.subList(0, j + 1));\n            }\n            flips.add((long)i + 1);\n            Collections.reverse(nums.subList(0, i + 1));\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                Collections.reverse(nums.subList(0, maxIndex + 1));\n                Collections.reverse(nums.subList(0, i + 1));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size(); i > 0; i--) {\n            int index = nums.indexOf(i);\n            if (index != i - 1) {\n                result.add((long) index + 1);\n                nums = flip(nums, index);\n                result.add((long) i);\n                nums = flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n                result.add((long) i + 1);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> sorted = new ArrayList<Long>(nums);\n        Collections.sort(sorted);\n        ArrayList<Long> flips = new ArrayList<Long>();\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) == sorted.get(i)) continue;\n            int index = nums.indexOf(sorted.get(i));\n            if (index == nums.size() - 1) {\n                flips.add((long) nums.size() - 1);\n                Collections.reverse(nums.subList(0, nums.size() - 1));\n            } else {\n                flips.add((long) index);\n                Collections.reverse(nums.subList(0, index + 1));\n                flips.add((long) nums.size() - 1);\n                Collections.reverse(nums.subList(0, nums.size() - 1));\n            }\n        }\n        return flips;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                reverse(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            reverse(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int index = nums.indexOf(Collections.max(nums));\n            if (index != i) {\n                if (index != 0) {\n                    Collections.reverse(nums.subList(0, index + 1));\n                    sorted.add((long) index + 1);\n                }\n                Collections.reverse(nums.subList(0, i + 1));\n                sorted.add((long) i + 1);\n            }\n        }\n        return sorted;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 1; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex > 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) i + 1);\n            flip(nums, i);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            sorted.add(nums.get(i));\n        }\n        Collections.sort(sorted);\n        ArrayList<Long> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            int index = nums.indexOf(sorted.get(i));\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.add((long) index + 1);\n                Collections.reverse(nums.subList(0, index + 1));\n            }\n            result.add((long) nums.size() - i);\n            Collections.reverse(nums.subList(0, nums.size() - i));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (int i = nums.size() - 1; i > 0; i--) {\n            int maxIndex = findMaxIndex(nums, i);\n            if (maxIndex != i) {\n                result.add((long) maxIndex + 1);\n                result.add((long) i + 1);\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<Long>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                flip(nums, maxIndex);\n                flip(nums, i);\n            }\n        }\n        return nums;",
    "        ArrayList<Long> result = new ArrayList<>();\n        int n = nums.size();\n        for (int i = 0; i < n; i++) {\n            int maxIndex = findMaxIndex(nums, n - i);\n            if (maxIndex == n - i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.add((long) maxIndex + 1);\n                flip(nums, maxIndex);\n            }\n            result.add((long) n - i);\n            flip(nums, n - i - 1);\n        }\n        return result;",
    "        ArrayList<Long> sorted = new ArrayList<>();\n        for (int i = nums.size() - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums.get(j) > nums.get(maxIndex)) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i) {\n                sorted.add(0, nums.get(i));\n                nums.remove(i);\n            } else {\n                sorted.add(0, nums.get(maxIndex));\n                nums.remove(maxIndex);\n                sorted.add(0, nums.get(i - 1));\n                nums.remove(i - 1);\n            }\n        }\n        return sorted;"
  ]
}
{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one array list to nested hash map.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> temp = new HashMap<String,Long>();\n            temp.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),temp);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            h2.put(l2.get(i),l3.get(i));\n            h1.put(l1.get(i),h2);\n        }\n        result.add(h1);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(hm.containsKey(l1.get(i))) {\n                hm2 = hm.get(l1.get(i));\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n            else {\n                hm2 = new HashMap<String,Long>();\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n        }\n        result.add(hm);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;",
    "        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++){\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++){\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> h1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> h2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            h2.put(l2.get(i), l3.get(i));\n            h1.put(l1.get(i), h2);\n        }\n        result.add(h1);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> hm2 = new HashMap<String,Long>();\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;",
    "        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;"
  ]
}
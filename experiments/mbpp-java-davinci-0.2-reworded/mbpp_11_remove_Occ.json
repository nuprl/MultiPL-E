{
  "name": "mbpp_11_remove_Occ",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to remove first and last occurrence of a given character from the string.\n    public static String removeOcc(String s, String ch) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(removeOcc((\"hello\"), (\"l\")).equals((\"heo\")));\n    assert(removeOcc((\"abcda\"), (\"a\")).equals((\"bcd\")));\n    assert(removeOcc((\"PHP\"), (\"P\")).equals((\"H\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        StringBuilder sb = new StringBuilder(s);\n        int i = sb.indexOf(ch);\n        int j = sb.lastIndexOf(ch);\n        if (i == -1 || j == -1) {\n            return s;\n        }\n        sb.deleteCharAt(i);\n        sb.deleteCharAt(j - 1);\n        return sb.toString();",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        StringBuilder sb = new StringBuilder(s);\n        int first = sb.indexOf(ch);\n        int last = sb.lastIndexOf(ch);\n        if (first == -1) {\n            return s;\n        }\n        if (first == last) {\n            sb.deleteCharAt(first);\n        } else {\n            sb.deleteCharAt(first);\n            sb.deleteCharAt(last - 1);\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder(s);\n        sb.deleteCharAt(s.indexOf(ch));\n        sb.deleteCharAt(s.lastIndexOf(ch));\n        return sb.toString();",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        StringBuilder sb = new StringBuilder(s);\n        int index = sb.indexOf(ch);\n        if (index == -1) {\n            return s;\n        }\n        sb.deleteCharAt(index);\n        index = sb.lastIndexOf(ch);\n        if (index == -1) {\n            return s;\n        }\n        sb.deleteCharAt(index);\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder(s);\n        sb.deleteCharAt(s.indexOf(ch));\n        sb.deleteCharAt(s.lastIndexOf(ch));\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder(s);\n        int index = sb.indexOf(ch);\n        if (index != -1) {\n            sb.deleteCharAt(index);\n        }\n        index = sb.lastIndexOf(ch);\n        if (index != -1) {\n            sb.deleteCharAt(index);\n        }\n        return sb.toString();",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        StringBuilder sb = new StringBuilder(s);\n        int first = sb.indexOf(ch);\n        int last = sb.lastIndexOf(ch);\n        if (first == -1 || last == -1) {\n            return s;\n        }\n        sb.deleteCharAt(first);\n        sb.deleteCharAt(last - 1);\n        return sb.toString();",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        StringBuilder sb = new StringBuilder(s);\n        int first = sb.indexOf(ch);\n        int last = sb.lastIndexOf(ch);\n        if (first == -1 || last == -1) {\n            return s;\n        }\n        sb.deleteCharAt(first);\n        sb.deleteCharAt(last - 1);\n        return sb.toString();",
    "        int first = s.indexOf(ch);\n        int last = s.lastIndexOf(ch);\n        if (first == -1 || last == -1) {\n            return s;\n        }\n        return s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);",
    "        int first = s.indexOf(ch);\n        int last = s.lastIndexOf(ch);\n        if (first == -1 || last == -1) {\n            return s;\n        }\n        return s.substring(0, first) + s.substring(first + 1, last) + s.substring(last + 1);",
    "        StringBuilder sb = new StringBuilder(s);\n        sb.deleteCharAt(s.indexOf(ch));\n        sb.deleteCharAt(s.lastIndexOf(ch));\n        return sb.toString();",
    "        return s.replaceFirst(ch, \"\").replaceFirst(ch, \"\");",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) != ch.charAt(0)) {\n                sb.append(s.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder(s);\n        sb.deleteCharAt(s.indexOf(ch));\n        sb.deleteCharAt(s.lastIndexOf(ch));\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder(s);\n        int first = sb.indexOf(ch);\n        int last = sb.lastIndexOf(ch);\n        if (first == last) {\n            sb.deleteCharAt(first);\n        } else {\n            sb.deleteCharAt(first);\n            sb.deleteCharAt(last - 1);\n        }\n        return sb.toString();"
  ]
}
{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to remove consecutive duplicates of a given array list.\n    public static Object consecutiveDuplicates(Object nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(consecutiveDuplicates((new Object(Arrays.asList((long)0l, (long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)4l, (long)5l, (long)6l, (long)6l, (long)6l, (long)7l, (long)8l, (long)9l, (long)4l, (long)4l)))).equals((new Object(Arrays.asList((long)0l, (long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)4l)))));\n    assert(consecutiveDuplicates((new Object(Arrays.asList((long)10l, (long)10l, (long)15l, (long)19l, (long)18l, (long)18l, (long)17l, (long)26l, (long)26l, (long)17l, (long)18l, (long)10l)))).equals((new Object(Arrays.asList((long)10l, (long)15l, (long)19l, (long)18l, (long)17l, (long)26l, (long)17l, (long)18l, (long)10l)))));\n    assert(consecutiveDuplicates((new Object(Arrays.asList((String)\"a\", (String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\", (String)\"d\")))).equals((new Object(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\")))));\n    assert(consecutiveDuplicates((new Object(Arrays.asList((String)\"a\", (String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\", (String)\"d\", (String)\"a\", (String)\"a\")))).equals((new Object(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\", (String)\"d\", (String)\"a\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (nums instanceof ArrayList) {\n            ArrayList<Integer> list = (ArrayList<Integer>) nums;\n            ArrayList<Integer> newList = new ArrayList<Integer>();\n            int prev = list.get(0);\n            newList.add(prev);\n            for (int i = 1; i < list.size(); i++) {\n                if (list.get(i) != prev) {\n                    newList.add(list.get(i));\n                    prev = list.get(i);\n                }\n            }\n            return newList;\n        }\n        return null;",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) nums;\n            ArrayList<Object> result = new ArrayList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    result.add(list.get(i));\n                } else {\n                    if (list.get(i) != list.get(i - 1)) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n            return result;\n        }\n        return null;",
    "        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            List<Object> result = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    result.add(list.get(i));\n                } else {\n                    if (!list.get(i).equals(list.get(i - 1))) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n            return result;\n        }\n        return null;",
    "        // Write your code here\n        return null;",
    "        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            List<Object> newList = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    newList.add(list.get(i));\n                } else {\n                    if (list.get(i).equals(list.get(i - 1))) {\n                        continue;\n                    } else {\n                        newList.add(list.get(i));\n                    }\n                }\n            }\n            return newList;\n        }\n        return null;",
    "        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            List<Object> result = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0 || !list.get(i).equals(list.get(i - 1))) {\n                    result.add(list.get(i));\n                }\n            }\n            return result;\n        } else {\n            return nums;\n        }",
    "        List<Object> list = new ArrayList<>();\n        if (nums instanceof List) {\n            List<Object> numsList = (List<Object>) nums;\n            for (int i = 0; i < numsList.size(); i++) {\n                if (i == 0) {\n                    list.add(numsList.get(i));\n                } else {\n                    if (!numsList.get(i).equals(numsList.get(i - 1))) {\n                        list.add(numsList.get(i));\n                    }\n                }\n            }\n        }\n        return list;",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) nums;\n            ArrayList<Object> newList = new ArrayList<>();\n            Object last = null;\n            for (Object num : list) {\n                if (num != last) {\n                    newList.add(num);\n                    last = num;\n                }\n            }\n            return newList;\n        } else {\n            return nums;\n        }",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) nums;\n            ArrayList<Object> result = new ArrayList<Object>();\n            if (list.size() > 0) {\n                result.add(list.get(0));\n                for (int i = 1; i < list.size(); i++) {\n                    if (!list.get(i).equals(list.get(i - 1))) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n            return result;\n        } else {\n            return nums;\n        }",
    "        return null;",
    "        ArrayList<Integer> numsList = (ArrayList<Integer>) nums;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < numsList.size(); i++) {\n            if (i == 0 || numsList.get(i) != numsList.get(i - 1)) {\n                result.add(numsList.get(i));\n            }\n        }\n        return result;",
    "        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            List<Object> result = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    result.add(list.get(i));\n                } else {\n                    if (!list.get(i).equals(list.get(i - 1))) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n            return result;\n        }\n        return null;",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> numsList = (ArrayList<Object>) nums;\n            ArrayList<Object> result = new ArrayList<Object>();\n            if (numsList.size() > 0) {\n                result.add(numsList.get(0));\n                for (int i = 1; i < numsList.size(); i++) {\n                    if (!numsList.get(i).equals(numsList.get(i - 1))) {\n                        result.add(numsList.get(i));\n                    }\n                }\n            }\n            return result;\n        } else {\n            return nums;\n        }",
    "        if (nums instanceof int[]) {\n            int[] arr = (int[]) nums;\n            int[] newArr = new int[arr.length];\n            int j = 0;\n            for (int i = 0; i < arr.length; i++) {\n                if (i == 0 || arr[i] != arr[i - 1]) {\n                    newArr[j] = arr[i];\n                    j++;\n                }\n            }\n            return Arrays.copyOf(newArr, j);\n        } else if (nums instanceof String) {\n            String str = (String) nums;\n            StringBuilder sb = new StringBuilder();\n            for (int i = 0; i < str.length(); i++) {\n                if (i == 0 || str.charAt(i) != str.charAt(i - 1)) {\n                    sb.append(str.charAt(i));\n                }\n            }\n            return sb.toString();\n        } else if (nums instanceof ArrayList) {\n            ArrayList<Integer> arr = (ArrayList<Integer>) nums;\n            ArrayList<Integer> newArr = new ArrayList<Integer>();\n            for (int i = 0; i < arr.size(); i++) {\n                if (i == 0 || arr.get(i) != arr.get(i - 1)) {\n                    newArr.add(arr.get(i));\n                }\n            }\n            return newArr;\n        }\n        return null;",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) nums;\n            ArrayList<Object> result = new ArrayList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    result.add(list.get(i));\n                } else {\n                    if (!list.get(i).equals(list.get(i - 1))) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n            return result;\n        } else {\n            return nums;\n        }",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Integer> numsList = (ArrayList<Integer>) nums;\n            ArrayList<Integer> newList = new ArrayList<Integer>();\n            for (int i = 0; i < numsList.size() - 1; i++) {\n                if (numsList.get(i) != numsList.get(i + 1)) {\n                    newList.add(numsList.get(i));\n                }\n            }\n            newList.add(numsList.get(numsList.size() - 1));\n            return newList;\n        }\n        return null;",
    "        List<Object> result = new ArrayList<>();\n        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    result.add(list.get(i));\n                } else {\n                    if (!list.get(i).equals(list.get(i - 1))) {\n                        result.add(list.get(i));\n                    }\n                }\n            }\n        }\n        return result;",
    "        if (nums instanceof List) {\n            List<Object> list = (List<Object>) nums;\n            List<Object> result = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0 || !list.get(i).equals(list.get(i - 1))) {\n                    result.add(list.get(i));\n                }\n            }\n            return result;\n        }\n        return null;",
    "        if (nums instanceof ArrayList) {\n            ArrayList<Object> list = (ArrayList<Object>) nums;\n            ArrayList<Object> result = new ArrayList<Object>();\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0 || !list.get(i).equals(result.get(result.size() - 1))) {\n                    result.add(list.get(i));\n                }\n            }\n            return result;\n        } else {\n            return null;\n        }",
    "        return null;"
  ]
}
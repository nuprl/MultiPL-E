{
  "name": "mbpp_80_tetrahedral_number",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth tetrahedral number.\n    public static long tetrahedralNumber(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(tetrahedralNumber((5l)) == (35l));\n    assert(tetrahedralNumber((6l)) == (56l));\n    assert(tetrahedralNumber((7l)) == (84l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) * (n + 2)) / 6;"
  ]
}
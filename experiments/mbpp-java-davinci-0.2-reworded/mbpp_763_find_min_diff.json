{
  "name": "mbpp_763_find_min_diff",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to find the minimum difference between any two elements in a given array array list. https://www.geeksforgeeks.org/find-minimum-difference-pair/\n    public static long findMinDiff(long arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_763_find_min_diff.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findMinDiff((long)Pair.with(1l, 5l, 3l, 19l, 18l, 25l), (6l)) == (1l));\n    assert(findMinDiff((long)Pair.with(4l, 3l, 2l, 6l), (4l)) == (1l));\n    assert(findMinDiff((long)Pair.with(30l, 5l, 20l, 9l), (4l)) == (4l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long minDiff = Long.MAX_VALUE;\n        Arrays.sort(arr);\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < minDiff) {\n                minDiff = arr[i + 1] - arr[i];\n            }\n        }\n        return minDiff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        long diff = 0;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                diff = Math.abs(arr[i] - arr[j]);\n                if(diff < min) {\n                    min = diff;\n                }\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                    ans = arr[i] - arr[j];\n                }\n            }\n        }\n        return ans;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        long ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                    ans = arr[i] + arr[j];\n                }\n            }\n        }\n        return ans;",
    "        // Your code here\n        return 0;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long minDiff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < minDiff) {\n                    minDiff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return minDiff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            diff = Math.min(diff, arr[i + 1] - arr[i]);\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for(int i=0;i<n-1;i++){\n            if(arr[i+1]-arr[i]<diff){\n                diff = arr[i+1]-arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // sort array\n        Arrays.sort(arr);\n        // initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        }\n        // return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        Arrays.sort(arr);\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long diff = Integer.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n\n        // Return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for(int i = 0; i < n-1; i++) {\n            if(arr[i+1] - arr[i] < diff) {\n                diff = arr[i+1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long min_diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < min_diff) {\n                min_diff = arr[i + 1] - arr[i];\n            }\n        }\n        return min_diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i=0; i<n-1; i++) {\n            if (arr[i+1] - arr[i] < diff) {\n                diff = arr[i+1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        long min = Long.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        long min = arr[0];\n        for(int i = 1; i < n; i++) {\n            if(arr[i] < min) {\n                min = arr[i];\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Write your code here\n        long minDiff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < minDiff) {\n                    minDiff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return minDiff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n        // Find the min diff by comparing adjacent pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            diff = Math.min(diff, arr[i + 1] - arr[i]);\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        Arrays.sort(arr);\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long minDiff = Long.MAX_VALUE;\n        long diff;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                diff = Math.abs(arr[i] - arr[j]);\n                if (diff < minDiff) {\n                    minDiff = diff;\n                }\n            }\n        }\n        return minDiff;",
    "        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long diff = Math.abs(arr[0] - arr[1]);\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < min) {\n                min = arr[i + 1] - arr[i];\n            }\n        }\n        return min;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long minDiff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < minDiff) {\n                minDiff = arr[i + 1] - arr[i];\n            }\n        }\n        return minDiff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 2; i < n; i++) {\n            if (arr[i] - arr[i - 1] < diff) {\n                diff = arr[i] - arr[i - 1];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n            for(int j = i+1; j < n; j++) {\n                if(Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n        // Find the min diff by comparing adjacent pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 2; i < n; i++)\n            if (arr[i] - arr[i - 1] < diff)\n                diff = arr[i] - arr[i - 1];\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        // Your code here\n        long min = Long.MAX_VALUE;\n        for(int i = 0; i < n; i++) {\n            for(int j = i + 1; j < n; j++) {\n                if(Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code goes here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < min) {\n                min = arr[i + 1] - arr[i];\n            }\n        }\n        return min;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n\n        // Initialize difference as infinite\n        long diff = Integer.MAX_VALUE;\n\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n\n        // Return min diff\n        return diff;",
    "        // Your code goes here\n        long min = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < min) {\n                    min = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return min;",
    "        // Sort array in non-decreasing order\n        Arrays.sort(arr);\n        // Initialize difference as infinite\n        long diff = Long.MAX_VALUE;\n        // Find the min diff by comparing adjacent\n        // pairs in sorted array\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        // Return min diff\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr[i] - arr[j]) < diff) {\n                    diff = Math.abs(arr[i] - arr[j]);\n                }\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // Your code here\n        return 0;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        // code here\n        Arrays.sort(arr);\n        long diff = Long.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i + 1] - arr[i] < diff) {\n                diff = arr[i + 1] - arr[i];\n            }\n        }\n        return diff;",
    "        Arrays.sort(arr);\n        long diff = arr[1] - arr[0];\n        for (int i = 0; i < n - 1; i++)\n            if (arr[i + 1] - arr[i] < diff)\n                diff = arr[i + 1] - arr[i];\n        return diff;"
  ]
}
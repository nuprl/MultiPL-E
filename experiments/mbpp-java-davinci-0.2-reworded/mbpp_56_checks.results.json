{
  "name": "mbpp_56_checks",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpne2tx3vz.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59auxy3q.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long m = reverse(n);\n        return n == 2 * m - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "/tmp/tmpaac18gyb.java:11: error: cannot find symbol\n        long m = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - (n % 10);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb85dg0rr.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * 10);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187636,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpctvbwr01.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == (r - 1) * 2;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187636,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoti6bzwi.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r + r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num = num / 10;\n        }\n        return (n == rev * 2 - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187636,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4awcx1pv.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpne2tx3vz.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return n == rev - 1 || n == rev + 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj0wxknip.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "/tmp/tmprmxfz2fk.java:11: error: cannot find symbol\n        long r = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return (n == 2 * Long.parseLong(r) - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev + 1 || n == rev - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu3ll6na.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev * 2 - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187639,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_5wb72l.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "/tmp/tmp3r0ip08b.java:11: error: cannot find symbol\n        long r = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpyebeu9.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long m = n;\n        long r = 0;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == Long.parseLong(r) * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return (n == 2 * r - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        return n == 2 * Long.parseLong(sb.toString()) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187641,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == reverse(n + 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187641,
      "stdout": "",
      "stderr": "/tmp/tmp0fnlsdou.java:11: error: cannot find symbol\n        return n == reverse(n + 1);\n                    ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpne2tx3vz.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return n == rev*2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187642,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - (n % 10);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb85dg0rr.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187642,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        long r = 0;\n        long temp = n;\n        while(temp > 0) {\n            r = r * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == r * 2 - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpyebeu9.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long nn = n;\n        while (nn > 0) {\n            r = r * 10 + nn % 10;\n            nn /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == (2 * Long.parseLong(r) - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "/tmp/tmp3r0ip08b.java:11: error: cannot find symbol\n        long r = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String t = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(t) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long m = reverse(n);\n        return n == 2 * m - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "/tmp/tmpaac18gyb.java:11: error: cannot find symbol\n        long m = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * Math.pow(10, (int) Math.log10(n)));\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpne2tx3vz.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long x = n;\n        while (x > 0) {\n            r = r * 10 + x % 10;\n            x /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4awcx1pv.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return rev == n / 2 + 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == 2*r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187644,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return Long.parseLong(s) == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187645,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return (n == (rev - 1) / 2);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187645,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2b1aziik.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == reverse(n + 1) / 2;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187645,
      "stdout": "",
      "stderr": "/tmp/tmpohl30cg5.java:11: error: cannot find symbol\n        return n == reverse(n + 1) / 2;\n                    ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString());\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpyebeu9.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num != 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return (n + 1 == 2 * rev);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpyebeu9.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = String.valueOf(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187632,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == (Long.parseLong(r) * 2) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187646,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == reverse(n + 1) / 2;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187645,
      "stdout": "",
      "stderr": "/tmp/tmpohl30cg5.java:11: error: cannot find symbol\n        return n == reverse(n + 1) / 2;\n                    ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String str = Long.toString(n);\n        StringBuilder sb = new StringBuilder(str);\n        sb.reverse();\n        long rev = Long.parseLong(sb.toString());\n        return n == 2*rev-1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_5wb72l.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        long rn = Long.parseLong(r);\n        return n == 2 * rn - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev*10 + temp%10;\n            temp /= 10;\n        }\n        return n == rev*2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n % 10) * 10 + (n / 10 % 10) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph68vn0ks.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187637,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4awcx1pv.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187648,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo4a95cl.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long temp = n;\n        while (temp != 0) {\n            r = r * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75dpsgf3.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long m = reverse(n);\n        return n == 2 * m - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187635,
      "stdout": "",
      "stderr": "/tmp/tmpaac18gyb.java:11: error: cannot find symbol\n        long m = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp != 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187648,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10 + n % 10 * (long) Math.pow(10, (int) Math.log10(n)));\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187649,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26_fxci6.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while(temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187647,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfpyebeu9.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187638,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String t = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(t) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187643,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187648,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqo4a95cl.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == (n / 10) * 19;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_5wb72l.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return (n == 2*r - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        return n == 2*r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        String s = Long.toString(n);\n        StringBuilder sb = new StringBuilder(s);\n        sb.reverse();\n        long r = Long.parseLong(sb.toString());\n        if(n == 2*r - 1)\n            return true;\n        return false;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187642,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return (n == rev * 2 - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num != 0) {\n            rev = rev * 10 + num % 10;\n            num = num / 10;\n        }\n        return (n + 1 == 2 * rev);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187650,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp != 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return (n == reverse + 1) || (n == reverse - 1);\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187651,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4n4blte8.java:22)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long x = n;\n        while (x > 0) {\n            r = r * 10 + x % 10;\n            x /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187633,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        // Write your code here\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long r = reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187640,
      "stdout": "",
      "stderr": "/tmp/tmp3r0ip08b.java:11: error: cannot find symbol\n        long r = reverse(n);\n                 ^\n  symbol:   method reverse(long)\n  location: class Problem\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        String s = Long.toString(n);\n        String r = new StringBuilder(s).reverse().toString();\n        return n == 2 * Long.parseLong(r) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        return n == 2 * Long.parseLong(new StringBuilder(Long.toString(n)).reverse().toString()) - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187651,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to check if a given number is one less than twice its reverse.\n    public static boolean checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void main(String[] args) {\n    assert(checks((70l)) == (false));\n    assert(checks((23l)) == (false));\n    assert(checks((73l)) == (true));\n    }\n\n}\n",
      "timestamp": 1667187634,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
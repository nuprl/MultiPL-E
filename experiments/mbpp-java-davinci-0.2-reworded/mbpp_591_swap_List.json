{
  "name": "mbpp_591_swap_List",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to interchange the first and last elements in an array array list.\n    public static ArrayList<Long> swapList(ArrayList<Long> newList) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_591_swap_List.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(swapList((new ArrayList<Long>(Arrays.asList((long)12l, (long)35l, (long)9l, (long)56l, (long)24l)))).equals((new ArrayList<Long>(Arrays.asList((long)24l, (long)35l, (long)9l, (long)56l, (long)12l)))));\n    assert(swapList((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)1l)))));\n    assert(swapList((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l, (long)4l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Long first = newList.get(0);\n        Long last = newList.get(newList.size() - 1);\n        newList.set(0, last);\n        newList.set(newList.size() - 1, first);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size()-1));\n        newList.set(newList.size()-1, temp);\n        return newList;",
    "        ArrayList<Long> newList2 = new ArrayList<Long>();\n        newList2.add(newList.get(newList.size()-1));\n        for (int i = 1; i < newList.size()-1; i++) {\n            newList2.add(newList.get(i));\n        }\n        newList2.add(newList.get(0));\n        return newList2;",
    "        Long first = newList.get(0);\n        Long last = newList.get(newList.size() - 1);\n        newList.set(0, last);\n        newList.set(newList.size() - 1, first);\n        return newList;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        // Write your code here\n        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        ArrayList<Long> newList2 = new ArrayList<Long>();\n        newList2.add(newList.get(newList.size() - 1));\n        for (int i = 1; i < newList.size() - 1; i++) {\n            newList2.add(newList.get(i));\n        }\n        newList2.add(newList.get(0));\n        return newList2;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        // Write your code here\n        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        ArrayList<Long> list = new ArrayList<Long>();\n        list.addAll(newList);\n        Collections.swap(list, 0, list.size() - 1);\n        return list;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        Long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;",
    "        long temp = newList.get(0);\n        newList.set(0, newList.get(newList.size() - 1));\n        newList.set(newList.size() - 1, temp);\n        return newList;"
  ]
}
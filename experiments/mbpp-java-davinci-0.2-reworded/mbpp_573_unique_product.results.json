{
  "name": "mbpp_573_unique_product",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_573_unique_product.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (long l : list_data) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uplqvza.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        HashSet<Long> set = new HashSet<>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                result *= l;\n                set.add(l);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187664,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        Set<Long> set = new HashSet<>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                result *= list_data.get(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for(long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_3b9gnbu.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> unique = new HashSet<Long>();\n        for(long i : list_data) {\n            if(!unique.contains(i)) {\n                product *= i;\n                unique.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            set.add(l);\n        }\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>(list_data);\n        for (Long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                set.add(l);\n                product *= l;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        HashSet<Long> set = new HashSet<Long>();\n        for (long num : list_data) {\n            if (!set.contains(num)) {\n                set.add(num);\n                product *= num;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            set.add(list_data.get(i));\n        }\n        for (Long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        long product = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == i) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                set.add(l);\n                product *= l;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187667,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwxg4gcj5.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (x, y) -> x * y);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppddgejg7.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>(list_data);\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187669,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(long i: list_data){\n            if(!set.contains(i)){\n                set.add(i);\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (Long num : list_data) {\n            if (list_data.indexOf(num) == list_data.lastIndexOf(num)) {\n                product *= num;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiakialq6.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                set.add(i);\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        Set<Long> set = new HashSet<Long>(list_data);\n        long product = 1;\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //long product = 1;\n        //for (int i = 0; i < list_data.size(); i++) {\n        //    product *= list_data.get(i);\n        //}\n        //return product;\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                product *= list_data.get(i);\n                set.add(list_data.get(i));\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187671,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here.\n        // Return the product of the unique numbers in the list.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187671,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6q27k96.java:16)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187671,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7cbancm.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>(list_data);\n        for(long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187672,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a,b) -> a*b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187672,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw73k51ku.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        long product = 1;\n        HashSet<Long> set = new HashSet<>();\n        for (long i : list_data) {\n            if (!set.contains(i)) {\n                product *= i;\n                set.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            set.add(list_data.get(i));\n        }\n        for (Long num : set) {\n            product *= num;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppkafg6pb.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        HashSet<Long> set = new HashSet<Long>();\n        for (long i : list_data) {\n            if (!set.contains(i)) {\n                set.add(i);\n                result *= i;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                result *= list_data.get(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187674,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponnpf2q3.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                set.add(l);\n                product *= l;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        HashSet<Long> set = new HashSet<Long>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                product *= i;\n                set.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        for (Long l : list_data) {\n            if (result % l != 0) {\n                result *= l;\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187675,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo6dcr5kx.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            set.add(l);\n        }\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw73k51ku.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (long number : list_data) {\n            if (list_data.indexOf(number) == list_data.lastIndexOf(number)) {\n                product *= number;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187676,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcgz372kn.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(Long l : list_data){\n            if(!set.contains(l)){\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187676,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                product *= list_data.get(i);\n                set.add(list_data.get(i));\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1l, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (long num : list_data) {\n            if (list_data.indexOf(num) == list_data.lastIndexOf(num)) {\n                product *= num;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187677,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1x1mm7gm.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>(list_data);\n        for (Long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187677,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce((x, y) -> x * y).get();\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(int i = 0; i < list_data.size(); i++) {\n            if(!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                result *= list_data.get(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            set.add(list_data.get(i));\n        }\n        for (Long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187678,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (long num : list_data) {\n            if (!set.contains(num)) {\n                product *= num;\n                set.add(num);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187679,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long num : list_data) {\n            if (!set.contains(num)) {\n                product *= num;\n                set.add(num);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(int i = 0; i < list_data.size(); i++){\n            set.add(list_data.get(i));\n        }\n        for(Long l : set){\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                set.add(l);\n                product *= l;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187674,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        long product = 1;\n        for (Long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187680,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjgkkf_8c.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187680,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu80cch3.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output please use System.out.println\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphmyby__a.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long l : list_data) {\n            if (!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        HashSet<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(Long i : list_data) {\n            set.add(i);\n        }\n        for(Long i : set) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187682,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(int i = 0; i < list_data.size(); i++) {\n            if(!set.contains(list_data.get(i))) {\n                product *= list_data.get(i);\n                set.add(list_data.get(i));\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (Long l : list_data) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187683,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gg9q499.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>(list_data);\n        for(Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            if (set.add(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187683,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long l : list_data) {\n            set.add(l);\n        }\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187675,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(long num : list_data){\n            if(!set.contains(num)){\n                product *= num;\n                set.add(num);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppkafg6pb.java:19)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (Long i : list_data) {\n            if (list_data.indexOf(i) == list_data.lastIndexOf(i)) {\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxzyarm4.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppddgejg7.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                set.add(i);\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187670,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here.\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                product *= i;\n                set.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187684,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                product *= i;\n                set.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187685,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(Long l : list_data) {\n            if(!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187685,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for(int i = 0; i < list_data.size(); i++) {\n            if(list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9qzg34x.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwu80cch3.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> unique = new HashSet<Long>();\n        for(Long num : list_data){\n            if(!unique.contains(num)){\n                unique.add(num);\n                product *= num;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> unique = new HashSet<Long>();\n        for (Long i : list_data) {\n            if (!unique.contains(i)) {\n                product *= i;\n                unique.add(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187686,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        long product = 1;\n        for (long i : list_data) {\n            product *= i;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187686,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppnw0g41_.java:18)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for(int i = 0; i < list_data.size(); i++){\n            if(list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))){\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187687,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsyw0xf20.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        //long product = 1;\n        //for(Long l : list_data) {\n        //    product *= l;\n        //}\n        //return product;\n        return list_data.stream().distinct().reduce(1L, (a,b) -> a*b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187687,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(int i = 0; i < list_data.size(); i++){\n            if(!set.contains(list_data.get(i))){\n                set.add(list_data.get(i));\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return list_data.stream().distinct().reduce(1L, (x, y) -> x * y);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdo3wus_.java:17)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(int i = 0; i < list_data.size(); i++) {\n            if(!set.contains(list_data.get(i))) {\n                set.add(list_data.get(i));\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187681,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(long i : list_data) {\n            if(!set.contains(i)) {\n                set.add(i);\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for (int i = 0; i < list_data.size(); i++) {\n            set.add(list_data.get(i));\n        }\n        for (Long l : set) {\n            product *= l;\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187688,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce((a, b) -> a * b).get();\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187689,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for (Long i : list_data) {\n            if (list_data.indexOf(i) == list_data.lastIndexOf(i)) {\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187685,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxzyarm4.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<Long>();\n        for(int i=0;i<list_data.size();i++){\n            if(!set.contains(list_data.get(i))){\n                product = product * list_data.get(i);\n                set.add(list_data.get(i));\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187689,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 1;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187689,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp84380a5f.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here.\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187668,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppddgejg7.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        long product = 1;\n        for (int i = 0; i < list_data.size(); i++) {\n            if (list_data.indexOf(list_data.get(i)) == list_data.lastIndexOf(list_data.get(i))) {\n                product *= list_data.get(i);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187673,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw73k51ku.java:21)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for(long l : list_data) {\n            if(!set.contains(l)) {\n                product *= l;\n                set.add(l);\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        return 0;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187663,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbaufuzs.java:15)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        for(long i : list_data){\n            if(!list_data.contains(i)){\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187690,
      "stdout": "",
      "stderr": "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5z7nsibv.java:23)\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long product = 1;\n        Set<Long> set = new HashSet<>();\n        for (Long i : list_data) {\n            if (!set.contains(i)) {\n                set.add(i);\n                product *= i;\n            }\n        }\n        return product;\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (x, y) -> x * y);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187690,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a javathon function to calculate the product of the unique numbers in a given array list.\n    public static long uniqueProduct(ArrayList<Long> list_data) {\n        return list_data.stream().distinct().reduce(1L, (a, b) -> a * b);\n    }\n    public static void main(String[] args) {\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l, (long)20l, (long)50l, (long)60l, (long)40l)))) == (720000000l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)1l)))) == (6l));\n    assert(uniqueProduct((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)0l, (long)1l, (long)1l)))) == (0l));\n    }\n\n}\n",
      "timestamp": 1667187665,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
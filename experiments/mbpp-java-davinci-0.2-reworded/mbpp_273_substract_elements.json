{
  "name": "mbpp_273_substract_elements",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that takes in two pairs and subtracts the elements of the first pair by the elements of the second pair with the same index.\n    public static long substractElements(long test_tup1, long test_tup2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_273_substract_elements.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(substractElements((long)Pair.with(10l, 4l, 5l), (long)Pair.with(2l, 5l, 18l)) == (long)Pair.with(8l, -1l, -13l));\n    assert(substractElements((long)Pair.with(11l, 2l, 3l), (long)Pair.with(24l, 45l, 16l)) == (long)Pair.with(-13l, -43l, -13l));\n    assert(substractElements((long)Pair.with(7l, 18l, 9l), (long)Pair.with(10l, 11l, 12l)) == (long)Pair.with(-3l, 7l, -3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        return test_tup1 - test_tup2;",
    "        // Write your code here\n        return test_tup1 - test_tup2;",
    "        // Write your code here\n        return 0;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        // Write your code here\n        return test_tup1 - test_tup2;",
    "        // Write your code here.\n        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        // Write your code here.\n        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;",
    "        return test_tup1 - test_tup2;"
  ]
}